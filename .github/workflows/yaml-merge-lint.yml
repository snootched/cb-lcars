# This is a basic workflow to help you get started with Actions

name: yaml-lint

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.

      - name: Create full yaml
        run: |
          ./create_full_yaml.sh --output cb-lcars-full.yaml --path cb-lcars
      
      - name: YAML Lint
        # You may pin to the exact commit or the version.
        # uses: ibiqlik/action-yamllint@2576378a8e339169678f9939646ee3ee325e845c
        uses: ibiqlik/action-yamllint@v3.1.1
        with:
          # File(s) or Directory, separate by space if multiple files or folder are specified
          file_or_dir: cb-lcars-full.yaml
          # Path to custom configuration
          #config_file: # optional
          # Custom configuration (as YAML source)
          #config_data: # optional
          # Format for parsing output [parsable,standard,colored,github,auto]
          format: parsable
          config_data: "{ rules: { line-length: disable, trailing-spaces: disable } }"
          # Return non-zero exit code on warnings as well as errors
          #strict: # optional, default is false
          # Output only error level problems
          #no_warnings: # optional, default is false

      - name: Create full yaml
        run: |
          ./create_full_yaml.sh --output cb-lcars-full.yaml --path cb-lcars
          
      - name: Git Auto Commit
        # You may pin to the exact commit or the version.
        # uses: stefanzweifel/git-auto-commit-action@8621497c8c39c72f3e2a999a26b4ca1b5058a842
        uses: stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          # Commit message
          commit_message: Add cb-lcars-full.yaml
          # optional, default is Apply automatic changes
          # Git branch name, where changes should be pushed too. Required if Action is used on the `pull_request` event
          #branch: # optional, default is ${{ github.head_ref }}
          # Commit options (eg. --no-verify)
          #commit_options: # optional, default is 
          # Add options (eg. -u)
          #add_options: # optional, default is 
          # Status options (eg. --untracked-files=no)
          #status_options: # optional, default is 
          # File pattern used for `git add`. For example `src/*.js`
          #file_pattern: # optional, default is .
          # Local file path to the git repository. Defaults to the current directory (`.`)
          #repository: # optional, default is .
          # Name used for the commit user
          #commit_user_name: # optional, default is github-actions[bot]
          # Email address used for the commit user
          #commit_user_email: # optional, default is 41898282+github-actions[bot]@users.noreply.github.com
          # Value used for the commit author. Defaults to the username of whoever triggered this workflow run.
          #commit_author: # optional, default is ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          # Message used to create a new git tag with the commit. Keep this empty, if no tag should be created.
          #tagging_message: # optional, default is 
          # Push options (eg. --force)
          #push_options: # optional, default is 
          # Skip the check if the git repository is dirty and always try to create a commit.
          #skip_dirty_check: # optional
          # Skip the call to git-fetch.
          #skip_fetch: # optional
          # Skip the call to git-checkout.
          #skip_checkout: # optional
          # Stop the shell from expanding filenames (https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html)
          #disable_globbing: # optional
          # Create new branch with the name of `branch`-input in local and remote repository, if it doesn't exist yet.
          #create_branch: # optional
          # Internal use only! Path to git binary used to check if git is available. (Don't change this!)
          #internal_git_binary: # optional, default is git
                
