name: Build Release

on:
  push:
    branches: [ "main" ]
    paths:
      - 'package.json'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build for Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm install

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists already
        uses: mukunku/tag-exists-action@v1.4.0
        id: check_tag
        with:
          tag: "v${{ steps.get_version.outputs.version }}"

      - name: Cancel if tag is already present
        run: |
          echo "Tag already present: v${{ steps.get_version.outputs.version }}. Not creating a new release"
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check_tag.outputs.exists == 'true'

      - name: Create full yaml
        run: |
          ./create_full_yaml.sh --output ./dist/cb-lcars-lovelace.yaml --path cb-lcars

      - name: Add version and manage_config to cb-lcars-lovelace.yaml
        run: |
          mkdir -p ./dist
          echo "cb-lcars:" > ./dist/temp.yaml
          echo "  version: ${{ steps.get_version.outputs.version }}" >> ./dist/temp.yaml
          echo "  manage_config: true" >> ./dist/temp.yaml
          cat ./dist/cb-lcars-lovelace.yaml >> ./dist/temp.yaml
          mv ./dist/temp.yaml ./dist/cb-lcars-lovelace.yaml
          echo "Head of generated cb-lcars-lovelace.yaml"
          head -10 ./dist/cb-lcars-lovelace.yaml

      - name: Lint YAML files
        uses: ibiqlik/action-yamllint@v3.1.1
        with:
          file_or_dir: ./dist/*.yaml
          format: parsable
          config_data: "{ rules: { line-length: disable, trailing-spaces: disable } }"

      - name: Upload YAML files
        uses: actions/upload-artifact@v4.3.6
        with:
          name: yaml-files
          path: ./dist/*.yaml

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: Add linted YAML files
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
          add: './dist/*.yaml --force'

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      deployments: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Get git sha
        id: get_sha
        run: echo "CURRENT_SHA=$(git log -1 --format='%H')" >> $GITHUB_ENV
  
      - name: Check if tag exists already
        uses: mukunku/tag-exists-action@v1.4.0
        id: check_tag
        with:
          tag: "v${{ needs.build.outputs.version }}"
  
      - name: Cancel if tag is already present
        run: |
          echo "Tag already present: v${{ needs.build.outputs.version }}. Not creating a new release"
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check_tag.outputs.exists == 'true'
  
      - name: Create new tag
        uses: rickstaa/action-create-tag@v1.7.2
        id: tag_create
        with:
          tag: "v${{ needs.build.outputs.version }}"
          commit_sha: "${{ env.CURRENT_SHA }}"
          tag_exists_error: false
          message: "Version ${{ needs.build.outputs.version }}"
  
      - name: Generate release changelog
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sinceTag: ${{ steps.last_release.outputs.tag_name }}
          headerLabel: "# Notable changes since ${{ steps.last_release.outputs.tag_name }}"
          stripGeneratorNotice: true
  
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ contains(needs.build.outputs.version, 'beta') }}
          body: "${{ steps.changelog.outputs.changelog }}"
          name: "Version ${{ needs.build.outputs.version }}"
          tag_name: "v${{ needs.build.outputs.version }}"
          target_commitish: "${{ env.CURRENT_SHA }}"
