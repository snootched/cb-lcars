cb-lcars-base:
  template:
    - cb-lcars-functions
    - cb-lcars-actions-disable
  label: '[[[ return variables.label ]]]'
  entity: '[[[ return variables.entity ]]]'
  variables:
    label: ' '
    text:
      label:
        font_size: 20px
        font_weight: normal
        align: left
        align_items: center
        justify: center
        transform: none
        padding:
          top: 10px
          left: 0px
          right: 0px
          bottom: 10px
        color:
          default: var(--primary-text-color)
          'on': var(--primary-text-color)
          'off': var(--primary-text-color)
          zero: var(--lcars-green)
          non_zero: var(--lcars-blue)
          hvac_heat: var(--lcars-orange)
          hvac_cool: var(--lcars-blue)
          hvac_other: var(--lcars-purple)
      name:
        font_size: 20px
        font_weight: normal
        align: left
        align_items: center
        justify: center
        transform: none
        padding:
          top: 10px
          left: 0px
          right: 0px
          bottom: 10px
        color:
          default: var(--primary-text-color)
          'on': var(--primary-text-color)
          'off': var(--primary-text-color)
          zero: var(--lcars-green)
          non_zero: var(--lcars-blue)
          hvac_heat: var(--lcars-orange)
          hvac_cool: var(--lcars-blue)
          hvac_other: var(--lcars-purple)
      state:
        font_size: 20px
        font_weight: normal
        align: left
        align_items: center
        justify: center
        transform: none
        padding:
          top: 10px
          left: 0px
          right: 0px
          bottom: 10px
        color:
          default: var(--primary-text-color)
          'on': var(--primary-text-color)
          'off': var(--primary-text-color)
          zero: var(--lcars-green)
          non_zero: var(--lcars-blue)
          hvac_heat: var(--lcars-orange)
          hvac_cool: var(--lcars-blue)
          hvac_other: var(--lcars-purple)
    card:
      height: null
      min_height: 10px
      width: null
      color:
        active: var(--lcars-ui-secondary)
        inactive: var(--lcars-ui-tertiary)
        background:
          default: none
          active: transparent
          inactive: transparent
      border:
        top:
          left_radius: 0px
          right_radius: 0px
          size: 0px
        bottom:
          left_radius: 0px
          right_radius: 0px
          size: 0px
        left:
          size: 0px
        right:
          size: 0px
        inner:
          factor: 2
          min_radius: 30px
          width: 35px
        color: var(--lcars-card-top-color)
    icon:
      box_size: 35px
      size: 24px
      justify: left
      color:
        default: black
        active: null
        inactive: null
        background:
          active: null
          inactive: null
  show_label: false
  show_state: false
  show_icon: false
  show_name: false
  styles:
    img_cell:
      - justify-content: '[[[ return variables.icon.justify ]]]'
    card:
      - height: '[[[ return variables.__get_num_with_unit(variables.card.height); ]]]'
      - min-height: '[[[ return variables.__get_num_with_unit(variables.card.min_height); ]]]'
      - width: '[[[ return variables.__get_num_with_unit(variables.card.width); ]]]'
      - border-top: |
          [[[
            return variables.__get_num_with_unit(variables.card.border.top.size) + " solid " + (variables.card.border.top.color || variables.card.border.color);
          ]]]
      - border-left: |
          [[[
            return variables.__get_num_with_unit(variables.card.border.left.size) + " solid " + (variables.card.border.left.color || variables.card.border.color);
          ]]]
      - border-right: |
          [[[
            return variables.__get_num_with_unit(variables.card.border.right.size) + " solid " + (variables.card.border.right.color || variables.card.border.color);
          ]]]
      - border-bottom: |
          [[[
            return variables.__get_num_with_unit(variables.card.border.bottom.size) + " solid " + (variables.card.border.bottom.color || variables.card.border.color);
          ]]]
      - background: '[[[ return variables.card.color.background.default ]]]'
      - border-top-left-radius: |
          [[[
            return variables.__get_num_with_unit(variables.card.border.top.left_radius) + " !important";
          ]]]
      - border-top-right-radius: |
          [[[
            return variables.__get_num_with_unit(variables.card.border.top.right_radius) + " !important";
          ]]]
      - border-bottom-left-radius: |
          [[[
            return variables.__get_num_with_unit(variables.card.border.bottom.left_radius) + " !important";
          ]]]
      - border-bottom-right-radius: |
          [[[
            return variables.__get_num_with_unit(variables.card.border.bottom.right_radius) + " !important";
          ]]]
      - position: relative
    label:
      - display: flex
      - justify-content: '[[[ return variables.text.label.justify ]]]'
      - align-items: '[[[ return variables.text.label.align_items ]]]'
      - text-transform: '[[[ return variables.text.label.transform ]]]'
      - border-left: 0
      - border-top: 0
      - border-top-left-radius: 0px
      - border-top-right-radius: 0px
      - background: none !important
      - position: absolute
      - top: 0px
      - left: 0px
      - width: >-
          [[[ return "calc(100% - " + variables.__get_num_with_unit(variables.text.label.padding.left) + " - " + variables.__get_num_with_unit(variables.text.label.padding.right) + ")"; ]]]
      - height: >-
          [[[ return "calc(100% - " + variables.__get_num_with_unit(variables.text.label.padding.top) + " - " + variables.__get_num_with_unit(variables.text.label.padding.bottom) + ")"; ]]]
      - color: '[[[ return variables.text.label.color.default ]]]'
      - font-size: |
          [[[
            return variables.__get_num_with_unit(variables.text.label.font_size);
          ]]]
      - font-weight: '[[[ return variables.text.label.font_weight ]]]'
      - font-family: '''Antonio'', Arial, sans-serif'
      - justify-self: start
      - text-align: '[[[ return variables.text.label.align ]]]'
      - padding-top: '[[[ return variables.__get_num_with_unit(variables.text.label.padding.top) ]]]'
      - padding-left: '[[[ return variables.__get_num_with_unit(variables.text.label.padding.left) ]]]'
      - padding-right: '[[[ return variables.__get_num_with_unit(variables.text.label.padding.right) ]]]'
      - padding-bottom: '[[[ return variables.__get_num_with_unit(variables.text.label.padding.bottom) ]]]'
      - outline: >-
          [[[ return variables.__get_num_with_unit(variables.card.border.inner.width) + " solid " + variables.card.border.color; ]]]
    state:
      - display: flex
      - justify-content: '[[[ return variables.text.state.justify ]]]'
      - align-items: '[[[ return variables.text.state.align_items ]]]'
      - text-transform: '[[[ return variables.text.state.transform ]]]'
      - border-left: 0
      - border-top: 0
      - border-top-left-radius: 0px
      - border-top-right-radius: 0px
      - background: none !important
      - position: absolute
      - top: 0px
      - left: 0px
      - width: >-
          [[[ return "calc(100% - " + variables.__get_num_with_unit(variables.text.state.padding.left) + " - " + variables.__get_num_with_unit(variables.text.state.padding.right) + ")"; ]]]
      - height: >-
          [[[ return "calc(100% - " + variables.__get_num_with_unit(variables.text.state.padding.top) + " - " + variables.__get_num_with_unit(variables.text.state.padding.bottom) + ")"; ]]]
      - color: '[[[ return variables.text.state.color.default ]]]'
      - font-size: |
          [[[
            return variables.__get_num_with_unit(variables.text.state.font_size);
          ]]]
      - font-weight: '[[[ return variables.text.state.font_weight ]]]'
      - font-family: '''Antonio'', Arial, sans-serif'
      - justify-self: start
      - text-align: '[[[ return variables.text.state.align ]]]'
      - padding-top: '[[[ return variables.__get_num_with_unit(variables.text.state.padding.top) ]]]'
      - padding-left: '[[[ return variables.__get_num_with_unit(variables.text.state.padding.left) ]]]'
      - padding-right: '[[[ return variables.__get_num_with_unit(variables.text.state.padding.right) ]]]'
      - padding-bottom: '[[[ return variables.__get_num_with_unit(variables.text.state.padding.bottom) ]]]'
      - outline: >-
          [[[ return variables.__get_num_with_unit(variables.card.border.inner.width) + " solid " + variables.card.border.color; ]]]
    name:
      - display: flex
      - justify-content: '[[[ return variables.text.name.justify ]]]'
      - align-items: '[[[ return variables.text.name.align_items ]]]'
      - text-transform: '[[[ return variables.text.name.transform ]]]'
      - border-left: 0
      - border-top: 0
      - border-top-left-radius: 0px
      - border-top-right-radius: 0px
      - background: none !important
      - position: absolute
      - top: 0px
      - left: 0px
      - width: >-
          [[[ return "calc(100% - " + variables.__get_num_with_unit(variables.text.name.padding.left) + " - " + variables.__get_num_with_unit(variables.text.name.padding.right) + ")"; ]]]
      - height: >-
          [[[ return "calc(100% - " + variables.__get_num_with_unit(variables.text.name.padding.top) + " - " + variables.__get_num_with_unit(variables.text.name.padding.bottom) + ")"; ]]]
      - color: '[[[ return variables.text.name.color.default ]]]'
      - font-size: |
          [[[
              return variables.__get_num_with_unit(variables.text.name.font_size);
          ]]]
      - font-weight: '[[[ return variables.text.name.font_weight ]]]'
      - font-family: '''Antonio'', Arial, sans-serif'
      - justify-self: start
      - text-align: '[[[ return variables.text.name.align ]]]'
      - padding-top: '[[[ return variables.__get_num_with_unit(variables.text.name.padding.top) ]]]'
      - padding-left: '[[[ return variables.__get_num_with_unit(variables.text.name.padding.left) ]]]'
      - padding-right: '[[[ return variables.__get_num_with_unit(variables.text.name.padding.right) ]]]'
      - padding-bottom: '[[[ return variables.__get_num_with_unit(variables.text.name.padding.bottom) ]]]'
      - outline: >-
          [[[ return variables.__get_num_with_unit(variables.card.border.inner.width) + " solid " + variables.card.border.color; ]]]
  state:
    - value: 'on'
      id: state_on
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.active ]]]'
          - border-top: |
              [[[
                return variables.__get_num_with_unit(variables.card.border.top.size) + " solid " + variables.card.color.active;
              ]]]
          - border-left: |
              [[[
                return variables.__get_num_with_unit(variables.card.border.left.size) + " solid " + variables.card.color.active;
              ]]]
          - border-right: |
              [[[
                return variables.__get_num_with_unit(variables.card.border.right.size) + " solid " + variables.card.color.active;
              ]]]
          - border-bottom: |
              [[[
                return variables.__get_num_with_unit(variables.card.border.bottom.size) + " solid " + variables.card.color.active;
              ]]]
        state:
          - color: '[[[ return variables.text.state.color.on ]]]'
          - outline: >-
              [[[ return variables.__get_num_with_unit(variables.card.border.inner.width) + " solid " + variables.card.color.active; ]]]
        label:
          - color: '[[[ return variables.text.label.color.on ]]]'
          - outline: >-
              [[[ return variables.__get_num_with_unit(variables.card.border.inner.width) + " solid " + variables.card.color.active; ]]]
        name:
          - color: '[[[ return variables.text.name.color.on ]]]'
          - outline: >-
              [[[ return variables.__get_num_with_unit(variables.card.border.inner.width) + " solid " + variables.card.color.active; ]]]
        icon:
          - color: >-
              [[[ return variables.icon.color.active || variables.icon.color.default ]]]
          - background: >-
              [[[ return variables.icon.color.background.active || variables.card.color.background.active ]]]
    - value: 'off'
      id: state_off
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.inactive ]]]'
          - border-top: |
              [[[
                return variables.__get_num_with_unit(variables.card.border.top.size) + " solid " + variables.card.color.inactive;
              ]]]
          - border-left: |
              [[[
                return variables.__get_num_with_unit(variables.card.border.left.size) + " solid " + variables.card.color.inactive;
              ]]]
          - border-right: |
              [[[
                return variables.__get_num_with_unit(variables.card.border.right.size) + " solid " + variables.card.color.inactive;
              ]]]
          - border-bottom: |
              [[[
                return variables.__get_num_with_unit(variables.card.border.bottom.size) + " solid " + variables.card.color.inactive;
              ]]]
        state:
          - color: '[[[ return variables.text.state.color.off ]]]'
          - outline: >-
              [[[ return variables.__get_num_with_unit(variables.card.border.inner.width) + " solid " + variables.card.color.inactive; ]]]
        label:
          - color: '[[[ return variables.text.label.color.off ]]]'
          - outline: >-
              [[[ return variables.__get_num_with_unit(variables.card.border.inner.width) + " solid " + variables.card.color.inactive; ]]]
        name:
          - color: '[[[ return variables.text.name.color.off ]]]'
          - outline: >-
              [[[ return variables.__get_num_with_unit(variables.card.border.inner.width) + " solid " + variables.card.color.inactive; ]]]
        icon:
          - color: >-
              [[[ return variables.icon.color.inactive || variables.icon.color.default ]]]
          - background: >-
              [[[ return variables.icon.color.background.inactive || variables.card.color.background.inactive ]]]
    - value: open
      id: state_open
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.active ]]]'
          - color: '[[[ return variables.card.color.active ]]]'
        state:
          - color: '[[[ return variables.text.state.color.on ]]]'
        label:
          - color: '[[[ return variables.text.label.color.on ]]]'
        name:
          - color: '[[[ return variables.text.name.color.on ]]]'
    - value: closed
      id: state_closed
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.inactive ]]]'
          - color: '[[[ return variables.card.color.inactive ]]]'
        state:
          - color: '[[[ return variables.text.state.color.off ]]]'
        label:
          - color: '[[[ return variables.text.label.color.off ]]]'
        name:
          - color: '[[[ return variables.text.name.color.off ]]]'
    - value: heat
      id: state_heat
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.inactive ]]]'
        state:
          - color: '[[[ return variables.text.state.color.hvac_heat ]]]'
        label:
          - color: '[[[ return variables.text.label.color.hvac_heat ]]]'
        name:
          - color: '[[[ return variables.text.name.color.hvac_heat ]]]'
    - value: cool
      id: state_cool
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.inactive ]]]'
        state:
          - color: '[[[ return variables.text.state.color.hvac_cool ]]]'
        label:
          - color: '[[[ return variables.text.label.color.hvac_cool ]]]'
        name:
          - color: '[[[ return variables.text.name.color.hvac_cool ]]]'
    - operator: template
      value: |
        [[[
          return entity !== undefined && ['00', '0'].includes(states[entity.entity_id].state);
        ]]]
      id: state_zero
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.inactive ]]]'
        state:
          - color: '[[[ return variables.text.state.color.zero ]]]'
        label:
          - color: '[[[ return variables.text.label.color.zero ]]]'
        name:
          - color: '[[[ return variables.text.name.color.zero ]]]'
    - operator: template
      value: |
        [[[
          return entity !== undefined && states[entity.entity_id].state !== '0';
        ]]]
      id: state_nonzero
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.inactive ]]]'
        state:
          - color: '[[[ return variables.text.state.color.non_zero ]]]'
        label:
          - color: '[[[ return variables.text.label.color.non_zero ]]]'
        name:
          - color: '[[[ return variables.text.name.color.non_zero ]]]'
    - operator: default
      id: state_default
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.inactive ]]]'
        state:
          - color: '[[[ return variables.text.state.color.default ]]]'
        label:
          - color: '[[[ return variables.text.label.color.default ]]]'
        name:
          - color: '[[[ return variables.text.name.color.default ]]]'
        icon:
          - color: >-
              [[[ return variables.icon.color.inactive || variables.icon.color.default ]]]
          - background: >-
              [[[ return variables.icon.color.background.inactive || variables.card.color.background.inactive ]]]

