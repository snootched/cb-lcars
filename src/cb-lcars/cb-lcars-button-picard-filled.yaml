cb-lcars-button-picard-filled:
  template: cb-lcars-button-base
  variables:
    text:
      label:
        font_weight: normal
        font_size: 22px
        align_items: center
        padding:
          top: 0px
          left: 10px
          right: 10px
          bottom: 5px
        color:
          default: black
          active: black
          inactive: black
          zero: black
          non_zero: black
          hvac_heat: black
          hvac_cool: black
          hvac_other: black
      state:
        font_weight: normal
        font_size: 22px
        align_items: center
        padding:
          top: 0px
          left: 10px
          right: 10px
          bottom: 5px
        color:
          default: black
          active: black
          inactive: black
          zero: black
          non_zero: black
          hvac_heat: black
          hvac_cool: black
          hvac_other: black
      name:
        font_weight: normal
        font_size: 22px
        align_items: center
        padding:
          top: 0px
          left: 10px
          right: 10px
          bottom: 5px
        color:
          default: black
          active: black
          inactive: black
          zero: black
          non_zero: black
          hvac_heat: black
          hvac_cool: black
          hvac_other: black
    icon:
      color:
        default: black
      justify: left
      border:
        top:
          size: 0px
          color: transparent
        bottom:
          size: 0px
          color: transparent
        right:
          size: 6px
          color: black
          padding: 1.5%
          margin: 0
        left:
          size: 6px
          color: transparent
          padding: 0.5%
          margin: null
  state:
    - id: state_on
      operator: template
      value: |
        [[[
          return entity !== undefined && ['on', 'open', 'locked'].includes(states[entity.entity_id].state)
        ]]]
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.active ]]]'
          - border-top: >-
              [[[ return variables.card.border.top.size + " solid " +
              variables.card.color.active ]]]
          - border-left: >-
              [[[ return variables.card.border.left.size + " solid " +
              variables.card.color.active ]]]
          - border-right: >-
              [[[ return variables.card.border.right.size + " solid " +
              variables.card.color.active ]]]
          - border-bottom: >-
              [[[ return variables.card.border.bottom.size + " solid " +
              variables.card.color.active ]]]
        state:
          - color: '[[[ return variables.text.state.color.active ]]]'
        label:
          - color: '[[[ return variables.text.label.color.active ]]]'
        name:
          - color: '[[[ return variables.text.name.color.active ]]]'
        icon:
          - color: >-
              [[[ return variables.icon.color.active ||
              variables.icon.color.default ]]]
          - background: >-
              [[[ return variables.icon.color.background.active ||
              variables.card.color.background.active ]]]
    - id: state_off
      operator: template
      value: |
        [[[
          return entity !== undefined && ['off', 'closed', 'unlocked'].includes(states[entity.entity_id].state)
        ]]]
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.inactive ]]]'
          - border-top: >-
              [[[ return variables.card.border.top.size + " solid " +
              variables.card.color.inactive ]]]
          - border-left: >-
              [[[ return variables.card.border.left.size + " solid " +
              variables.card.color.inactive ]]]
          - border-right: >-
              [[[ return variables.card.border.right.size + " solid " +
              variables.card.color.inactive ]]]
          - border-bottom: >-
              [[[ return variables.card.border.bottom.size + " solid " +
              variables.card.color.inactive ]]]
        state:
          - color: '[[[ return variables.text.state.color.inactive ]]]'
        label:
          - color: '[[[ return variables.text.label.color.inactive ]]]'
        name:
          - color: '[[[ return variables.text.name.color.inactive ]]]'
        icon:
          - color: >-
              [[[ return variables.icon.color.inactive ||
              variables.icon.color.default ]]]
          - background: >-
              [[[ return variables.icon.color.background.inactive ||
              variables.card.color.background.inactive ]]]
    - value: heat
      id: state_heat
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.hvac_heat ]]]'
        state:
          - color: '[[[ return variables.text.state.color.hvac_heat ]]]'
        label:
          - color: '[[[ return variables.text.label.color.hvac_heat ]]]'
        name:
          - color: '[[[ return variables.text.name.color.hvac_heat ]]]'
    - value: cool
      id: state_cool
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.hvac_cool ]]]'
        state:
          - color: '[[[ return variables.text.state.color.hvac_cool ]]]'
        label:
          - color: '[[[ return variables.text.label.color.hvac_cool ]]]'
        name:
          - color: '[[[ return variables.text.name.color.hvac_cool ]]]'
    - operator: template
      value: |
        [[[
          if (entity === undefined) return false;
          return entity !== undefined && Number(states[entity.entity_id].state) === 0;
        ]]]
      id: state_zero
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.zero ]]]'
        state:
          - color: '[[[ return variables.text.state.color.zero ]]]'
        label:
          - color: '[[[ return variables.text.label.color.zero ]]]'
        name:
          - color: '[[[ return variables.text.name.color.zero ]]]'
    - operator: template
      value: |
        [[[
          if (entity === undefined) return false;
          return entity !== undefined && Number(states[entity.entity_id].state) !== 0;

        ]]]
      id: state_nonzero
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.non_zero ]]]'
        state:
          - color: '[[[ return variables.text.state.color.non_zero ]]]'
        label:
          - color: '[[[ return variables.text.label.color.non_zero ]]]'
        name:
          - color: '[[[ return variables.text.name.color.non_zero ]]]'
    - operator: default
      id: state_default
      styles:
        card:
          - background-color: '[[[ return variables.card.color.background.default ]]]'
        state:
          - color: '[[[ return variables.text.state.color.default ]]]'
        label:
          - color: '[[[ return variables.text.label.color.default ]]]'
        name:
          - color: '[[[ return variables.text.name.color.default ]]]'
        icon:
          - color: >-
              [[[ return variables.icon.color.inactive ||
              variables.icon.color.default ]]]
          - background: >-
              [[[ return variables.icon.color.background.inactive ||
              variables.card.color.background.inactive ]]]
cb-lcars-button-picard-filled-dense:
  template: cb-lcars-button-picard-filled
  variables:
    card:
      height: 50px
cb-lcars-button-picard-filled-right:
  template: cb-lcars-button-picard-filled
  variables:
    text:
      label:
        justify: left
      state:
        justify: left
      name:
        justify: left

    icon:
      color:
        default: black
      justify: right
      border:
        top:
          size: 0px
          color: transparent
        bottom:
          size: 0px
          color: transparent
        left:
          size: 6px
          color: black
          padding: 1.5%
          margin: 0
        right:
          size: 6px
          color: transparent
          padding: 0.5%
          margin: null
cb-lcars-button-picard-filled-dense-right:
  template: cb-lcars-button-picard-filled-right
  variables:
    card:
      height: 50px
