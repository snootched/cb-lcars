cb-lcars-header-base:
  template:
    - cb-lcars-button-base
    - cb-lcars-functions
  variables:
    label: ' '
    text:
      label:
        font_size: 20px
        font_weight: normal
        align: left
        align_items: flex-start
        justify: flex-start
        color:
          default: var(--primary-text-color)
          'on': var(--primary-text-color)
          'off': var(--primary-text-color)
          zero: var(--lcars-green)
          non_zero: var(--lcars-blue)
          hvac_heat: var(--lcars-orange)
          hvac_cool: var(--lcars-blue)
          hvac_other: var(--lcars-purple)
    card:
      color:
        background:
          default: transparent
          active: transparent
          inactive: transparent
          unavailable: transparent

cb-lcars-header:
  template:
    - cb-lcars-header-base
  show_label: true
  variables:
    card:
      border:
        top:
          size: 20px
          left_radius: var(--ha-card-border-radius)
        left:
          size: 90px
    text:
      label:
        padding:
          top: 10px
          left: 20px
          right: 0px
          bottom: 10px
        align: left
        justify: left
      state:
        padding:
          top: 10px
          left: 20px
          right: 0px
          bottom: 10px
        align: left
        justify: left
      name:
        padding:
          top: 10px
          left: 20px
          right: 0px
          bottom: 10px
        align: left
        justify: left
  styles:
    label:
      - border-top-right-radius: 0px
      - border-top-left-radius: |
          [[[
              let leftRadius = variables.card.border.top.left_radius;
              let leftRadiusWithUnit = isNaN(leftRadius) ? leftRadius : leftRadius + 'px';
              return "calc(" + leftRadiusWithUnit + " / " + variables.card.border.inner.factor + ")";
          ]]]
cb-lcars-header-open:
  template:
    - cb-lcars-header-base
  show_label: true
  variables:
    card:
      border:
        top:
          size: 20px
cb-lcars-header-contained:
  template:
    - cb-lcars-header-open
  variables:
    card:
      min_height: 10px
      border:
        left:
          size: 50px
        right:
          size: 50px
        top:
          size: 10px
          left_radius: var(--ha-card-border-radius)
          right_radius: var(--ha-card-border-radius)
        bottom:
          left_radius: 0px
          right_radius: 0px
  styles:
    label:
      - border-top-left-radius: |
          [[[
              let leftRadius = variables.card.border.top.left_radius;
              let leftRadiusWithUnit = isNaN(leftRadius) ? leftRadius : leftRadius + 'px';
              return "calc(" + leftRadiusWithUnit + " / " + variables.card.border.inner.factor + ")";
          ]]]

      - border-top-right-radius: |
          [[[
              let rightRadius = variables.card.border.top.right_radius;
              let rightRadiusWithUnit = isNaN(rightRadius) ? rightRadius : rightRadius + 'px';
              return "calc(" + rightRadiusWithUnit + " / " + variables.card.border.inner.factor + ")";
          ]]]

cb-lcars-header-right:
  template:
    - cb-lcars-header-base
  show_label: true
  variables:
    card:
      border:
        top:
          size: 20px
          left_radius: 0px
          right_radius: var(--ha-card-border-radius)
        right:
          size: 90px
        bottom:
          right_radius: 0px
    text:
      label:
        padding:
          top: 10px
          left: 0px
          right: 20px
          bottom: 10px
        align: left
        justify: right
      state:
        padding:
          top: 10px
          left: 0px
          right: 20px
          bottom: 10px
        align: left
        justify: right
      name:
        padding:
          top: 10px
          left: 0px
          right: 20px
          bottom: 10px
        align: left
        justify: right
  styles:
    label:
      - border-top-left-radius: 0px
      - border-top-right-radius: |
          [[[
              let rightRadius = variables.card.border.top.right_radius;
              let rightRadiusWithUnit = isNaN(rightRadius) ? rightRadius : rightRadius + 'px';
              return "calc(" + rightRadiusWithUnit + " / " + variables.card.border.inner.factor + ")";
          ]]]

