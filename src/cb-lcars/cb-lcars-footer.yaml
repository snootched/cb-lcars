cb-lcars-footer-base:
  template:
    - cb-lcars-functions
    - cb-lcars-button-base
    - cb-lcars-symbiont
  variables:
    label: ' '
    text:
      label:
        font_size: 20px
        font_weight: normal
        align: left
        align_items: flex-start
        justify: flex-start
        color:
          default: var(--primary-text-color)
          active: var(--primary-text-color)
          inactive: var(--primary-text-color)
          zero: var(--lcars-green)
          non_zero: var(--lcars-blue)
          hvac_heat: var(--lcars-orange)
          hvac_cool: var(--lcars-blue)
          hvac_other: var(--lcars-purple)
          unavailable: var(--lcars-card-button-unavailable)
    state:
      label:
        font_size: 20px
        font_weight: normal
        align: left
        align_items: flex-start
        justify: flex-start
        color:
          default: var(--primary-text-color)
          active: var(--primary-text-color)
          inactive: var(--primary-text-color)
          zero: var(--lcars-green)
          non_zero: var(--lcars-blue)
          hvac_heat: var(--lcars-orange)
          hvac_cool: var(--lcars-blue)
          hvac_other: var(--lcars-purple)
          unavailable: var(--lcars-card-button-unavailable)
    name:
      label:
        font_size: 20px
        font_weight: normal
        align: left
        align_items: flex-start
        justify: flex-start
        color:
          default: var(--primary-text-color)
          active: var(--primary-text-color)
          inactive: var(--primary-text-color)
          zero: var(--lcars-green)
          non_zero: var(--lcars-blue)
          hvac_heat: var(--lcars-orange)
          hvac_cool: var(--lcars-blue)
          hvac_other: var(--lcars-purple)
          unavailable: var(--lcars-card-button-unavailable)
    card:
      color:
        background:
          default: transparent
          active: transparent
          inactive: transparent
          unavailable: transparent
      border:
        color: var(--lcars-card-bottom-color)
  styles:
    label:
      - z-index: 2
    name:
      - z-index: 2
    state:
      - z-index: 2
cb-lcars-footer:
  template:
    - cb-lcars-footer-base
  show_label: true
  variables:
    card:
       border:
        left:
          size: 90px
        bottom:
          size: 20px
          left_radius: var(--ha-card-border-radius)
    text:
      label:
        padding:
          top: 10px
          left: 20px
          right: 0px
          bottom: 10px
        align: left
        justify: left
      state:
        padding:
          top: 10px
          left: 20px
          right: 0px
          bottom: 10px
        align: left
        justify: left
      name:
        padding:
          top: 10px
          left: 20px
          right: 0px
          bottom: 10px
        align: left
        justify: left
  styles:
    label:
      - border-bottom-left-radius: |
          [[[
              let leftRadius = variables.card.border.bottom.left_radius;
              let leftRadiusWithUnit = isNaN(leftRadius) ? leftRadius : leftRadius + 'px';
              return "calc(" + leftRadiusWithUnit + " / " + variables.card.border.inner.factor + ")";
          ]]]
      - border-bottom-right-radius: 0px
cb-lcars-footer-open:
  template:
    - cb-lcars-footer-base
  show_label: true
  variables:
    card:
      border:
        bottom:
          size: 20px
cb-lcars-footer-contained:
  template:
    - cb-lcars-footer-open
  show_label: true
  variables:
    card:
      min_height: 10px
      border:
        left:
          size: 50px
        right:
          size: 50px
        bottom:
          size: 10px
          left_radius: var(--ha-card-border-radius)
          right_radius: var(--ha-card-border-radius)
        top:
          left_radius: 0px
          right_radius: 0px
  styles:
    label:
      - border-bottom-left-radius: |
          [[[
              let leftRadius = variables.card.border.bottom.left_radius;
              let leftRadiusWithUnit = isNaN(leftRadius) ? leftRadius : leftRadius + 'px';
              return "calc(" + leftRadiusWithUnit + " / " + variables.card.border.inner.factor + ")";
          ]]]
      - border-bottom-right-radius: |
          [[[
              let rightRadius = variables.card.border.bottom.right_radius;
              let rightRadiusWithUnit = isNaN(rightRadius) ? rightRadius : rightRadius + 'px';
              return "calc(" + rightRadiusWithUnit + " / " + variables.card.border.inner.factor + ")";
          ]]]
cb-lcars-footer-right:
  template:
    - cb-lcars-footer-base
  show_label: true
  variables:
    card:
      border:
        right:
          size: 90px
        bottom:
          size: 20px
          right_radius: var(--ha-card-border-radius)
    text:
      label:
        padding:
          top: 10px
          left: 0px
          right: 20px
          bottom: 10px
        align: left
        justify: right
      state:
        padding:
          top: 10px
          left: 0px
          right: 20px
          bottom: 10px
        align: left
        justify: right
      name:
        padding:
          top: 10px
          left: 0px
          right: 20px
          bottom: 10px
        align: left
        justify: right
  styles:
    label:
      - border-bottom-left-radius: 0px
      - border-bottom-right-radius: |
          [[[
              let rightRadius = variables.card.border.bottom.right_radius;
              let rightRadiusWithUnit = isNaN(rightRadius) ? rightRadius : rightRadius + 'px';
              return "calc(" + rightRadiusWithUnit + " / " + variables.card.border.inner.factor + ")";
          ]]]
