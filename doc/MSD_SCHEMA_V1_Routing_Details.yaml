# LCARS MSD Supplementary Example: Global and Per-Overlay Routing/Style Options
# Including Unified Overlay-to-Overlay Attachment System

msd:
  # --- Global Routing Configuration ---
  routing:
    default_mode: manhattan                # Default routing mode for overlays
    clearance: 8                           # Default minimum px from obstacles
    grid_resolution: 56                    # Routing grid size (px)
    channel_target_coverage: 0.6           # Channel coverage goal for 'prefer'
    channel_shaping_max_attempts: 12       # Max elbow adjustments for channel shaping
    channel_shaping_span: 32               # px shift per attempt
    channel_min_coverage_gain: 0.04        # Minimum coverage delta to accept adjustment
    grid_resolution_multipliers: [1, 1.5, 2] # Advanced grid tuning
    grid_resolution_max: 320               # Max grid resolution
    smart_proximity: 6                     # Smart routing proximity tuning
    cost_defaults:                         # Routing cost weights
      distance: 1
      bend: 12
      proximity: 4
      channel: 0.6
      spacing: 8
    fallback:
      max_cost_multiple: 4.0
      enable_two_elbow: true
    channels:                              # Channel definitions for channel-aware routing
      - id: main_bus
        rect: [400, 200, 800, 120]
      - id: aux_bus
        rect: [400, 600, 800, 120]
    smoothing_mode: none                   # Default smoothing: none | chaikin
    smoothing_iterations: 0                # Default smoothing passes
    smoothing_max_points: 160              # Default max points after smoothing

  overlays:
    # --- Example overlays to demonstrate attachment capabilities ---
    - id: cpu_sparkline
      type: sparkline
      position: [100, 100]
      size: [200, 60]
      source: cpu_usage

    - id: memory_status
      type: status_grid
      position: [400, 100]
      size: [150, 120]

    - id: power_control
      type: control
      position: [600, 200]
      size: [100, 80]
      card_type: button

    - id: system_title
      type: text
      position: [100, 50]
      text: "System Status"

    # --- Line using only global routing options ---
    - id: line_global_defaults
      type: line
      anchor: cpu_sparkline                 # Can anchor to ANY overlay type
      attach_to: memory_status              # Can attach to ANY overlay type
      style:
        color: var(--lcars-orange)
        width: 2
        # No per-overlay routing options; uses global defaults

    # --- Advanced line with overlay-to-overlay attachment ---
    - id: line_overlay_to_overlay
      type: line
      anchor: cpu_sparkline                 # Source: sparkline overlay
      anchor_side: right                    # Attach from RIGHT side of sparkline
      anchor_gap: 8                         # Gap from sparkline edge
      attach_to: memory_status              # Target: status grid overlay
      attach_side: top-left                 # Attach to TOP-LEFT corner of grid
      attach_gap: 12                        # Gap from grid edge
      route: grid                           # Per-overlay routing strategy
      route_mode: grid                      # Explicit routing mode
      route_mode_last: yx                   # Last segment: vertical last (approach to end)
      route_mode_full: grid                 # Advanced routing mode
      route_channels: [main_bus]            # Channel-aware routing
      channel_mode: force                   # Channel mode: prefer | avoid | force
      clearance: 16                         # Override global clearance
      proximity: 10                         # Override global proximity
      corner_style: round                   # Elbow style: round | bevel | miter
      corner_radius: 20                     # Arc radius for round elbows
      smoothing_mode: chaikin               # Override global smoothing
      smoothing_iterations: 3               # Override global smoothing passes
      smoothing_max_points: 100             # Override global max points

      style:
        color: var(--lcars-yellow)
        width: 4
        opacity: 0.9
        line_cap: round
        line_join: round
        miter_limit: 8
        dash_array: "10,4"
        dash_offset: 3
        fill: none
        fill_opacity: 1
        gradient:
          type: linear
          direction: horizontal
          stops:
            - offset: "0%"
              color: "#fff200"
            - offset: "100%"
              color: "#ff6600"
        pattern:
          type: grid
          size: 6
          color: "#fff"
          opacity: 0.2
        marker_start:
          type: arrow
          size: medium
          color: var(--lcars-yellow)
          rotate: true
        marker_end:
          type: dot
          size: small
          color: var(--lcars-orange)
        glow:
          color: var(--lcars-yellow)
          size: 8
          opacity: 0.5
        shadow:
          color: "rgba(0,0,0,0.3)"
          offset: [2, 2]
          blur: 3
        animatable: true
        pulse_speed: 900
        flow_speed: 600
        segment_colors:
          - color: var(--lcars-yellow)
            start: 0
            end: 0.7
          - color: var(--lcars-orange)
            start: 0.7
            end: 1
        status_indicator: "active"

      animation_ref: pulse_fast

    # --- Chained overlay connections ---
    - id: line_chain_1
      type: line
      anchor: system_title                  # Text overlay
      anchor_side: bottom
      attach_to: cpu_sparkline             # Sparkline overlay
      attach_side: top-left
      style:
        color: var(--lcars-blue)
        width: 2

    - id: line_chain_2
      type: line
      anchor: cpu_sparkline                # Sparkline overlay
      anchor_side: bottom-right
      attach_to: memory_status             # Status grid overlay
      attach_side: left
      style:
        color: var(--lcars-green)
        width: 2

    - id: line_chain_3
      type: line
      anchor: memory_status                # Status grid overlay
      anchor_side: right
      attach_to: power_control             # Control overlay
      attach_side: bottom-left
      attach_gap: 10
      style:
        color: var(--lcars-red)
        width: 3

    # --- Mixed attachment (overlay to static anchor) ---
    - id: line_mixed
      type: line
      anchor: power_control                # Control overlay
      anchor_side: top
      attach_to: [800, 100]                # Static coordinates
      style:
        color: var(--lcars-orange)
        width: 2

  # --- OVERLAY ATTACHMENT CAPABILITIES ---
  #
  # ALL overlay types now support attachment points:
  #   - text: Dynamic attachment based on actual text size
  #   - sparkline: 9 attachment points based on position/size
  #   - history_bar: 9 attachment points based on position/size
  #   - status_grid: 9 attachment points based on position/size
  #   - control: 9 attachment points based on foreignObject position
  #   - line: Future enhancement for line-to-line connections
  #
  # ATTACHMENT SIDES supported for ALL overlay types:
  #   - center, top, bottom, left, right
  #   - top-left, top-right, bottom-left, bottom-right
  #   - topLeft, topRight, bottomLeft, bottomRight (aliases)
  #
  # LINE ATTACHMENT PROPERTIES:
  #   anchor: <overlay_id> | [x, y]        # Source: overlay ID or coordinates
  #   anchor_side: <side>                  # Source attachment side
  #   anchor_gap: <number>                 # Gap from source edge (px)
  #   attach_to: <overlay_id> | [x, y]     # Target: overlay ID or coordinates
  #   attach_side: <side>                  # Target attachment side
  #   attach_gap: <number>                 # Gap from target edge (px)
  #
  # PRIORITY ORDER for attach_to:
  #   1. Overlay attachment points (if overlay exists)
  #   2. Static anchors (from anchors: section)
  #   3. Coordinate arrays [x, y]

  # --- Supported Routing and Style Properties ---
  # Global (routing:):
  #   default_mode, clearance, grid_resolution, channel_target_coverage,
  #   channel_shaping_max_attempts, channel_shaping_span, channel_min_coverage_gain,
  #   grid_resolution_multipliers, grid_resolution_max, smart_proximity,
  #   cost_defaults, fallback, channels,
  #   smoothing_mode, smoothing_iterations, smoothing_max_points
  #
  # Per-overlay (overlays[]):
  #   anchor, anchor_side, anchor_gap,              # NEW: Overlay attachment
  #   attach_to, attach_side, attach_gap,           # NEW: Overlay attachment
  #   route, route_mode, route_mode_full, route_channels, channel_mode,
  #   clearance, proximity,
  #   corner_style, corner_radius,
  #   smoothing_mode, smoothing_iterations, smoothing_max_points
  #
  # SVG Style (overlays[].style):
  #   color, width, opacity,
  #   line_cap, line_join, miter_limit,
  #   dash_array, dash_offset,
  #   fill, fill_opacity,
  #   gradient, pattern,
  #   marker_start, marker_mid, marker_end,
  #   glow, shadow,
  #   animatable, pulse_speed, flow_speed,
  #   segment_colors, status_indicator