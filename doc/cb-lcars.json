{
  "button_card_templates": {
    "cb-lcars-header-picard": {
      "template": [
        "cb-lcars-card-base"
      ],
      "variables": {
        "card": {
          "height": "100px",
          "width": "400px",
          "border": {
            "top": {
              "left_radius": "var(--ha-card-border-radius)",
              "right_radius": "0px !important"
            },
            "bottom": {
              "left_radius": "0px !important",
              "right_radius": "0px !important"
            },
            "inner": {
              "factor": 1,
              "width": "35px"
            }
          }
        },
        "card_label": " ",
        "lcars": {
          "border": {
            "gap": "4px",
            "factor": 4,
            "top": {
              "size": "20px"
            },
            "left": {
              "size": "180px"
            },
            "bottom": {
              "size": 0
            },
            "right": {
              "size": 0
            }
          }
        },
        "lcars_outer": {
          "card": {
            "color": "var(--lcars-card-top-color)",
            "border": {
              "left": {
                "size": "[[[ return \"calc( ((\" + variables.lcars.border.left.size + \" - \" + variables.lcars.border.gap + \") / \" + variables.lcars.border.factor + \") * (\" + variables.lcars.border.factor + \" - 1)\" + \")\";]]]"
              },
              "top": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.top.size + \" - \" + variables.lcars.border.gap + \") / 2)\";]]]"
              }
            }
          }
        },
        "lcars_inner": {
          "card": {
            "color": "var(--lcars-card-top-color)",
            "border": {
              "left": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.left.size + \" - \" + variables.lcars.border.gap + \" ) / \" + variables.lcars.border.factor + \")\" ;]]]"
              },
              "top": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.top.size + \" - \" + variables.lcars.border.gap + \") / 2)\";]]]",
                "left_radius": "[[[ return \"calc((\" + variables.card.border.top.left_radius + \" ) / \" + variables.card.border.inner.factor +\" )\";]]]"
              },
              "inner": {
                "factor": 2
              }
            }
          }
        }
      },
      "styles": {
        "card": [
          {
            "background-color": "transparent"
          },
          {
            "height": "[[[ return variables.card.height; ]]]"
          },
          {
            "width": "[[[ return variables.card.width; ]]]"
          },
          {
            "border-top-left-radius": "[[[ return variables.card.border.top.left_radius ]]]"
          },
          {
            "border-top-right-radius": "[[[ return variables.card.border.top.right_radius ]]]"
          },
          {
            "border-bottom-left-radius": "[[[ return variables.card.border.bottom.left_radius ]]]"
          },
          {
            "border-bottom-right-radius": "[[[ return variables.card.border.bottom.right_radius ]]]"
          }
        ],
        "custom_fields": {
          "lcars_outer": [
            {
              "position": "absolute"
            },
            {
              "top": 0
            },
            {
              "left": 0
            }
          ],
          "lcars_inner": [
            {
              "position": "absolute"
            },
            {
              "top": "[[[ return \"calc( (\" + variables.lcars_outer.card.border.top.size + \" + \" + variables.lcars.border.gap + \")  ) \"; ]]]"
            },
            {
              "left": "[[[ return \"calc( (\" + variables.lcars_outer.card.border.left.size + \" + \" + variables.lcars.border.gap + \")  ) \"; ]]]"
            }
          ]
        }
      },
      "custom_fields": {
        "lcars_outer": {
          "card": {
            "type": "custom:button-card",
            "template": [
              "cb-lcars-header"
            ],
            "variables": {
              "card": {
                "width": "[[[ return variables.card.width; ]]]",
                "height": "[[[ return variables.card.height; ]]]",
                "border": {
                  "top": {
                    "left_radius": "[[[ return variables.card.border.top.left_radius ]]]",
                    "size": "[[[ return variables.lcars_outer.card.border.top.size ]]]"
                  },
                  "left": {
                    "size": "[[[ return variables.lcars_outer.card.border.left.size ]]]",
                    "right_radius": "0px"
                  },
                  "inner": {
                    "factor": "[[[ return variables.card.border.inner.factor; ]]]",
                    "width": "[[[ return variables.card.border.inner.width ]]]"
                  },
                  "color": "[[[ return variables.lcars_outer.card.color ]]]"
                }
              }
            }
          }
        },
        "lcars_inner": {
          "card": {
            "type": "custom:button-card",
            "template": [
              "cb-lcars-header"
            ],
            "label": "[[[ return variables.card_label; ]]]",
            "variables": {
              "card": {
                "width": "[[[ return variables.card.width ]]]",
                "height": "[[[ return variables.card.height ]]]",
                "border": {
                  "color": "[[[ return variables.lcars_inner.card.color ]]]",
                  "left": {
                    "size": "[[[ return variables.lcars_inner.card.border.left.size ]]]"
                  },
                  "top": {
                    "size": "[[[ return variables.lcars_inner.card.border.top.size ]]]",
                    "left_radius": "[[[ return variables.lcars_inner.card.border.top.left_radius ]]]",
                    "right_radius": "0px"
                  },
                  "inner": {
                    "factor": "[[[ return variables.lcars_inner.card.border.inner.factor ]]]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "cb-lcars-header-picard-right": {
      "template": [
        "cb-lcars-card-base"
      ],
      "variables": {
        "card": {
          "height": "100px",
          "width": "400px",
          "border": {
            "top": {
              "left_radius": "0px !important",
              "right_radius": "var(--ha-card-border-radius)"
            },
            "bottom": {
              "left_radius": "0px !important",
              "right_radius": "0px !important"
            },
            "inner": {
              "factor": 1,
              "width": "35px"
            }
          }
        },
        "card_label": " ",
        "lcars": {
          "border": {
            "gap": "4px",
            "factor": 4,
            "top": {
              "size": "20px"
            },
            "left": {
              "size": 0
            },
            "bottom": {
              "size": 0
            },
            "right": {
              "size": "180px"
            }
          }
        },
        "lcars_outer": {
          "card": {
            "color": "var(--lcars-card-top-color)",
            "border": {
              "right": {
                "size": "[[[ return \"calc( ((\" + variables.lcars.border.right.size + \" - \" + variables.lcars.border.gap + \") / \" + variables.lcars.border.factor + \") * (\" + variables.lcars.border.factor + \" - 1)\" + \")\";]]]"
              },
              "top": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.top.size + \" - \" + variables.lcars.border.gap + \") / 2)\";]]]"
              }
            }
          }
        },
        "lcars_inner": {
          "card": {
            "color": "var(--lcars-card-top-color)",
            "border": {
              "right": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.right.size + \" - \" + variables.lcars.border.gap + \" ) / \" + variables.lcars.border.factor + \")\" ;]]]"
              },
              "top": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.top.size + \" - \" + variables.lcars.border.gap + \") / 2)\";]]]",
                "right_radius": "[[[ return \"calc((\" + variables.card.border.top.right_radius + \" ) / \" + variables.card.border.inner.factor +\" )\";]]]"
              },
              "inner": {
                "factor": 2
              }
            }
          }
        }
      },
      "styles": {
        "card": [
          {
            "background-color": "transparent"
          },
          {
            "height": "[[[ return variables.card.height; ]]]"
          },
          {
            "width": "[[[ return variables.card.width; ]]]"
          },
          {
            "border-top-left-radius": "[[[ return variables.card.border.top.left_radius ]]]"
          },
          {
            "border-top-right-radius": "[[[ return variables.card.border.top.right_radius ]]]"
          },
          {
            "border-bottom-left-radius": "[[[ return variables.card.border.bottom.left_radius ]]]"
          },
          {
            "border-bottom-right-radius": "[[[ return variables.card.border.bottom.right_radius ]]]"
          }
        ],
        "custom_fields": {
          "lcars_outer": [
            {
              "position": "absolute"
            },
            {
              "top": 0
            },
            {
              "right": 0
            }
          ],
          "lcars_inner": [
            {
              "position": "absolute"
            },
            {
              "top": "[[[ return \"calc( (\" + variables.lcars_outer.card.border.top.size + \" + \" + variables.lcars.border.gap + \")  ) \"; ]]]"
            },
            {
              "right": "[[[ return \"calc( (\" + variables.lcars_outer.card.border.right.size + \" + \" + variables.lcars.border.gap + \")  ) \"; ]]]"
            }
          ]
        }
      },
      "custom_fields": {
        "lcars_outer": {
          "card": {
            "type": "custom:button-card",
            "template": [
              "cb-lcars-header-right"
            ],
            "variables": {
              "card": {
                "width": "[[[ return variables.card.width; ]]]",
                "height": "[[[ return variables.card.height; ]]]",
                "border": {
                  "top": {
                    "right_radius": "[[[ return variables.card.border.top.right_radius ]]]",
                    "left_radius": 0,
                    "size": "[[[ return variables.lcars_outer.card.border.top.size ]]]"
                  },
                  "left": {
                    "size": "0px"
                  },
                  "right": {
                    "size": "[[[ return variables.lcars_outer.card.border.right.size ]]]"
                  },
                  "inner": {
                    "factor": "[[[ return variables.card.border.inner.factor; ]]]",
                    "width": "[[[ return variables.card.border.inner.width ]]]"
                  },
                  "color": "[[[ return variables.lcars_outer.card.color ]]]"
                }
              }
            }
          }
        },
        "lcars_inner": {
          "card": {
            "type": "custom:button-card",
            "template": [
              "cb-lcars-header-right"
            ],
            "label": "[[[ return variables.card_label; ]]]",
            "variables": {
              "card": {
                "width": "[[[ return variables.card.width ]]]",
                "height": "[[[ return variables.card.height ]]]",
                "border": {
                  "color": "[[[ return variables.lcars_inner.card.color ]]]",
                  "right": {
                    "size": "[[[ return variables.lcars_inner.card.border.right.size ]]]"
                  },
                  "top": {
                    "size": "[[[ return variables.lcars_inner.card.border.top.size ]]]",
                    "right_radius": "[[[ return variables.lcars_inner.card.border.top.right_radius ]]]",
                    "left_radius": "0px"
                  },
                  "inner": {
                    "factor": "[[[ return variables.lcars_inner.card.border.inner.factor ]]]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "cb-lcars-slider-gauge": {
      "template": [
        "cb-lcars-card-base",
        "cb-lcars-functions"
      ],
      "entity": "",
      "triggers_update": "[[[ return variables.entity ]]]",
      "variables": {
        "card": {
          "width": "80px",
          "height": "400px"
        },
        "entity": "[[[ return entity.entity_id ]]]",
        "entity_color": "[[[ return variables.__get_light_css_color(variables.entity) ]]]",
        "entity_match_slider": false,
        "meter": {
          "template": [
            "cb-lcars-button-grid"
          ],
          "variables": {
            "card": {
              "height": "[[[ return variables.card.height ]]]"
            },
            "grid": {
              "X": 1,
              "Y": 10,
              "gap": "0px",
              "buttons": [
                {
                  "label": "100"
                },
                {
                  "label": "90"
                },
                {
                  "label": "80"
                },
                {
                  "label": "70"
                },
                {
                  "label": "60"
                },
                {
                  "label": "50"
                },
                {
                  "label": "40"
                },
                {
                  "label": "30"
                },
                {
                  "label": "20"
                },
                {
                  "label": "10"
                }
              ]
            },
            "button": {
              "show_label": true,
              "entity": "[[[ return variables.entity ]]]",
              "triggers_update": "[[[ return variables.entity ]]]",
              "template": [
                "cb-lcars-button-picard",
                "cb-lcars-button-picard-label-ne"
              ],
              "variables": {
                "card": {
                  "height": "[[[\n    return variables.__calculcate_grid_cell_dimension(variables.card.height, 10, 0, \"20px\")\n]]]\n",
                  "width": "[[[ return variables.card.width ]]]",
                  "border": {
                    "right": {
                      "size": 0
                    },
                    "left": {
                      "size": 0
                    },
                    "top": {
                      "size": "2px"
                    },
                    "bottom": {
                      "size": 0
                    }
                  },
                  "color": {
                    "background": {
                      "inactive": "transparent",
                      "active": "transparent",
                      "default": "transparent"
                    }
                  }
                },
                "text": {
                  "label": {
                    "font_size": "14px",
                    "padding": {
                      "right": "0px",
                      "top": "2px"
                    },
                    "color": {
                      "off": "var(--lcars-ui-primary)",
                      "on": "var(--lcars-ui-secondary)"
                    }
                  }
                }
              }
            }
          }
        },
        "slider": {
          "variables": {
            "color": "[[[ return  variables.entity_match_slider ? variables.entity_color :\n\"var(--picard-lightest-blue)\" ]]]\n",
            "color_alpha": 0.95,
            "border_color": "[[[ return  variables.entity_match_slider ? variables.entity_color :\n\"var(--picard-blue)\" ]]]  \n",
            "border_alpha": 0.5,
            "border_width": "2px",
            "height": "[[[ return variables.card.height ]]]",
            "width": "15px",
            "left_padding": "5px",
            "step": 1
          }
        }
      },
      "styles": {
        "card": [
          {
            "width": "[[[ return variables.card.width ]]]"
          },
          {
            "height": "[[[ return variables.card.height ]]]"
          },
          {
            "border-radius": "0 !important"
          },
          {
            "background": "none"
          }
        ],
        "custom_fields": {
          "meter": [
            {
              "position": "absolute"
            },
            {
              "left": "0px"
            },
            {
              "top": "0px"
            }
          ],
          "slider": [
            {
              "position": "absolute"
            },
            {
              "left": "0px"
            },
            {
              "top": "0px"
            },
            {
              "z-index": 1
            },
            {
              "width": "[[[ return variables.card.width ]]]"
            },
            {
              "height": "[[[ return variables.card.height ]]]"
            }
          ]
        }
      },
      "custom_fields": {
        "meter": {
          "card": {
            "type": "custom:button-card",
            "template": "[[[ return variables.meter.template ]]]",
            "variables": "[[[ return variables.meter.variables ]]]"
          }
        },
        "slider": {
          "card": {
            "type": "custom:my-slider-v2",
            "entity": "[[[ return variables.entity ]]]",
            "mode": "brightness",
            "flipped": false,
            "inverse": false,
            "vertical": true,
            "step": "[[[ return variables.slider.variables.step; ]]]",
            "styles": {
              "card": [
                {
                  "width": "[[[ return variables.card.width ]]]"
                },
                {
                  "height": "[[[ return variables.card.height ]]]"
                },
                {
                  "background": "none"
                },
                {
                  "border-radius": 0
                }
              ],
              "progress": [
                {
                  "background-color": "[[[ return variables.__hex_to_rgba(variables.slider.variables.color,variables.slider.variables.color_alpha) ]]]"
                },
                {
                  "border": "[[[ return variables.slider.variables.border_width + \" solid \" + variables.__hex_to_rgba(variables.slider.variables.border_color, variables.slider.variables.border_alpha)  ]]]"
                },
                {
                  "width": "[[[ return variables.slider.variables.width ]]]"
                },
                {
                  "height": "[[[ return variables.slider.variables.height ]]]"
                },
                {
                  "left": "[[[ return variables.slider.variables.left_padding ]]]"
                }
              ],
              "container": [
                {
                  "border-radius": 0
                }
              ],
              "track": [
                {
                  "background": "none"
                }
              ],
              "thumb": [
                {
                  "background": "none"
                }
              ]
            }
          }
        }
      }
    },
    "cb-lcars-slider-horizontal-gauge": {
      "entity": "",
      "template": [
        "cb-lcars-functions",
        "cb-lcars-slider-horizontal"
      ],
      "triggers_update": "[[[ return variables.entity ]]]",
      "variables": {
        "card": {
          "width": "500px",
          "height": "45px"
        },
        "entity": "[[[ return entity.entity_id ]]]",
        "entity_color": "[[[ return variables.__get_light_css_color(variables.entity) ]]]",
        "entity_match_slider": false,
        "slider": {
          "variables": {
            "color": "[[[ return  variables.entity_match_slider ? variables.entity_color :\n\"var(--picard-lightest-blue)\" ]]]\n",
            "color_alpha": 0.95,
            "border_color": "[[[ return  variables.entity_match_slider ? variables.entity_color :\n\"var(--picard-blue)\" ]]]\n",
            "border_alpha": 0.5,
            "border_width": "2px",
            "height": "10px",
            "width": "[[[ return variables.card_width ]]]",
            "top_padding": "10px",
            "step": 5
          }
        },
        "gauge": {
          "show_sub_meter": true,
          "meter": {
            "template": [
              "cb-lcars-button-grid"
            ],
            "variables": {
              "card": {
                "height": "[[[ return variables.card.height ]]]"
              },
              "grid": {
                "X": 10,
                "Y": 1,
                "gap": "0px",
                "buttons": [
                  {
                    "label": "10"
                  },
                  {
                    "label": "20"
                  },
                  {
                    "label": "30"
                  },
                  {
                    "label": "40"
                  },
                  {
                    "label": "50"
                  },
                  {
                    "label": "60"
                  },
                  {
                    "label": "70"
                  },
                  {
                    "label": "80"
                  },
                  {
                    "label": "90"
                  },
                  {
                    "label": "100"
                  }
                ]
              },
              "button": {
                "show_label": true,
                "entity": "[[[ return variables.entity ]]]",
                "triggers_update": "[[[ return variables.entity ]]]",
                "template": [
                  "cb-lcars-button-picard",
                  "cb-lcars-button-picard-label-se"
                ],
                "variables": {
                  "card": {
                    "width": "[[[\n    return variables.__calculcate_grid_cell_dimension(variables.card.width, 10, 0, \"5px\")\n]]]\n",
                    "height": "[[[ return variables.card.height ]]]",
                    "border": {
                      "right": {
                        "size": "2px"
                      },
                      "left": {
                        "size": 0
                      },
                      "top": {
                        "size": 0
                      },
                      "bottom": {
                        "size": 0
                      }
                    },
                    "color": {
                      "background": {
                        "inactive": "transparent",
                        "active": "transparent",
                        "default": "transparent"
                      }
                    }
                  },
                  "text": {
                    "label": {
                      "font_size": "14px",
                      "padding": {
                        "right": "3px",
                        "top": "2px",
                        "bottom": "0px"
                      },
                      "color": {
                        "off": "var(--lcars-ui-primary)",
                        "on": "var(--lcars-ui-secondary)"
                      }
                    }
                  }
                }
              }
            }
          },
          "sub_meter": {
            "variables": {
              "card": {
                "height": "10px"
              },
              "grid": {
                "X": 50,
                "Y": 1,
                "gap": "0px"
              },
              "gradient_start_color": "none",
              "gradient_end_color": "none",
              "button": {
                "entity": "[[[ return variables.entity ]]]",
                "triggers_update": "[[[ return variables.entity ]]]",
                "template": [
                  "cb-lcars-button-picard",
                  "cb-lcars-button-picard-label-se"
                ],
                "variables": {
                  "card": {
                    "height": "10px",
                    "min_height": "10px",
                    "width": "[[[\n    return variables.__calculcate_grid_cell_dimension(variables.card.width, 50, 0, \"20px\")\n]]]\n",
                    "border": {
                      "right": {
                        "size": "2px"
                      },
                      "left": {
                        "size": 0
                      },
                      "top": {
                        "size": "2px"
                      },
                      "bottom": {
                        "size": 0
                      }
                    },
                    "color": {
                      "background": {
                        "inactive": "transparent",
                        "active": "transparent",
                        "default": "transparent"
                      }
                    }
                  }
                },
                "show_label": false
              }
            }
          }
        },
        "meter": "[[[ return variables.gauge.meter ]]]"
      },
      "styles": {
        "custom_fields": {
          "slider": [
            {
              "position": "absolute"
            },
            {
              "top": 0
            },
            {
              "left": "[[[ return \"calc(\" + variables.slider.variables.border_width + \" * -1)\" ]]]"
            }
          ],
          "sub_meter": [
            {
              "position": "absolute"
            },
            {
              "top": "0px"
            },
            {
              "left": "0px"
            },
            {
              "visibility": "[[[ return variables.gauge.show_sub_meter ? \"visible\" : \"hidden\" ]]]"
            }
          ]
        }
      },
      "custom_fields": {
        "slider": {
          "card": {
            "flipped": false,
            "vertical": false,
            "inverse": false,
            "styles": {
              "card": [
                {
                  "height": "[[[ return variables.card.height ]]]"
                },
                {
                  "width": "[[[ return variables.card.width ]]]"
                },
                {
                  "background": "none"
                }
              ],
              "progress": [
                {
                  "background-color": "[[[ return variables.__hex_to_rgba(variables.slider.variables.color,variables.slider.variables.color_alpha) ]]]"
                },
                {
                  "border": "[[[ return variables.slider.variables.border_width + \" solid \" + variables.__hex_to_rgba(variables.slider.variables.border_color, variables.slider.variables.border_alpha)  ]]]"
                },
                {
                  "border-radius": "2px"
                },
                {
                  "height": "[[[ return variables.slider.variables.height ]]]"
                },
                {
                  "width": "[[[ return variables.slider.variables.width ]]]"
                },
                {
                  "top": "[[[ return variables.slider.variables.top_padding ]]]"
                }
              ]
            }
          }
        },
        "sub_meter": {
          "card": {
            "type": "custom:button-card",
            "template": "cb-lcars-meter-horizontal",
            "variables": "[[[ return variables.gauge.sub_meter.variables ]]]"
          }
        }
      }
    },
    "cb-lcars-multimeter": {
      "template": [
        "cb-lcars-functions",
        "cb-lcars-card-base"
      ],
      "entity": "light.tv",
      "triggers_update": "[[[ return variables.entity ]]]",
      "variables": {
        "card": {
          "width": "500px",
          "height": "60px"
        },
        "panel": {
          "mode": "gauge",
          "width": "380px",
          "height": "50px",
          "padding": {
            "top": "5px",
            "left": "5px",
            "right": "0px",
            "bottom": "0px"
          },
          "meter": null,
          "slider": null,
          "icon_grid": null
        },
        "entity": "[[[ return entity.entity_id ]]]",
        "entity_color": "[[[ return variables.__get_light_css_color(variables.entity) ]]]",
        "entity_match_gauge": false,
        "entity_match_slider": false,
        "entity_match_header": false,
        "entity_match_slider_start": false,
        "entity_match_slider_end": false,
        "label": null,
        "header_button": {
          "variables": {
            "text": {
              "label": {
                "font_size": "24px"
              },
              "state": {
                "font_size": "24px"
              },
              "name": {
                "font_size": "24px"
              }
            },
            "card": {
              "color": {
                "active": "[[[ return  variables.entity_match_header ? variables.entity_color :\n\"var(--lcars-ui-secondary)\" ]]]\n",
                "inactive": "var(--lcars-ui-primary)",
                "background": {
                  "active": "[[[ return  variables.entity_match_header ? variables.entity_color : \"var(--lcars-ui-secondary)\" ]]]\n",
                  "inactive": "var(--lcars-ui-primary)"
                },
                "border": null
              }
            },
            "icon": {
              "color": {
                "active": null,
                "inactive": null,
                "background": {
                  "active": null,
                  "inactive": null
                }
              }
            }
          }
        },
        "y_panel_width_padded": "[[[ return  (parseInt(variables.panel.width) - parseInt(variables.panel.padding.left) - parseInt(variables.panel.padding.right))+\"px\" ]]]",
        "y_panel_height_padded": "[[[ return  (parseInt(variables.panel.height) - parseInt(variables.panel.padding.top) - parseInt(variables.panel.padding.bottom))+\"px\" ]]]",
        "y_trim_height": "[[[ return \"calc(\" + variables.card.height + \" - \" + variables.panel.height + \")\" ]]]",
        "y_trim_width": "[[[ return variables.panel.width ]]]",
        "y_header_height": "[[[ return variables.card.height ]]]",
        "y_header_width": "[[[ return \"calc(\" + variables.card.width + \" - \" + variables.panel.width + \")\" ]]]",
        "z_button_card": {
          "type": "custom:button-card",
          "template": [
            "cb-lcars-button-grid"
          ],
          "variables": {
            "card": {
              "width": "[[[ return variables.card.width ]]]",
              "height": "[[[ return variables.card.height ]]]"
            },
            "button": "[[[ return variables.header_button ]]]",
            "grid": {
              "auto_calc_X": false,
              "auto_calc_Y": false,
              "X": 2,
              "Y": 1,
              "buttons": [
                {
                  "variables": {
                    "card": {
                      "width": "[[[ return variables.y_header_width ]]]",
                      "height": "[[[ return variables.y_header_height ]]]"
                    },
                    "text": {
                      "label": {
                        "font_size": "[[[ return variables.header_button.variables.text.label.font_size ]]]"
                      },
                      "state": {
                        "font_size": "[[[ return variables.header_button.variables.text.state.font_size ]]]"
                      },
                      "name": {
                        "font_size": "[[[ return variables.header_button.variables.text.name.font_size ]]]"
                      }
                    }
                  },
                  "show_label": true,
                  "label": "[[[ return variables.label ]]]",
                  "template": [
                    "cb-lcars-button-picard-filled"
                  ],
                  "entity": "[[[ return variables.entity ]]]"
                },
                {
                  "variables": {
                    "card": {
                      "width": "[[[ return variables.y_trim_width ]]]",
                      "height": "[[[ return variables.y_trim_height ]]]",
                      "min_height": "[[[ return variables.y_trim_height ]]]"
                    }
                  },
                  "show_label": false,
                  "entity": "[[[ return variables.entity ]]]"
                }
              ],
              "template_columns": "[[[ return  variables.y_header_width + \" \" + variables.y_trim_width  ]]]",
              "gap": "0px"
            }
          }
        },
        "z_gauge_card": {
          "type": "custom:button-card",
          "template": [
            "cb-lcars-slider-horizontal-gauge"
          ],
          "variables": {
            "card": {
              "height": "[[[ return variables.panel.height ]]]",
              "width": "[[[ return variables.panel.width ]]]"
            },
            "entity": "[[[ return variables.entity ]]]",
            "entity_match_slider": "[[[ return variables.entity_match_slider ]]]",
            "slider": "[[[\nlet sliderObject = (variables.panel && variables.panel.slider) ?\nvariables.panel.slider : {}; \nlet defaultVariables = {\n  variables: {\n    step: 1\n  }\n};\n//meterObject = {...defaultVariables, ...meterObject};\nsliderObject = variables.__deepMerge(defaultVariables,sliderObject);\nreturn sliderObject;\n]]]\n",
            "gauge": "[[[\nlet gaugeObject = (variables.panel && variables.panel.gauge) ?\nvariables.panel.gauge : {}; \nlet defaultVariables = {\n  \"show_sub_meter\": true,\n  \"meter\": {\n      \"variables\": {\n        \"button\": {\n            \"variables\": {\n              \"text\": {\n                  \"label\": {\n                    \"color\": {\n                        \"off\": variables.header_button.variables.card.color.background.inactive,\n                        \"on\": variables.entity_match_gauge ? variables.entity_color : \"var(--lcars-ui-secondary)\"\n                    }\n                  }\n              },\n              \"card\": {\n                  \"color\": {\n                    \"inactive\": variables.header_button.variables.card.color.background.inactive,\n                    \"active\": variables.entity_match_gauge ? variables.entity_color : \"var(--lcars-ui-secondary)\"\n                  }\n              }\n            }\n        }\n      }\n  },\n  \"sub_meter\": {\n      \"variables\": {\n        \"button\": {\n            \"variables\": {\n              \"text\": {\n                  \"label\": {\n                    \"color\": {\n                        \"off\": variables.header_button.variables.card.color.background.inactive,\n                        \"on\": variables.entity_match_gauge ? variables.entity_color : \"var(--lcars-ui-secondary)\"\n                    }\n                  }\n              },\n              \"card\": {\n                  \"color\": {\n                    \"inactive\": variables.header_button.variables.card.color.background.inactive,\n                    \"active\": variables.entity_match_gauge ? variables.entity_color : \"var(--lcars-ui-secondary)\"\n                  }\n              }\n            }\n        }\n      }\n  }\n};\n//meterObject = {...defaultVariables, ...meterObject};\ngaugeObject = variables.__deepMerge(defaultVariables,gaugeObject);\nreturn gaugeObject;\n]]]\n"
          }
        },
        "z_slider_card": {
          "type": "custom:button-card",
          "template": [
            "cb-lcars-functions",
            "cb-lcars-slider-horizontal"
          ],
          "variables": {
            "card": {
              "height": "[[[ return variables.y_panel_height_padded ]]]",
              "width": "[[[ return variables.y_panel_width_padded ]]]"
            },
            "entity": "[[[ return variables.entity ]]]",
            "entity_match_slider_start": "[[[ return variables.entity_match_slider_start ]]]",
            "entity_match_slider_end": "[[[ return variables.entity_match_slider_end ]]]",
            "meter": "[[[\nlet meterObject = (variables.panel && variables.panel.meter) ?\nvariables.panel.meter : {}; \nlet defaultVariables = {\n  variables: {\n    button: {\n      template: \"cb-lcars-button-picard-filled\",\n      variables: {\n        card: {\n          height: variables.y_panel_height_padded,\n          },\n        },\n    }\n  }\n};\n//meterObject = {...defaultVariables, ...meterObject};\nmeterObject = variables.__deepMerge(defaultVariables,meterObject);\nreturn meterObject;\n]]]\n",
            "slider": "[[[\nlet sliderObject = (variables.panel && variables.panel.slider) ?\nvariables.panel.slider : {}; \nlet defaultVariables = {\n  variables: {\n    step: 1\n  }\n};\n//meterObject = {...defaultVariables, ...meterObject};\nsliderObject = variables.__deepMerge(defaultVariables,sliderObject);\nreturn sliderObject;\n]]]\n"
          }
        },
        "z_icon_grid": {
          "type": "custom:button-card",
          "template": [
            "cb-lcars-button-grid-icons"
          ],
          "variables": "[[[ let iconObject = (variables.panel.icon_grid && variables.panel.icon_grid.variables) ? variables.panel.icon_grid.variables : {}; let defaultVariables = {\n  card: {\n    height: variables.y_panel_height_padded,\n    width: variables.y_panel_width_padded,\n    },\n  grid: {\n    gap: \"9px\",\n  },\n    button: {\n    variables: {\n      card: {\n        width: \"45px\",\n        height: \"45px\"\n      }\n    }\n  }\n}; iconObject = variables.__deepMerge(defaultVariables,iconObject); return iconObject; ]]]\n"
        }
      },
      "styles": {
        "card": [
          {
            "background": "none"
          },
          {
            "width": "[[[ return variables.card.width; ]]]"
          },
          {
            "height": "[[[  return variables.card.height; ]]]"
          },
          {
            "border-radius": "0 !important"
          }
        ],
        "custom_fields": {
          "panel": [
            {
              "position": "absolute"
            },
            {
              "right": "0px"
            },
            {
              "bottom": "0px"
            }
          ],
          "button": [
            {
              "position": "absolute"
            },
            {
              "left": "0px"
            },
            {
              "top": "0px"
            }
          ]
        }
      },
      "custom_fields": {
        "button": {
          "card": "[[[ return variables.z_button_card ]]]"
        },
        "panel": {
          "card": "[[[\nlet panel_card;\nswitch (variables.panel.mode) {\n  case 'icons':\n  case 'icon_grid':\n    panel_card = variables.z_icon_grid;\n    break;\n  case 'slider':\n    panel_card = variables.z_slider_card;\n    break;\n  case 'gauge':\n    panel_card = variables.z_gauge_card;\n    break;\n  default:\n    panel_card = null;\n}\nreturn panel_card;\n]]]\n"
        }
      }
    },
    "cb-lcars-button-grid-icons": {
      "type": "custom:button-card",
      "template": [
        "cb-lcars-button-grid"
      ],
      "variables": {
        "grid": {
          "X": 5,
          "Y": 1
        },
        "button": {
          "variables": {
            "card": {
              "width": "40px",
              "height": "40px"
            }
          },
          "template": [
            "cb-lcars-button-picard-icon"
          ],
          "show_icon": true,
          "show_label": false
        }
      }
    },
    "cb-lcars-button-capped": {
      "template": "cb-lcars-button-lozenge",
      "variables": {
        "card": {
          "border": {
            "top": {
              "right_radius": "0px"
            },
            "bottom": {
              "right_radius": "0px"
            }
          }
        }
      }
    },
    "cb-lcars-button-capped-right": {
      "template": "cb-lcars-button-lozenge-right",
      "variables": {
        "card": {
          "border": {
            "top": {
              "left_radius": "0px"
            },
            "bottom": {
              "left_radius": "0px"
            }
          }
        }
      }
    },
    "cb-lcars-state-blink-old": {
      "variables": {
        "blink_card_background_color": "var(--error-color)",
        "blink_seconds": "2s",
        "color": "var(--error-color)",
        "blink_state_mode": "on"
      },
      "state": [
        {
          "value": "[[[ return variables.blink_state_mode; ]]]",
          "color": "[[[ return variables.color; ]]]",
          "styles": {
            "card": [
              {
                "animation-duration": "[[[ return variables.blink_seconds; ]]]"
              },
              {
                "animation-timing-function": "ease-out"
              },
              {
                "animation-name": "blink"
              },
              {
                "animation-iteration-count": "infinite"
              },
              {
                "animation-delay": "1s"
              },
              {
                "background-color": "[[[ return variables.blink_card_background_color; ]]]"
              }
            ]
          }
        }
      ]
    },
    "cb-lcars-state-blink": {
      "variables": {
        "blink_card_background_color": "var(--error-color)",
        "blink_seconds": "3s"
      },
      "extra_styles": "[[[ return `\n    @keyframes blink2 {\n      0% { \n        opacity: 1;\n      }\n      50% { \n        opacity: 0.3; \n      } \n      100% { \n        opacity: 1; \n      }\n    }\n  `]]]    \n",
      "state": [
        {
          "id": "state_on",
          "styles": {
            "card": [
              {
                "animation-duration": "[[[ return variables.blink_seconds; ]]]"
              },
              {
                "animation-timing-function": "ease-out"
              },
              {
                "animation-name": "blink2"
              },
              {
                "animation-iteration-count": "infinite"
              },
              {
                "animation-delay": "1s"
              }
            ]
          }
        }
      ]
    },
    "cb-lcars-header": {
      "template": "cb-lcars-base",
      "show_label": true,
      "variables": {
        "card": {
          "height": "60px",
          "border": {
            "top": {
              "size": "20px",
              "left_radius": "var(--ha-card-border-radius)"
            },
            "left": {
              "size": "90px"
            }
          }
        },
        "text": {
          "label": {
            "padding": {
              "top": "10px",
              "left": "20px",
              "right": "0px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "left"
          },
          "state": {
            "padding": {
              "top": "10px",
              "left": "20px",
              "right": "0px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "left"
          },
          "name": {
            "padding": {
              "top": "10px",
              "left": "20px",
              "right": "0px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "left"
          }
        }
      },
      "styles": {
        "label": [
          {
            "border-top-right-radius": "0px"
          },
          {
            "border-top-left-radius": "[[[ return \"calc(\" + variables.card.border.top.left_radius + \" / \" + variables.card.border.inner.factor +\" )\";]]]"
          }
        ]
      }
    },
    "cb-lcars-header-open": {
      "template": "cb-lcars-base",
      "show_label": true,
      "variables": {
        "card": {
          "border": {
            "top": {
              "size": "20px"
            }
          }
        }
      }
    },
    "cb-lcars-header-contained": {
      "template": "cb-lcars-header-open",
      "variables": {
        "card": {
          "min_height": "40px",
          "border": {
            "left": {
              "size": "50px"
            },
            "right": {
              "size": "50px"
            },
            "top": {
              "size": "10px",
              "left_radius": "var(--ha-card-border-radius)",
              "right_radius": "var(--ha-card-border-radius)"
            },
            "bottom": {
              "left_radius": "0px",
              "right_radius": "0px"
            }
          }
        }
      },
      "styles": {
        "label": [
          {
            "border-top-left-radius": "[[[ return \"calc(\" + variables.card.border.top.left_radius + \" / \" + variables.card.border.inner.factor +\" )\";]]]"
          },
          {
            "border-top-right-radius": "[[[ return \"calc(\" + variables.card.border.top.right_radius + \" / \" + variables.card.border.inner.factor +\" )\";]]]"
          }
        ]
      }
    },
    "cb-lcars-header-right": {
      "template": "cb-lcars-base",
      "show_label": true,
      "variables": {
        "card": {
          "height": "60px",
          "border": {
            "top": {
              "size": "20px",
              "left_radius": "0px",
              "right_radius": "var(--ha-card-border-radius)"
            },
            "right": {
              "size": "90px"
            },
            "bottom": {
              "right_radius": "0px"
            }
          }
        },
        "text": {
          "label": {
            "padding": {
              "top": "10px",
              "left": "0px",
              "right": "20px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "right"
          },
          "state": {
            "padding": {
              "top": "10px",
              "left": "0px",
              "right": "20px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "right"
          },
          "name": {
            "padding": {
              "top": "10px",
              "left": "0px",
              "right": "20px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "right"
          }
        }
      },
      "styles": {
        "label": [
          {
            "border-top-left-radius": "0px"
          },
          {
            "border-top-right-radius": "[[[ return \"calc(\" + variables.card.border.top.right_radius + \" / \" + variables.card.border.inner.factor +\" )\";]]]"
          }
        ]
      }
    },
    "cb-lcars-callout-base": {
      "variables": {
        "card": {
          "border": {
            "top": {
              "left_radius": 0,
              "right_radius": 0
            },
            "bottom": {
              "left_radius": 0,
              "right_radius": 0
            }
          }
        }
      },
      "styles": {
        "label": [
          {
            "border-top-right-radius": "0px"
          },
          {
            "border-top-left-radius": "0px"
          },
          {
            "border-bottom-right-radius": "0px"
          },
          {
            "border-bottom-left-radius": "0px"
          }
        ]
      }
    },
    "cb-lcars-header-callout": {
      "template": [
        "cb-lcars-header",
        "cb-lcars-callout-base"
      ],
      "variables": {
        "card": {
          "border": {
            "top": {
              "size": "10px"
            },
            "left": {
              "size": "10px"
            }
          }
        }
      }
    },
    "cb-lcars-header-callout-right": {
      "template": [
        "cb-lcars-header-right",
        "cb-lcars-callout-base"
      ],
      "variables": {
        "card": {
          "border": {
            "top": {
              "size": "10px"
            },
            "right": {
              "size": "10px"
            }
          }
        }
      }
    },
    "cb-lcars-footer-callout": {
      "template": [
        "cb-lcars-footer",
        "cb-lcars-callout-base"
      ],
      "variables": {
        "card": {
          "border": {
            "bottom": {
              "size": "10px"
            },
            "left": {
              "size": "10px"
            }
          }
        }
      }
    },
    "cb-lcars-footer-callout-right": {
      "template": [
        "cb-lcars-footer-right",
        "cb-lcars-callout-base"
      ],
      "variables": {
        "card": {
          "border": {
            "bottom": {
              "size": "10px"
            },
            "right": {
              "size": "10px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-icon": {
      "template": [
        "cb-lcars-button-picard-filled-dense",
        "cb-lcars-actions-toggle"
      ],
      "variables": {
        "card": {
          "width": "40px",
          "height": "40px",
          "min_height": "40px",
          "border": {
            "top": {
              "left_radius": "10px",
              "right_radius": "10px"
            },
            "bottom": {
              "left_radius": "10px",
              "right_radius": "10px"
            }
          }
        },
        "icon": {
          "border": {
            "left": "0px",
            "right": "0px"
          },
          "align-items": "center",
          "justify": "center"
        }
      },
      "styles": {
        "grid": [
          {
            "grid-template-areas": "\"i\""
          }
        ]
      },
      "size": "30px",
      "show_icon": true,
      "show_label": false
    },
    "cb-lcars-label": {
      "template": "cb-lcars-base",
      "show_label": true,
      "variables": {
        "card": {
          "min_height": "40px",
          "color": {
            "background": {
              "inactive": "transparent"
            }
          }
        },
        "text": {
          "label": {
            "font_size": "40px",
            "font_weight": "bold",
            "padding": {
              "top": "0px",
              "bottom": "5px"
            },
            "transform": "uppercase",
            "align": "center",
            "justify": "center",
            "color": {
              "on": "var(--lcars-green)",
              "off": "var(--lcars-blue)",
              "zero": "var(--lcars-green)",
              "non_zero": "var(--lcars-blue)",
              "hvac_heat": "var(--lcars-orange)",
              "hvac_cool": "var(--lcars-blue)",
              "hvac_other": "var(--lcars-purple)"
            }
          },
          "state": {
            "font_size": "40px",
            "font_weight": "bold",
            "padding": {
              "top": "0px",
              "bottom": "5px"
            },
            "transform": "uppercase",
            "align": "center",
            "justify": "center",
            "color": {
              "on": "var(--lcars-green)",
              "off": "var(--lcars-blue)",
              "zero": "var(--lcars-green)",
              "non_zero": "var(--lcars-blue)",
              "hvac_heat": "var(--lcars-orange)",
              "hvac_cool": "var(--lcars-blue)",
              "hvac_other": "var(--lcars-purple)"
            }
          },
          "name": {
            "font_size": "40px",
            "font_weight": "bold",
            "padding": {
              "top": "0px",
              "bottom": "5px"
            },
            "transform": "uppercase",
            "align": "center",
            "justify": "center",
            "color": {
              "on": "var(--lcars-green)",
              "off": "var(--lcars-blue)",
              "zero": "var(--lcars-green)",
              "non_zero": "var(--lcars-blue)",
              "hvac_heat": "var(--lcars-orange)",
              "hvac_cool": "var(--lcars-blue)",
              "hvac_other": "var(--lcars-purple)"
            }
          }
        }
      }
    },
    "cb-lcars-footer-base": {
      "template": "cb-lcars-base",
      "variables": {
        "card": {
          "border": {
            "color": "var(--lcars-card-bottom-color)"
          }
        }
      }
    },
    "cb-lcars-footer": {
      "template": "cb-lcars-footer-base",
      "show_label": true,
      "variables": {
        "card": {
          "height": "60px",
          "border": {
            "left": {
              "size": "90px"
            },
            "bottom": {
              "size": "20px",
              "left_radius": "var(--ha-card-border-radius)"
            }
          }
        },
        "text": {
          "label": {
            "padding": {
              "top": "10px",
              "left": "20px",
              "right": "0px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "left"
          },
          "state": {
            "padding": {
              "top": "10px",
              "left": "20px",
              "right": "0px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "left"
          },
          "name": {
            "padding": {
              "top": "10px",
              "left": "20px",
              "right": "0px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "left"
          }
        }
      },
      "styles": {
        "label": [
          {
            "border-bottom-left-radius": "[[[ return \"calc(\" + variables.card.border.bottom.left_radius + \" / \" + variables.card.border.inner.factor +\" )\";]]]"
          },
          {
            "border-bottom-right-radius": "0px"
          }
        ]
      }
    },
    "cb-lcars-footer-open": {
      "template": "cb-lcars-footer-base",
      "show_label": true,
      "variables": {
        "card": {
          "border": {
            "bottom": {
              "size": "20px"
            }
          }
        }
      }
    },
    "cb-lcars-footer-contained": {
      "template": "cb-lcars-footer-open",
      "show_label": true,
      "variables": {
        "card": {
          "min_height": "40px",
          "border": {
            "left": {
              "size": "50px"
            },
            "right": {
              "size": "50px"
            },
            "bottom": {
              "size": "10px",
              "left_radius": "var(--ha-card-border-radius)",
              "right_radius": "var(--ha-card-border-radius)"
            },
            "top": {
              "left_radius": "0px",
              "right_radius": "0px"
            }
          }
        }
      },
      "styles": {
        "label": [
          {
            "border-bottom-left-radius": "[[[ return \"calc(\" + variables.card.border.bottom.left_radius + \" / \" + variables.card.border.inner.factor +\" )\";]]]"
          },
          {
            "border-bottom-right-radius": "[[[ return \"calc(\" + variables.card.border.bottom.right_radius + \" / \" + variables.card.border.inner.factor +\" )\";]]]"
          }
        ]
      }
    },
    "cb-lcars-footer-right": {
      "template": "cb-lcars-footer-base",
      "show_label": true,
      "variables": {
        "card": {
          "height": "60px",
          "border": {
            "right": {
              "size": "90px"
            },
            "bottom": {
              "size": "20px",
              "right_radius": "var(--ha-card-border-radius)"
            }
          }
        },
        "text": {
          "label": {
            "padding": {
              "top": "10px",
              "left": "0px",
              "right": "20px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "right"
          },
          "state": {
            "padding": {
              "top": "10px",
              "left": "0px",
              "right": "20px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "right"
          },
          "name": {
            "padding": {
              "top": "10px",
              "left": "0px",
              "right": "20px",
              "bottom": "10px"
            },
            "align": "left",
            "justify": "right"
          }
        }
      },
      "styles": {
        "label": [
          {
            "border-bottom-left-radius": "0px"
          },
          {
            "border-bottom-right-radius": "[[[ return \"calc(\" + variables.card.border.bottom.right_radius + \" / \" + variables.card.border.inner.factor +\" )\";]]]"
          }
        ]
      }
    },
    "cb-lcars-actions-hue-tap": {
      "tap_action": {
        "action": "navigate",
        "navigation_path": "[[[\n  return \"\\#hue_card:\" + variables.action.hue_api + \"_openHueScreen\"\n]]]\n"
      },
      "double_tap_action": {
        "action": "more-info"
      },
      "hold_action": {
        "action": "toggle"
      }
    },
    "cb-lcars-actions-hue-hold": {
      "tap_action": {
        "action": "toggle"
      },
      "double_tap_action": {
        "action": "more-info"
      },
      "hold_action": {
        "action": "navigate",
        "navigation_path": "[[[\n  return \"\\#hue_card:\" + variables.action.hue_api + \"_openHueScreen\"\n]]]\n"
      }
    },
    "cb-lcars-actions-toggle": {
      "tap_action": {
        "action": "toggle",
        "haptic": "success"
      },
      "double_tap_action": {
        "action": "more-info",
        "haptic": "success"
      },
      "hold_action": {
        "action": "more-info",
        "haptic": "success"
      }
    },
    "cb-lcars-actions-more-info": {
      "tap_action": {
        "action": "more-info",
        "haptic": "success"
      },
      "double_tap_action": {
        "action": "more-info",
        "haptic": "success"
      },
      "hold_action": {
        "action": "more-info",
        "haptic": "success"
      }
    },
    "cb-lcars-actions-disable": {
      "tap_action": {
        "action": "none",
        "haptic": "failure"
      },
      "double_tap_action": {
        "action": "none",
        "haptic": "failure"
      },
      "hold_action": {
        "action": "none",
        "haptic": "failure"
      }
    },
    "cb-lcars-button-grid": {
      "template": [
        "cb-lcars-grid"
      ],
      "variables": {
        "card": {
          "width": null,
          "height": null
        },
        "grid": {
          "auto_calc_X": true,
          "auto_calc_Y": true,
          "buttons": [],
          "X": 3,
          "Y": 2,
          "template_columns": null,
          "auto_rows": null,
          "gap": "5px"
        },
        "button": {
          "type": "custom:button-card",
          "variables": {
            "card": {
              "width": "180px",
              "height": "45px",
              "min_height": "10px",
              "color": {
                "active": "var(--lcars-ui-secondary)",
                "inactive": "var(--lcars-ui-primary)",
                "background": {
                  "active": "var(--lcars-ui-secondary)",
                  "inactive": "var(--lcars-ui-primary)"
                },
                "default": null
              }
            },
            "icon": {
              "border": {
                "right": {
                  "padding": "2%"
                }
              },
              "color": {
                "active": null,
                "inactive": null
              },
              "background": {
                "active": null,
                "inactive": null
              }
            }
          },
          "template": [
            "cb-lcars-button-picard-filled",
            "cb-lcars-button-picard-label-se",
            "cb-lcars-button-picard-name-nw",
            "cb-lcars-button-picard-state-sw",
            "cb-lcars-actions-disable"
          ],
          "size": "22px",
          "show_name": false,
          "show_state": false,
          "show_label": true,
          "show_icon": false
        }
      }
    },
    "cb-lcars-dpad": {
      "variables": {
        "__defs_dpad": {
          "color": {
            "background": {
              "active": "[[[ return getComputedStyle(document.body).getPropertyValue(\"--lcars-ui-tertiary\") ]]]\n",
              "inactive": "[[[ return getComputedStyle(document.body).getPropertyValue(\"--lcars-ui-secondary\") ]]]\n"
            }
          }
        },
        "card": {
          "size": "300px"
        },
        "dpad": {
          "color": {
            "background": "#1111ee"
          },
          "button": {
            "scale": 6.5,
            "min_height": "10px",
            "color": {
              "ripple": "[[[ return getComputedStyle(document.body).getPropertyValue(\"--state-color\") ]]]\n"
            }
          },
          "up": {
            "color": {
              "background": {
                "inactive": "[[[ return variables.__defs_dpad.color.background.inactive ]]]\n",
                "active": "[[[ return variables.__defs_dpad.color.background.active ]]]\n"
              },
              "overlay": {
                "default": "transparent",
                "active": "transparent",
                "inactive": "transparent"
              }
            },
            "show_name": false,
            "show_state": false,
            "show_label": true,
            "label": null,
            "entity": null,
            "active_state": "on"
          },
          "down": {
            "color": {
              "background": {
                "inactive": "[[[ return variables.__defs_dpad.color.background.inactive ]]]\n",
                "active": "[[[ return variables.__defs_dpad.color.background.active ]]]\n"
              },
              "overlay": {
                "default": "transparent",
                "active": "transparent",
                "inactive": "transparent"
              }
            },
            "show_name": false,
            "show_state": false,
            "show_label": true,
            "label": null,
            "entity": null,
            "active_state": "on"
          },
          "left": {
            "color": {
              "background": {
                "inactive": "[[[ return variables.__defs_dpad.color.background.inactive ]]]\n",
                "active": "[[[ return variables.__defs_dpad.color.background.active ]]]\n"
              },
              "overlay": {
                "default": "transparent",
                "active": "transparent",
                "inactive": "transparent"
              }
            },
            "show_name": false,
            "show_state": false,
            "show_label": true,
            "label": null,
            "entity": null,
            "active_state": "on"
          },
          "right": {
            "color": {
              "background": {
                "inactive": "[[[ return variables.__defs_dpad.color.background.inactive ]]]\n",
                "active": "[[[ return variables.__defs_dpad.color.background.active ]]]\n"
              },
              "overlay": {
                "default": "transparent",
                "active": "transparent",
                "inactive": "transparent"
              }
            },
            "show_name": false,
            "show_state": false,
            "show_label": true,
            "label": null,
            "entity": null,
            "active_state": "on"
          },
          "center": {
            "color": {
              "background": {
                "inactive": "[[[ return variables.__defs_dpad.color.background.inactive ]]]\n",
                "active": "[[[ return variables.__defs_dpad.color.background.active ]]]\n"
              },
              "overlay": {
                "default": "transparent",
                "active": "transparent",
                "inactive": "transparent"
              }
            },
            "show_name": false,
            "show_state": false,
            "show_label": true,
            "label": null,
            "entity": null,
            "active_state": "on"
          },
          "up_left": {
            "color": {
              "background": {
                "inactive": "[[[ return variables.__defs_dpad.color.background.active ]]]\n",
                "active": "[[[ return variables.__defs_dpad.color.background.inactive ]]]\n"
              },
              "overlay": {
                "default": "transparent",
                "active": "transparent",
                "inactive": "transparent"
              }
            },
            "show_name": false,
            "show_state": false,
            "show_label": true,
            "label": null,
            "entity": null,
            "active_state": "on"
          },
          "up_right": {
            "color": {
              "background": {
                "inactive": "[[[ return variables.__defs_dpad.color.background.active ]]]\n",
                "active": "[[[ return variables.__defs_dpad.color.background.inactive ]]]\n"
              },
              "overlay": {
                "default": "transparent",
                "active": "transparent",
                "inactive": "transparent"
              }
            },
            "show_name": false,
            "show_state": false,
            "show_label": true,
            "label": null,
            "entity": null,
            "active_state": "on"
          },
          "down_left": {
            "color": {
              "background": {
                "inactive": "[[[ return variables.__defs_dpad.color.background.active ]]]\n",
                "active": "[[[ return variables.__defs_dpad.color.background.inactive ]]]\n"
              },
              "overlay": {
                "default": "transparent",
                "active": "transparent",
                "inactive": "transparent"
              }
            },
            "show_name": false,
            "show_state": false,
            "show_label": true,
            "label": null,
            "entity": null,
            "active_state": "on"
          },
          "down_right": {
            "color": {
              "background": {
                "inactive": "[[[ return variables.__defs_dpad.color.background.active ]]]\n",
                "active": "[[[ return variables.__defs_dpad.color.background.inactive ]]]\n"
              },
              "overlay": {
                "default": "transparent",
                "active": "transparent",
                "inactive": "transparent"
              }
            },
            "show_name": false,
            "show_state": false,
            "show_label": true,
            "label": null,
            "entity": null,
            "active_state": "on"
          }
        }
      },
      "triggers_update": [
        "[[[ return variables.dpad.up.entity; ]]]",
        "[[[ return variables.dpad.down.entity; ]]]",
        "[[[ return variables.dpad.left.entity; ]]]",
        "[[[ return variables.dpad.right.entity; ]]]",
        "[[[ return variables.dpad.center.entity; ]]]",
        "[[[ return variables.dpad.up_left.entity; ]]]",
        "[[[ return variables.dpad.up_right.entity; ]]]",
        "[[[ return variables.dpad.down_left.entity; ]]]",
        "[[[ return variables.dpad.down_right.entity; ]]]"
      ],
      "styles": {
        "card": [
          {
            "height": "[[[ return variables.card.size ]]]"
          },
          {
            "width": "[[[ return variables.card.size ]]]"
          },
          {
            "background": "[[[\n  let button_ripple_color = variables.dpad.button.color.ripple;\n  let svg_dpad_up_bg = (variables.dpad.up.entity && states[variables.dpad.up.entity] && states[variables.dpad.up.entity].state === variables.dpad.up.active_state) ? variables.dpad.up.color.background.active : variables.dpad.up.color.background.inactive;\n  let svg_dpad_down_bg = (variables.dpad.down.entity && states[variables.dpad.down.entity] && states[variables.dpad.down.entity].state === variables.dpad.down.active_state) ? variables.dpad.down.color.background.active : variables.dpad.down.color.background.inactive;\n  let svg_dpad_left_bg = (variables.dpad.left.entity && states[variables.dpad.left.entity] && states[variables.dpad.left.entity].state === variables.dpad.left.active_state) ? variables.dpad.left.color.background.active : variables.dpad.left.color.background.inactive;\n  let svg_dpad_right_bg = (variables.dpad.right.entity && states[variables.dpad.right.entity] && states[variables.dpad.right.entity].state === variables.dpad.right.active_state) ? variables.dpad.right.color.background.active : variables.dpad.right.color.background.inactive;\n  let svg_dpad_center_bg = (variables.dpad.center.entity && states[variables.dpad.center.entity] && states[variables.dpad.center.entity].state === variables.dpad.center.active_state) ? variables.dpad.center.color.background.active : variables.dpad.center.color.background.inactive;\n  let svg_dpad_up_left_bg = (variables.dpad.up_left.entity && states[variables.dpad.up_left.entity] && states[variables.dpad.up_left.entity].state === variables.dpad.up_left.active_state) ? variables.dpad.up_left.color.background.active : variables.dpad.up_left.color.background.inactive;\n  let svg_dpad_up_right_bg = (variables.dpad.up_right.entity && states[variables.dpad.up_right.entity] && states[variables.dpad.up_right.entity].state === variables.dpad.up_right.active_state) ? variables.dpad.up_right.color.background.active : variables.dpad.up_right.color.background.inactive;\n  let svg_dpad_down_left_bg = (variables.dpad.down_left.entity && states[variables.dpad.down_left.entity] && states[variables.dpad.down_left.entity].state === variables.dpad.down_left.active_state) ? variables.dpad.down_left.color.background.active : variables.dpad.down_left.color.background.inactive;\n  let svg_dpad_down_right_bg = (variables.dpad.down_right.entity && states[variables.dpad.down_right.entity] && states[variables.dpad.down_right.entity].state === variables.dpad.down_right.active_state) ? variables.dpad.down_right.color.background.active : variables.dpad.down_right.color.background.inactive;\n  let svg_background_color = variables.dpad.color.background;\n  let svgString = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <svg width=\"80mm\" height=\"80mm\" version=\"1.1\" viewBox=\"0 0 80 80\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <metadata>\n    <rdf:RDF>\n      <cc:Work rdf:about=\"\">\n      <dc:format>image/svg+xml</dc:format>\n      <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n      <dc:title/>\n      </cc:Work>\n    </rdf:RDF>\n    </metadata>\n    <defs>\n      <style type=\"text/css\"><![CDATA[\n      .lcars-svg-bg {\n      fill: ${svg_background_color};\n      }\n      .lcars-d-pad-bg {\n      fill: ${button_ripple_color};\n      }\n      .lcars-dpad-left-bg {\n      fill: ${svg_dpad_left_bg};\n      }\n      .lcars-dpad-right-bg {\n      fill: ${svg_dpad_right_bg};\n      }\n      .lcars-dpad-up-bg {\n      fill: ${svg_dpad_up_bg};\n      }\n      .lcars-dpad-down-bg {\n      fill: ${svg_dpad_down_bg};\n      }\n      .lcars-dpad-center-bg {\n      fill: ${svg_dpad_center_bg};\n      }\n      .lcars-dpad-up-left-bg {\n      fill: ${svg_dpad_up_left_bg};\n      }\n      .lcars-dpad-up-right-bg {\n      fill: ${svg_dpad_up_right_bg};\n      }\n      .lcars-dpad-down-left-bg {\n      fill: ${svg_dpad_down_left_bg};\n      }\n      .lcars-dpad-down-right-bg {\n      fill: ${svg_dpad_down_right_bg};\n      }\n      ]]></style>\n    </defs>\n    <g transform=\"translate(0,-217)\">\n    <path id=\"path892\" d=\"m33 250v-32.35c-15.992 2.4474-29.977 16.417-32.424 32.35z\" class=\"lcars-dpad-up-left-bg\"></path>\n    <path d=\"m33 250v-32.35c-15.992 2.4474-29.977 16.417-32.424 32.35z\" class=\"lcars-dpad-up-right-bg\" transform=\"matrix(-1, 0, 0, 1, 80, 0.0000019179001355951186)\"></path>\n    <path d=\"m33 250v-32.35c-15.992 2.4474-29.977 16.417-32.424 32.35z\" class=\"lcars-dpad-down-left-bg\" transform=\"matrix(1, 0, 0, -1, -8.208900226236437e-8, 514)\"></path>\n    <path d=\"m33 250v-32.35c-15.992 2.4474-29.977 16.417-32.424 32.35z\" class=\"lcars-dpad-down-right-bg\" transform=\"matrix(-1, 0, 0, -1, 80, 514)\"></path>\n    <path d=\"m34 227h12v-9.5c-3.8785-0.47437-8.044-0.4824-12 0z\" class=\"lcars-dpad-up-bg\"/>\n    <path d=\"m44.2 219.2v5.0271\" style=\"fill:none;stroke-width:1.2;stroke:#000\"/>\n    <path d=\"m10 263v-12h-9.5c-0.47437 3.8785-0.4824 8.044 0 12z\" class=\"lcars-dpad-left-bg\"/>\n    <path d=\"m2.199 252.8h5.0271\" style=\"fill:none;opacity:.889;stroke-width:1.2;stroke:#000\"/>\n    <path d=\"m70 251v12h9.5c0.47437-3.8785 0.4824-8.044 0-12z\" class=\"lcars-dpad-right-bg\"/>\n    <path d=\"m77.801 261.2h-5.0271\" style=\"fill:none;stroke-width:1.2;stroke:#000\"/>\n    <path d=\"m46 287h-12v9.5c3.8785 0.47437 8.044 0.4824 12 0z\" class=\"lcars-dpad-down-bg\"/>\n    <path d=\"m35.8 294.8v-5.0271\" style=\"fill:none;stroke-width:1.2;stroke:#000\"/>\n    <path d=\"m11 251v12h23v23h12v-23h23v-12h-23v-23h-12v23z\" class=\"lcars-dpad-center-bg\"/>\n    <path d=\"m34 230.49h12\" style=\"fill:none;stroke-width:.75;stroke:#000\"/>\n    <path d=\"m34 233.2h12\" style=\"fill:none;stroke-width:.75;stroke:#000\"/>\n    <path d=\"m34 236.48h12\" style=\"fill:none;stroke-width:.75;stroke:#000\"/>\n    <path d=\"m34 244.9h12\" style=\"fill:none;stroke-width:.75;stroke:#000\"/>\n    <path d=\"m34 276h12\" style=\"fill:none;stroke-width:.75;stroke:#000\"/>\n    </g>\n  </svg>`;\n  let encodedSvgString = encodeURIComponent(svgString);\n  let backgroundImage = `url('data:image/svg+xml,${encodedSvgString}')`;\n  return backgroundImage;\n]]]\n"
          },
          {
            "background-position": "center"
          },
          {
            "background-size": "[[[ return variables.card.size ]]]"
          },
          {
            "background-color": "none"
          }
        ],
        "custom_fields": {
          "dpad_up_button": [
            {
              "position": "absolute"
            },
            {
              "top": "0px"
            },
            {
              "left": "[[[ return \"calc((\" + variables.card.size + \"/2) - (\" + variables.card.size + \" / \" + variables.dpad.button.scale + \"/2))\"; ]]]\n"
            },
            {
              "z-index": 100
            }
          ],
          "dpad_down_button": [
            {
              "position": "absolute"
            },
            {
              "bottom": "0px"
            },
            {
              "left": "[[[ return \"calc((\" + variables.card.size + \"/2) - (\" + variables.card.size + \" / \" + variables.dpad.button.scale + \"/2))\"; ]]]\n"
            },
            {
              "z-index": 100
            }
          ],
          "dpad_left_button": [
            {
              "position": "absolute"
            },
            {
              "left": "0px"
            },
            {
              "top": "[[[ return \"calc((\" + variables.card.size + \"/2) - (\" + variables.card.size + \" / \" + variables.dpad.button.scale + \"/2))\"; ]]]\n"
            },
            {
              "z-index": 100
            }
          ],
          "dpad_right_button": [
            {
              "position": "absolute"
            },
            {
              "right": "0px"
            },
            {
              "top": "[[[ return \"calc((\" + variables.card.size + \"/2) - (\" + variables.card.size + \" / \" + variables.dpad.button.scale + \"/2))\"; ]]]\n"
            },
            {
              "z-index": 100
            }
          ],
          "dpad_center_button": [
            {
              "position": "absolute"
            },
            {
              "right": "[[[ return \"calc(\" + variables.card.size + \" /4 )\";]]]\n"
            },
            {
              "top": "[[[ return \"calc((\" + variables.card.size + \"/2) - (\" + variables.card.size + \" / \" + variables.dpad.button.scale + \"/2))\"; ]]]\n"
            },
            {
              "z-index": 100
            }
          ],
          "dpad_up_left_button": [
            {
              "position": "absolute"
            },
            {
              "top": "0px"
            },
            {
              "left": "0px"
            },
            {
              "z-index": 99
            }
          ],
          "dpad_up_right_button": [
            {
              "position": "absolute"
            },
            {
              "top": "0px"
            },
            {
              "right": "0px"
            },
            {
              "z-index": 99
            }
          ],
          "dpad_down_left_button": [
            {
              "position": "absolute"
            },
            {
              "bottom": "0px"
            },
            {
              "left": "0px"
            },
            {
              "z-index": 99
            }
          ],
          "dpad_down_right_button": [
            {
              "position": "absolute"
            },
            {
              "bottom": "0px"
            },
            {
              "right": "0px"
            },
            {
              "z-index": 99
            }
          ]
        }
      },
      "custom_fields": {
        "dpad_center_button": {
          "card": {
            "type": "custom:button-card",
            "entity": "[[[ return variables.dpad.center.entity; ]]]",
            "template": [
              "cb-lcars-animate-press",
              "cb-lcars-button-square"
            ],
            "variables": {
              "ripple_color": "[[[ return variables.dpad.button.color.ripple; ]]]",
              "card": {
                "min_height": "[[[ return variables.dpad.button.min_height; ]]]",
                "width": "[[[ return \"calc(\" + variables.card.size + \" /2 )\";]]]\n",
                "height": "[[[ return \"calc(\" + variables.card.size + \" / \" +\nvariables.dpad.button.scale + \" )\";]]]\n",
                "color": {
                  "background": {
                    "default": "[[[ return variables.dpad.center.color.overlay.default ]]]",
                    "active": "[[[ return variables.dpad.center.color.overlay.active ]]]",
                    "inactive": "[[[ return variables.dpad.center.color.overlay.inactive ]]]"
                  }
                }
              }
            }
          }
        },
        "dpad_up_button": {
          "card": {
            "type": "custom:button-card",
            "entity": "[[[ return variables.dpad.up.entity; ]]]",
            "template": [
              "cb-lcars-animate-press",
              "cb-lcars-button-square"
            ],
            "variables": {
              "ripple_color": "[[[ return variables.dpad.button.color.ripple; ]]]",
              "card": {
                "min_height": "[[[ return variables.dpad.button.min_height; ]]]",
                "width": "[[[ return \"calc(\" + variables.card.size + \" / \" + variables.dpad.button.scale + \")\";]]]\n",
                "height": "[[[ return \"calc(\" + variables.card.size + \" / \" +\nvariables.dpad.button.scale + \")\";]]]\n",
                "color": {
                  "background": {
                    "default": "[[[ return variables.dpad.up.color.overlay.default ]]]",
                    "active": "[[[ return variables.dpad.up.color.overlay.active ]]]",
                    "inactive": "[[[ return variables.dpad.up.color.overlay.inactive ]]]"
                  }
                }
              }
            }
          }
        },
        "dpad_down_button": {
          "card": {
            "type": "custom:button-card",
            "entity": "[[[ return variables.dpad.down.entity; ]]]",
            "template": [
              "cb-lcars-animate-press",
              "cb-lcars-button-square"
            ],
            "variables": {
              "ripple_color": "[[[ return variables.dpad.button.color.ripple; ]]]",
              "card": {
                "min_height": "[[[ return variables.dpad.button.min_height; ]]]",
                "width": "[[[ return \"calc(\" + variables.card.size + \" / \" + variables.dpad.button.scale + \")\";]]]\n",
                "height": "[[[ return \"calc(\" + variables.card.size + \" / \" +\nvariables.dpad.button.scale + \")\";]]]\n",
                "color": {
                  "background": {
                    "default": "[[[ return variables.dpad.down.color.overlay.default ]]]",
                    "active": "[[[ return variables.dpad.down.color.overlay.active ]]]",
                    "inactive": "[[[ return variables.dpad.down.color.overlay.inactive ]]]"
                  }
                }
              }
            }
          }
        },
        "dpad_left_button": {
          "card": {
            "type": "custom:button-card",
            "entity": "[[[ return variables.dpad.left.entity; ]]]",
            "template": [
              "cb-lcars-animate-press",
              "cb-lcars-button-square"
            ],
            "variables": {
              "ripple_color": "[[[ return variables.dpad.button.color.ripple; ]]]",
              "card": {
                "min_height": "[[[ return variables.dpad.button.min_height; ]]]",
                "width": "[[[ return \"calc(\" + variables.card.size + \" / \" + variables.dpad.button.scale + \")\";]]]\n",
                "height": "[[[ return \"calc(\" + variables.card.size + \" / \" +\nvariables.dpad.button.scale + \")\";]]]\n",
                "color": {
                  "background": {
                    "default": "[[[ return variables.dpad.left.color.overlay.default ]]]",
                    "active": "[[[ return variables.dpad.left.color.overlay.active ]]]",
                    "inactive": "[[[ return variables.dpad.left.color.overlay.inactive ]]]"
                  }
                }
              }
            }
          }
        },
        "dpad_right_button": {
          "card": {
            "type": "custom:button-card",
            "entity": "[[[ return variables.dpad.right.entity; ]]]",
            "template": [
              "cb-lcars-animate-press",
              "cb-lcars-button-square"
            ],
            "variables": {
              "ripple_color": "[[[ return variables.dpad.button.color.ripple; ]]]",
              "card": {
                "min_height": "[[[ return variables.dpad.button.min_height; ]]]",
                "width": "[[[ return \"calc(\" + variables.card.size + \" / \" + variables.dpad.button.scale + \")\";]]]\n",
                "height": "[[[ return \"calc(\" + variables.card.size + \" / \" +\nvariables.dpad.button.scale + \")\";]]]\n",
                "color": {
                  "background": {
                    "default": "[[[ return variables.dpad.right.color.overlay.default ]]]",
                    "active": "[[[ return variables.dpad.right.color.overlay.active ]]]",
                    "inactive": "[[[ return variables.dpad.right.color.overlay.inactive ]]]"
                  }
                }
              }
            }
          }
        },
        "dpad_up_left_button": {
          "card": {
            "type": "custom:button-card",
            "entity": "[[[ return variables.dpad.up_left.entity; ]]]",
            "template": [
              "cb-lcars-animate-press",
              "cb-lcars-base"
            ],
            "variables": {
              "ripple_color": "[[[ return variables.dpad.button.color.ripple; ]]]",
              "card": {
                "width": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n",
                "height": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n",
                "color": {
                  "background": {
                    "default": "[[[ return variables.dpad.up_left.color.overlay.default ]]]",
                    "active": "[[[ return variables.dpad.up_left.color.overlay.active ]]]",
                    "inactive": "[[[ return variables.dpad.up_left.color.overlay.inactive ]]]"
                  }
                },
                "border": {
                  "top": {
                    "left_radius": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n"
                  }
                }
              }
            },
            "label": "[[[ return variables.dpad.up_left.label ]]]",
            "show_name": "[[[ return variables.dpad.up_left.show_name ]]]",
            "show_label": "[[[ return variables.dpad.up_left.show_label]]]",
            "show_state": "[[[ return variables.dpad.up_left.show_state ]]]"
          }
        },
        "dpad_up_right_button": {
          "card": {
            "type": "custom:button-card",
            "entity": "[[[ return variables.dpad.up_right.entity; ]]]",
            "template": [
              "cb-lcars-animate-press",
              "cb-lcars-base"
            ],
            "variables": {
              "ripple_color": "[[[ return variables.dpad.button.color.ripple; ]]]",
              "card": {
                "width": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n",
                "height": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n",
                "color": {
                  "background": {
                    "default": "[[[ return variables.dpad.up_right.color.overlay.default ]]]",
                    "active": "[[[ return variables.dpad.up_right.color.overlay.active ]]]",
                    "inactive": "[[[ return variables.dpad.up_right.color.overlay.inactive ]]]"
                  }
                },
                "border": {
                  "top": {
                    "right_radius": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n"
                  }
                }
              }
            },
            "label": "[[[ return variables.dpad.up_right.label ]]]",
            "show_name": "[[[ return variables.dpad.up_right.show_name ]]]",
            "show_label": "[[[ return variables.dpad.up_right.show_label]]]",
            "show_state": "[[[ return variables.dpad.up_right.show_state ]]]"
          }
        },
        "dpad_down_left_button": {
          "card": {
            "type": "custom:button-card",
            "entity": "[[[ return variables.dpad.down_left.entity; ]]]",
            "template": [
              "cb-lcars-animate-press",
              "cb-lcars-base"
            ],
            "variables": {
              "ripple_color": "[[[ return variables.dpad.button.color.ripple; ]]]",
              "card": {
                "width": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n",
                "height": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n",
                "color": {
                  "background": {
                    "default": "[[[ return variables.dpad.down_left.color.overlay.default ]]]",
                    "active": "[[[ return variables.dpad.down_left.color.overlay.active ]]]",
                    "inactive": "[[[ return variables.dpad.down_left.color.overlay.inactive ]]]"
                  }
                },
                "border": {
                  "bottom": {
                    "left_radius": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n"
                  }
                }
              }
            },
            "label": "[[[ return variables.dpad.down_left.label ]]]",
            "show_name": "[[[ return variables.dpad.down_left.show_name ]]]",
            "show_label": "[[[ return variables.dpad.down_left.show_label]]]",
            "show_state": "[[[ return variables.dpad.down_left.show_state ]]]"
          }
        },
        "dpad_down_right_button": {
          "card": {
            "type": "custom:button-card",
            "entity": "[[[ return variables.dpad.down_right.entity; ]]]",
            "template": [
              "cb-lcars-animate-press",
              "cb-lcars-base"
            ],
            "variables": {
              "ripple_color": "[[[ return variables.dpad.button.color.ripple; ]]]",
              "card": {
                "width": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n",
                "height": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n",
                "color": {
                  "background": {
                    "default": "[[[ return variables.dpad.down_right.color.overlay.default ]]]",
                    "active": "[[[ return variables.dpad.down_right.color.overlay.active ]]]",
                    "inactive": "[[[ return variables.dpad.down_right.color.overlay.inactive ]]]"
                  }
                },
                "border": {
                  "bottom": {
                    "right_radius": "[[[ return \"calc(\" + variables.card.size + \" / 2)\";]]]\n"
                  }
                }
              }
            },
            "label": "[[[ return variables.dpad.down_right.label ]]]",
            "show_name": "[[[ return variables.dpad.down_right.show_name ]]]",
            "show_label": "[[[ return variables.dpad.down_right.show_label]]]",
            "show_state": "[[[ return variables.dpad.down_right.show_state ]]]"
          }
        }
      }
    },
    "cb-lcars-animate-press": {
      "variables": {
        "ripple_color": "var(--lcars-card-top-color)"
      },
      "styles": {
        "card": [
          {
            "--mdc-ripple-color": "[[[ return variables.ripple_color; ]]]"
          },
          {
            "--mdc-ripple-press-opacity": 0.5
          }
        ]
      }
    },
    "cb-lcars-button-picard-filled": {
      "template": "cb-lcars-button-base",
      "variables": {
        "text": {
          "label": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            },
            "color": {
              "default": "black",
              "on": "black",
              "off": "black",
              "zero": "var(--picard-green)",
              "non_zero": "var(--picard-blue)",
              "hvac_heat": "var(--picard-light-orange)",
              "hvac_cool": "var(--picard-blue)",
              "hvac_other": "var(--picard-black-cherry)"
            }
          },
          "state": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            },
            "color": {
              "default": "black",
              "on": "black",
              "off": "black",
              "zero": "var(--picard-green)",
              "non_zero": "var(--picard-blue)",
              "hvac_heat": "var(--picard-light-orange)",
              "hvac_cool": "var(--picard-blue)",
              "hvac_other": "var(--picard-black-cherry)"
            }
          },
          "name": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            },
            "color": {
              "default": "black",
              "on": "black",
              "off": "black",
              "zero": "var(--picard-green)",
              "non_zero": "var(--picard-blue)",
              "hvac_heat": "var(--picard-light-orange)",
              "hvac_cool": "var(--picard-blue)",
              "hvac_other": "var(--picard-black-cherry)"
            }
          }
        },
        "icon": {
          "color": {
            "default": "black"
          },
          "justify": "left",
          "border": {
            "top": {
              "size": "0px",
              "color": "transparent"
            },
            "bottom": {
              "size": "0px",
              "color": "transparent"
            },
            "right": {
              "size": "6px",
              "color": "black",
              "padding": "1.5%",
              "margin": 0
            },
            "left": {
              "size": "6px",
              "color": "transparent",
              "padding": "0.5%",
              "margin": null
            }
          }
        }
      },
      "state": [
        {
          "value": "open",
          "id": "state_open",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.active ]]]"
              },
              {
                "color": "[[[ return variables.card.color.active ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.on ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.on ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.on ]]]"
              }
            ]
          }
        },
        {
          "value": "closed",
          "id": "state_closed",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.inactive ]]]"
              },
              {
                "color": "[[[ return variables.card.color.inactive ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.off ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.off ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.off ]]]"
              }
            ]
          }
        },
        {
          "value": "heat",
          "id": "state_heat",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.text.state.color.hvac_heat ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.on ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.on ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.on ]]]"
              }
            ]
          }
        },
        {
          "value": "cool",
          "id": "state_cool",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.text.state.color.hvac_cool ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.on ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.on]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.on ]]]"
              }
            ]
          }
        },
        {
          "operator": "template",
          "value": "[[[\n  return entity !== undefined && ['00', '0'].includes(states[entity.entity_id].state);\n]]]\n",
          "id": "state_zero",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.text.state.color.zero ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.off ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.off ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.off ]]]"
              }
            ]
          }
        },
        {
          "operator": "template",
          "value": "[[[\n  return entity !== undefined && states[entity.entity_id].state !== '0';\n]]]\n",
          "id": "state_nonzero",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.text.state.color.non_zero ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.on ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.on ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.on ]]]"
              }
            ]
          }
        },
        {
          "value": "on",
          "id": "state_on",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.active ]]]"
              },
              {
                "border-top": "[[[ return variables.card.border.top.size + \" solid \" + variables.card.color.active ]]]"
              },
              {
                "border-left": "[[[ return variables.card.border.left.size + \" solid \" + variables.card.color.active ]]]"
              },
              {
                "border-right": "[[[ return variables.card.border.right.size + \" solid \" + variables.card.color.active ]]]"
              },
              {
                "border-bottom": "[[[ return variables.card.border.bottom.size + \" solid \" + variables.card.color.active ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.on ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.on ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.on ]]]"
              }
            ],
            "icon": [
              {
                "color": "[[[ return variables.icon.color.active || variables.icon.color.default ]]]"
              },
              {
                "background": "[[[ return variables.icon.color.background.active || variables.card.color.background.active ]]]"
              }
            ]
          }
        },
        {
          "value": "off",
          "id": "state_off",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.inactive ]]]"
              },
              {
                "border-top": "[[[ return variables.card.border.top.size + \" solid \" + variables.card.color.inactive ]]]"
              },
              {
                "border-left": "[[[ return variables.card.border.left.size + \" solid \" + variables.card.color.inactive ]]]"
              },
              {
                "border-right": "[[[ return variables.card.border.right.size + \" solid \" + variables.card.color.inactive ]]]"
              },
              {
                "border-bottom": "[[[ return variables.card.border.bottom.size + \" solid \" + variables.card.color.inactive ]]]          "
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.off ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.off ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.off ]]]"
              }
            ],
            "icon": [
              {
                "color": "[[[ return variables.icon.color.inactive || variables.icon.color.default ]]]"
              },
              {
                "background": "[[[ return variables.icon.color.background.inactive || variables.card.color.background.inactive ]]]"
              }
            ]
          }
        },
        {
          "operator": "default",
          "id": "state_default",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.inactive ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.default ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.default ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.default ]]]"
              }
            ],
            "icon": [
              {
                "color": "[[[ return variables.icon.color.inactive || variables.icon.color.default ]]]"
              },
              {
                "background": "[[[ return variables.icon.color.background.inactive || variables.card.color.background.inactive ]]]  "
              }
            ]
          }
        }
      ]
    },
    "cb-lcars-button-picard-filled-dense": {
      "template": "cb-lcars-button-picard-filled",
      "variables": {
        "card": {
          "height": "50px"
        }
      }
    },
    "cb-lcars-button-picard-filled-right": {
      "template": "cb-lcars-button-picard-filled",
      "variables": {
        "text": {
          "label": {
            "justify": "left"
          },
          "state": {
            "justify": "left"
          },
          "name": {
            "justify": "left"
          }
        },
        "icon": {
          "color": {
            "default": "black"
          },
          "justify": "right",
          "border": {
            "top": {
              "size": "0px",
              "color": "transparent"
            },
            "bottom": {
              "size": "0px",
              "color": "transparent"
            },
            "left": {
              "size": "6px",
              "color": "black",
              "padding": "1.5%",
              "margin": 0
            },
            "right": {
              "size": "6px",
              "color": "transparent",
              "padding": "0.5%",
              "margin": null
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-filled-dense-right": {
      "template": "cb-lcars-button-picard-filled-right",
      "variables": {
        "card": {
          "height": "50px"
        }
      }
    },
    "cb-lcars-button-bullet": {
      "template": "cb-lcars-button-lozenge",
      "variables": {
        "card": {
          "border": {
            "top": {
              "left_radius": "0px"
            },
            "bottom": {
              "left_radius": "0px"
            }
          }
        }
      }
    },
    "cb-lcars-button-bullet-right": {
      "template": "cb-lcars-button-lozenge-right",
      "variables": {
        "card": {
          "border": {
            "top": {
              "right_radius": "0px"
            },
            "bottom": {
              "right_radius": "0px"
            }
          }
        }
      }
    },
    "cb-lcars-debug": {
      "variables": {
        "debug": true,
        "debug_hass": false,
        "debug_extras": null,
        "__title": ":::CB-LCARS::DEBUG::>"
      },
      "custom_fields": {
        "debugger": "[[[\n  if (!variables.debug) return\n  const o = {\n    variables: variables, \n    entity: entity ? entity : {},\n    bc: this\n  }\n  if (variables.debug_hass) {\n    o.hass = hass\n  }\n  if (variables.debug_extras) {\n    o.extras = variables.debug_extras\n  }\n  console.debug(variables.__title, o)\n]]]\n"
      },
      "styles": {
        "custom_fields": {
          "debugger": [
            {
              "height": 0
            },
            {
              "width": 0
            },
            {
              "visibility": "hidden"
            }
          ]
        }
      }
    },
    "cb-lcars-footer-picard": {
      "template": [
        "cb-lcars-card-base"
      ],
      "variables": {
        "card": {
          "height": "100px",
          "width": "400px",
          "border": {
            "top": {
              "left_radius": "0px !important",
              "right_radius": "0px !important"
            },
            "bottom": {
              "left_radius": "var(--ha-card-border-radius)",
              "right_radius": "0px !important"
            },
            "inner": {
              "factor": 1,
              "width": "35px"
            }
          }
        },
        "card_label": " ",
        "lcars": {
          "border": {
            "gap": "4px",
            "factor": 4,
            "top": {
              "size": 0
            },
            "left": {
              "size": "180px"
            },
            "bottom": {
              "size": "20px"
            },
            "right": {
              "size": 0
            }
          }
        },
        "lcars_outer": {
          "card": {
            "color": "var(--lcars-card-bottom-color)",
            "border": {
              "left": {
                "size": "[[[ return \"calc( ((\" + variables.lcars.border.left.size + \" - \" + variables.lcars.border.gap + \") / \" + variables.lcars.border.factor + \") * (\" + variables.lcars.border.factor + \" - 1)\" + \")\";]]]"
              },
              "bottom": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.bottom.size + \" - \" + variables.lcars.border.gap + \") / 2)\";]]]"
              }
            }
          }
        },
        "lcars_inner": {
          "card": {
            "color": "var(--lcars-card-bottom-color)",
            "border": {
              "left": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.left.size + \" - \" + variables.lcars.border.gap + \" ) / \" + variables.lcars.border.factor + \")\" ;]]]"
              },
              "bottom": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.bottom.size + \" - \" + variables.lcars.border.gap + \") / 2)\";]]]",
                "left_radius": "[[[ return \"calc((\" + variables.card.border.bottom.left_radius + \" ) / \" + variables.card.border.inner.factor +\" )\";]]]"
              },
              "inner": {
                "factor": 2
              }
            }
          }
        }
      },
      "styles": {
        "card": [
          {
            "background-color": "transparent"
          },
          {
            "height": "[[[ return variables.card.height; ]]]"
          },
          {
            "width": "[[[ return variables.card.width; ]]]"
          },
          {
            "border-top-left-radius": "[[[ return variables.card.border.top.left_radius ]]]"
          },
          {
            "border-top-right-radius": "[[[ return variables.card.border.top.right_radius ]]]"
          },
          {
            "border-bottom-left-radius": "[[[ return variables.card.border.bottom.left_radius ]]]"
          },
          {
            "border-bottom-right-radius": "[[[ return variables.card.border.bottom.right_radius ]]]"
          }
        ],
        "custom_fields": {
          "lcars_outer": [
            {
              "position": "absolute"
            },
            {
              "bottom": 0
            },
            {
              "left": 0
            }
          ],
          "lcars_inner": [
            {
              "position": "absolute"
            },
            {
              "bottom": "[[[ return \"calc( (\" + variables.lcars_outer.card.border.bottom.size + \" + \" + variables.lcars.border.gap + \")  ) \"; ]]]"
            },
            {
              "left": "[[[ return \"calc( (\" + variables.lcars_outer.card.border.left.size + \" + \" + variables.lcars.border.gap + \")  ) \"; ]]]"
            }
          ]
        }
      },
      "custom_fields": {
        "lcars_outer": {
          "card": {
            "type": "custom:button-card",
            "template": [
              "cb-lcars-footer"
            ],
            "variables": {
              "card": {
                "width": "[[[ return variables.card.width; ]]]",
                "height": "[[[ return variables.card.height; ]]]",
                "border": {
                  "bottom": {
                    "left_radius": "[[[ return variables.card.border.bottom.left_radius ]]]",
                    "size": "[[[ return variables.lcars_outer.card.border.bottom.size ]]]"
                  },
                  "left": {
                    "size": "[[[ return variables.lcars_outer.card.border.left.size ]]]",
                    "right_radius": "0px"
                  },
                  "inner": {
                    "factor": "[[[ return variables.card.border.inner.factor; ]]]",
                    "width": "[[[ return variables.card.border.inner.width ]]]"
                  },
                  "color": "[[[ return variables.lcars_outer.card.color ]]]"
                }
              }
            }
          }
        },
        "lcars_inner": {
          "card": {
            "type": "custom:button-card",
            "template": [
              "cb-lcars-footer"
            ],
            "label": "[[[ return variables.card_label; ]]]",
            "variables": {
              "card": {
                "width": "[[[ return variables.card.width ]]]",
                "height": "[[[ return variables.card.height ]]]",
                "border": {
                  "color": "[[[ return variables.lcars_inner.card.color ]]]",
                  "left": {
                    "size": "[[[ return variables.lcars_inner.card.border.left.size ]]]"
                  },
                  "bottom": {
                    "size": "[[[ return variables.lcars_inner.card.border.bottom.size ]]]",
                    "left_radius": "[[[ return variables.lcars_inner.card.border.bottom.left_radius ]]]",
                    "right_radius": "0px"
                  },
                  "inner": {
                    "factor": "[[[ return variables.lcars_inner.card.border.inner.factor ]]]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "cb-lcars-footer-picard-right": {
      "template": [
        "cb-lcars-card-base"
      ],
      "variables": {
        "card": {
          "height": "100px",
          "width": "400px",
          "border": {
            "top": {
              "left_radius": "0px !important",
              "right_radius": "0px !important"
            },
            "bottom": {
              "left_radius": "0px !important",
              "right_radius": "var(--ha-card-border-radius)"
            },
            "inner": {
              "factor": 1,
              "width": "35px"
            }
          }
        },
        "card_label": " ",
        "lcars": {
          "border": {
            "gap": "4px",
            "factor": 4,
            "top": {
              "size": 0
            },
            "left": {
              "size": 0
            },
            "bottom": {
              "size": "20px"
            },
            "right": {
              "size": "180px"
            }
          }
        },
        "lcars_outer": {
          "card": {
            "color": "var(--lcars-card-bottom-color)",
            "border": {
              "right": {
                "size": "[[[ return \"calc( ((\" + variables.lcars.border.right.size + \" - \" + variables.lcars.border.gap + \") / \" + variables.lcars.border.factor + \") * (\" + variables.lcars.border.factor + \" - 1)\" + \")\";]]]"
              },
              "bottom": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.bottom.size + \" - \" + variables.lcars.border.gap + \") / 2)\";]]]"
              }
            }
          }
        },
        "lcars_inner": {
          "card": {
            "color": "var(--lcars-card-bottom-color)",
            "border": {
              "right": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.right.size + \" - \" + variables.lcars.border.gap + \" ) / \" + variables.lcars.border.factor + \")\" ;]]]"
              },
              "bottom": {
                "size": "[[[ return \"calc((\" + variables.lcars.border.bottom.size + \" - \" + variables.lcars.border.gap + \") / 2)\";]]]",
                "right_radius": "[[[ return \"calc((\" + variables.card.border.bottom.right_radius + \" ) / \" + variables.card.border.inner.factor +\" )\";]]]"
              },
              "inner": {
                "factor": 2
              }
            }
          }
        }
      },
      "styles": {
        "card": [
          {
            "background-color": "transparent"
          },
          {
            "height": "[[[ return variables.card.height; ]]]"
          },
          {
            "width": "[[[ return variables.card.width; ]]]"
          },
          {
            "border-top-left-radius": "[[[ return variables.card.border.top.left_radius ]]]"
          },
          {
            "border-top-right-radius": "[[[ return variables.card.border.top.right_radius ]]]"
          },
          {
            "border-bottom-left-radius": "[[[ return variables.card.border.bottom.left_radius ]]]"
          },
          {
            "border-bottom-right-radius": "[[[ return variables.card.border.bottom.right_radius ]]]"
          }
        ],
        "custom_fields": {
          "lcars_outer": [
            {
              "position": "absolute"
            },
            {
              "bottom": 0
            },
            {
              "right": 0
            }
          ],
          "lcars_inner": [
            {
              "position": "absolute"
            },
            {
              "bottom": "[[[ return \"calc( (\" + variables.lcars_outer.card.border.bottom.size + \" + \" + variables.lcars.border.gap + \")  ) \"; ]]]"
            },
            {
              "right": "[[[ return \"calc( (\" + variables.lcars_outer.card.border.right.size + \" + \" + variables.lcars.border.gap + \")  ) \"; ]]]"
            }
          ]
        }
      },
      "custom_fields": {
        "lcars_outer": {
          "card": {
            "type": "custom:button-card",
            "template": [
              "cb-lcars-footer-right"
            ],
            "variables": {
              "card": {
                "width": "[[[ return variables.card.width; ]]]",
                "height": "[[[ return variables.card.height; ]]]",
                "border": {
                  "bottom": {
                    "right_radius": "[[[ return variables.card.border.bottom.right_radius ]]]",
                    "size": "[[[ return variables.lcars_outer.card.border.bottom.size ]]]"
                  },
                  "right": {
                    "size": "[[[ return variables.lcars_outer.card.border.right.size ]]]",
                    "left_radius": "0px"
                  },
                  "inner": {
                    "factor": "[[[ return variables.card.border.inner.factor; ]]]",
                    "width": "[[[ return variables.card.border.inner.width ]]]"
                  },
                  "color": "[[[ return variables.lcars_outer.card.color ]]]"
                }
              }
            }
          }
        },
        "lcars_inner": {
          "card": {
            "type": "custom:button-card",
            "template": [
              "cb-lcars-footer-right"
            ],
            "label": "[[[ return variables.card_label; ]]]",
            "variables": {
              "card": {
                "width": "[[[ return variables.card.width ]]]",
                "height": "[[[ return variables.card.height ]]]",
                "border": {
                  "color": "[[[ return variables.lcars_inner.card.color ]]]",
                  "right": {
                    "size": "[[[ return variables.lcars_inner.card.border.right.size ]]]"
                  },
                  "bottom": {
                    "size": "[[[ return variables.lcars_inner.card.border.bottom.size ]]]",
                    "right_radius": "[[[ return variables.lcars_inner.card.border.bottom.right_radius ]]]",
                    "left_radius": "0px"
                  },
                  "inner": {
                    "factor": "[[[ return variables.lcars_inner.card.border.inner.factor ]]]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "cb-lcars-grid": {
      "template": [
        "cb-lcars-card-base",
        "cb-lcars-functions"
      ],
      "variables": {
        "card": {
          "width": null,
          "height": null
        },
        "grid": {
          "auto_calc_X": true,
          "auto_calc_Y": true,
          "buttons": [],
          "X": 3,
          "Y": 2,
          "template_columns": null,
          "auto_rows": null,
          "gap": "5px"
        },
        "button": {
          "type": "custom:button-card",
          "variables": {
            "card": {
              "width": "180px",
              "height": "45px",
              "min_height": "10px"
            }
          },
          "show_name": false,
          "show_state": false,
          "show_label": false,
          "show_icon": false
        },
        "y_grid_X": "[[[ return variables.grid.auto_calc_X ? variables.__calculate_grid_cells(variables.card.width, variables.button.variables.card.width, variables.grid.gap, variables.grid.X) : variables.grid.X ]]]\n",
        "y_grid_Y": "[[[ return variables.grid.auto_calc_Y ? variables.__calculate_grid_cells(variables.card.height, variables.button.variables.card.height, variables.grid.gap, variables.grid.Y) : variables.grid.Y ]]]\n",
        "y_total_cards": "[[[ return variables.y_grid_X * variables.y_grid_Y; ]]]",
        "z_card_width": "[[[ return variables.card.width || \"calc( ((\" + variables.button.variables.card.width + \" + \" + variables.grid.gap + \" ) *\" + variables.y_grid_X + \") - \" + variables.grid.gap + \")\"; ]]]\n",
        "z_card_height": "[[[ return variables.card.height || \"calc( ((\" + variables.button.variables.card.height + \" + \" + variables.grid.gap + \" ) *\" + variables.y_grid_Y + \") - \" + variables.grid.gap + \")\"; ]]]\n"
      },
      "styles": {
        "card": [
          {
            "height": "[[[ return variables.z_card_height ]]]"
          },
          {
            "width": "[[[ return variables.z_card_width ]]]"
          },
          {
            "border-radius": "0 !important"
          }
        ],
        "custom_fields": {
          "button_grid": [
            {
              "position": "absolute"
            },
            {
              "top": "0px"
            },
            {
              "left": "0px"
            }
          ]
        }
      },
      "custom_fields": {
        "button_grid": {
          "card": {
            "type": "custom:layout-card",
            "layout_type": "custom:grid-layout",
            "layout": {
              "grid-template-columns": "[[[ return variables.grid.template_columns || \"repeat(\" + variables.y_grid_X + \", \" + variables.button.variables.card.width + \")\"; ]]]",
              "grid-auto-rows": "[[[ return variables.grid.auto_rows || variables.button.variables.card.height; ]]]",
              "grid-gap": "[[[ return variables.grid.gap; ]]]",
              "card_margin": 0,
              "padding": 0,
              "margin": "-4px -4px 0px -4px"
            },
            "cards": "[[[\n  let resultArray = [];\n  for (let x = 1; x <= variables.y_total_cards; x++) {\n    let cardObject = variables.grid.buttons && variables.grid.buttons[x-1] ? variables.grid.buttons[x-1] : {};\n    let defaultVariables = variables.button;\n    //cardObject.variables = {...defaultVariables, ...cardObject.variables};\n    cardObject = variables.__deepMerge(defaultVariables, cardObject);\n    let additionalObject = {\n      view_layout: {\n        show: '[[[ return variables.y_total_cards >= x ? \"always\" : \"never\"; ]]]'\n      },\n      show_label: variables.button.show_label,\n      label: variables.button.label || (((Math.floor(Math.random() * 256).toString(16).padStart(2, '0')) + \"-\" + (Math.floor(Math.random() * 4096).toString(16).padStart(3, '0')))),\n    };\n    //resultArray.push({...additionalObject, ...cardObject});\n    resultArray.push(variables.__deepMerge({...additionalObject}, cardObject));\n  }\n  return resultArray;\n]]]\n"
          }
        }
      }
    },
    "cb-lcars-card-base": {
      "template": "cb-lcars-functions",
      "show_icon": false,
      "show_label": false,
      "show_name": false,
      "show_state": false,
      "styles": {
        "card": [
          {
            "background-color": "[[[\n  if (states['input_boolean.lcars_ui_debug'].state === 'on') {\n    return variables.__get_random_css_color();\n  } else {\n    return 'transparent';\n  }\n]]]\n"
          }
        ]
      }
    },
    "cb-lcars-meter": {
      "template": [
        "cb-lcars-functions",
        "cb-lcars-card-base",
        "cb-lcars-button-grid"
      ],
      "variables": {
        "card": {
          "height": null,
          "width": null
        },
        "button": {
          "variables": {
            "card": {
              "height": "20px",
              "min_height": "5px",
              "width": "100px"
            }
          },
          "show_label": false,
          "template": [
            "cb-lcars-button-lozenge"
          ]
        },
        "gradient_start_color": "var(--error-color)",
        "gradient_start_rgb": "[[[ \n  return variables.__hex_to_rgba(variables.gradient_start_color)\n  ]]]\n",
        "gradient_end_color": "var(--lcars-blue)",
        "gradient_end_rgb": "[[[ \n  return variables.__hex_to_rgba(variables.gradient_end_color) \n]]]\n",
        "_gradient": {
          "X": 1,
          "Y": 10,
          "gap": "5px"
        },
        "gradient_X": "[[[ return variables.__calculate_grid_cells(variables.card.width, variables.button.variables.card.width, variables._gradient.gap, variables._gradient.X) ]]]",
        "gradient_Y": "[[[ return variables.__calculate_grid_cells(variables.card.height, variables.button.variables.card.height, variables._gradient.gap, variables._gradient.Y) ]]]",
        "grid": {
          "X": "[[[ return variables.gradient_X ]]]",
          "Y": "[[[ return variables.gradient_Y ]]]",
          "gap": "[[[ return variables._gradient.gap ]]]",
          "buttons": "[[[ \n  let buttons = [];\n  let total_steps = (variables.gradient_X > variables.gradient_Y) ? variables.gradient_X : variables.gradient_Y;\n  //console.debug(\"grid_X: \" + variables.grid_X);\n  //console.debug(\"total_steps: \" + total_steps);\n  for(let i = 0; i < total_steps ; i++) {\n    buttons.push({\n      variables: {\n        card: {\n          color: {\n            background: {\n              inactive: variables.__interpolated_rgb(variables.gradient_start_rgb,variables.gradient_end_rgb, i, total_steps)\n            },\n          },\n        },\n      },\n    });\n  }\n  return buttons;\n]]]\n"
        }
      }
    },
    "cb-lcars-meter-horizontal": {
      "template": [
        "cb-lcars-meter"
      ],
      "variables": {
        "button": {
          "variables": {
            "card": {
              "width": "10px",
              "height": "20px"
            }
          },
          "template": [
            "cb-lcars-button-picard-filled"
          ]
        },
        "_gradient": {
          "gap": "5px",
          "Y": 1,
          "X": 25
        }
      }
    },
    "cb-lcars-base": {
      "label": " ",
      "variables": {
        "text": {
          "label": {
            "font_size": "20px",
            "font_weight": "normal",
            "align": "left",
            "align_items": "center",
            "justify": "center",
            "transform": "none",
            "padding": {
              "top": "10px",
              "left": "0px",
              "right": "0px",
              "bottom": "10px"
            },
            "color": {
              "default": "var(--primary-text-color)",
              "on": "var(--primary-text-color)",
              "off": "var(--primary-text-color)",
              "zero": "var(--lcars-green)",
              "non_zero": "var(--lcars-blue)",
              "hvac_heat": "var(--lcars-orange)",
              "hvac_cool": "var(--lcars-blue)",
              "hvac_other": "var(--lcars-purple)"
            }
          },
          "name": {
            "font_size": "20px",
            "font_weight": "normal",
            "align": "left",
            "align_items": "center",
            "justify": "center",
            "transform": "none",
            "padding": {
              "top": "10px",
              "left": "0px",
              "right": "0px",
              "bottom": "10px"
            },
            "color": {
              "default": "var(--primary-text-color)",
              "on": "var(--primary-text-color)",
              "off": "var(--primary-text-color)",
              "zero": "var(--lcars-green)",
              "non_zero": "var(--lcars-blue)",
              "hvac_heat": "var(--lcars-orange)",
              "hvac_cool": "var(--lcars-blue)",
              "hvac_other": "var(--lcars-purple)"
            }
          },
          "state": {
            "font_size": "20px",
            "font_weight": "normal",
            "align": "left",
            "align_items": "center",
            "justify": "center",
            "transform": "none",
            "padding": {
              "top": "10px",
              "left": "0px",
              "right": "0px",
              "bottom": "10px"
            },
            "color": {
              "default": "var(--primary-text-color)",
              "on": "var(--primary-text-color)",
              "off": "var(--primary-text-color)",
              "zero": "var(--lcars-green)",
              "non_zero": "var(--lcars-blue)",
              "hvac_heat": "var(--lcars-orange)",
              "hvac_cool": "var(--lcars-blue)",
              "hvac_other": "var(--lcars-purple)"
            }
          }
        },
        "card": {
          "height": null,
          "min_height": "10px",
          "width": null,
          "color": {
            "active": "var(--lcars-ui-secondary)",
            "inactive": "var(--lcars-ui-tertiary)",
            "background": {
              "default": "none",
              "active": "transparent",
              "inactive": "transparent"
            }
          },
          "border": {
            "top": {
              "left_radius": "0px",
              "right_radius": "0px",
              "size": "0px"
            },
            "bottom": {
              "left_radius": "0px",
              "right_radius": "0px",
              "size": "0px"
            },
            "left": {
              "size": "0px"
            },
            "right": {
              "size": "0px"
            },
            "inner": {
              "factor": 2,
              "min_radius": "30px",
              "width": "35px"
            },
            "color": "var(--lcars-card-top-color)"
          }
        },
        "icon": {
          "box_size": "35px",
          "size": "24px",
          "justify": "left",
          "color": {
            "default": "black",
            "active": null,
            "inactive": null,
            "background": {
              "active": null,
              "inactive": null
            }
          }
        }
      },
      "show_label": false,
      "show_state": false,
      "show_icon": false,
      "show_name": false,
      "styles": {
        "img_cell": [
          {
            "justify-content": "[[[ return variables.icon.justify ]]]"
          }
        ],
        "card": [
          {
            "height": "[[[ return variables.card.height; ]]]"
          },
          {
            "min-height": "[[[ return variables.card.min_height; ]]]"
          },
          {
            "width": "[[[ return variables.card.width; ]]]"
          },
          {
            "border-top": "[[[ return variables.card.border.top.size + \" solid \" +\n    (variables.card.border.top.color || variables.card.border.color) \n]]]"
          },
          {
            "border-left": "[[[ return variables.card.border.left.size + \" solid \" +\n    (variables.card.border.left.color || variables.card.border.color) \n]]]"
          },
          {
            "border-right": "[[[ return variables.card.border.right.size + \" solid \" +\n    (variables.card.border.right.color || variables.card.border.color) \n]]]"
          },
          {
            "border-bottom": "[[[ return variables.card.border.bottom.size + \" solid \" +\n    (variables.card.border.bottom.color || variables.card.border.color)\n]]]"
          },
          {
            "background": "[[[ return variables.card.color.background.default ]]]"
          },
          {
            "border-top-left-radius": "[[[ return variables.card.border.top.left_radius + \" !important\" ]]]"
          },
          {
            "border-top-right-radius": "[[[ return variables.card.border.top.right_radius + \" !important\" ]]]"
          },
          {
            "border-bottom-left-radius": "[[[ return variables.card.border.bottom.left_radius + \" !important\" ]]]"
          },
          {
            "border-bottom-right-radius": "[[[ return variables.card.border.bottom.right_radius + \" !important\" ]]]"
          },
          {
            "position": "relative"
          }
        ],
        "label": [
          {
            "display": "flex"
          },
          {
            "justify-content": "[[[ return variables.text.label.justify ]]]"
          },
          {
            "align-items": "[[[ return variables.text.label.align_items ]]]"
          },
          {
            "text-transform": "[[[ return variables.text.label.transform ]]]"
          },
          {
            "border-left": 0
          },
          {
            "border-top": 0
          },
          {
            "border-top-left-radius": "0px"
          },
          {
            "border-top-right-radius": "0px"
          },
          {
            "background": "none !important"
          },
          {
            "position": "absolute"
          },
          {
            "top": "0px"
          },
          {
            "left": "0px"
          },
          {
            "width": "[[[ return \"calc(100% - \" + variables.text.label.padding.left + \" - \" + variables.text.label.padding.right + \")\"; ]]]"
          },
          {
            "height": "[[[ return \"calc(100% - \" + variables.text.label.padding.top + \" - \" + variables.text.label.padding.bottom + \")\"; ]]]"
          },
          {
            "color": "[[[ return variables.text.label.color.default ]]]"
          },
          {
            "font-size": "[[[ return variables.text.label.font_size ]]]"
          },
          {
            "font-weight": "[[[ return variables.text.label.font_weight ]]]"
          },
          {
            "justify-self": "start"
          },
          {
            "text-align": "[[[ return variables.text.label.align ]]]"
          },
          {
            "padding-top": "[[[ return variables.text.label.padding.top ]]]"
          },
          {
            "padding-left": "[[[ return variables.text.label.padding.left ]]]"
          },
          {
            "padding-right": "[[[ return variables.text.label.padding.right  ]]]"
          },
          {
            "padding-bottom": "[[[ return variables.text.label.padding.bottom; ]]]"
          },
          {
            "outline": "[[[ return variables.card.border.inner.width + \" solid \" + variables.card.border.color; ]]]"
          }
        ],
        "state": [
          {
            "display": "flex"
          },
          {
            "justify-content": "[[[ return variables.text.state.justify ]]]"
          },
          {
            "align-items": "[[[ return variables.text.state.align_items ]]]"
          },
          {
            "text-transform": "[[[ return variables.text.state.transform ]]]"
          },
          {
            "border-left": 0
          },
          {
            "border-top": 0
          },
          {
            "border-top-left-radius": "0px"
          },
          {
            "border-top-right-radius": "0px"
          },
          {
            "background": "none !important"
          },
          {
            "position": "absolute"
          },
          {
            "top": "0px"
          },
          {
            "left": "0px"
          },
          {
            "width": "[[[ return \"calc(100% - \" + variables.text.state.padding.left + \" - \" + variables.text.state.padding.right + \")\"; ]]]"
          },
          {
            "height": "[[[ return \"calc(100% - \" + variables.text.state.padding.top + \" - \" + variables.text.state.padding.bottom + \")\"; ]]]"
          },
          {
            "color": "[[[ return variables.text.state.color.default ]]]"
          },
          {
            "font-size": "[[[ return variables.text.state.font_size ]]]"
          },
          {
            "font-weight": "[[[ return variables.text.state.font_weight ]]]"
          },
          {
            "justify-self": "start"
          },
          {
            "text-align": "[[[ return variables.text.state.align ]]]"
          },
          {
            "padding-top": "[[[ return variables.text.state.padding.top ]]]"
          },
          {
            "padding-left": "[[[ return variables.text.state.padding.left ]]]"
          },
          {
            "padding-right": "[[[ return variables.text.state.padding.right ]]]"
          },
          {
            "padding-bottom": "[[[ return variables.text.state.padding.bottom ]]]"
          },
          {
            "outline": "[[[ return variables.card.border.inner.width + \" solid \" + variables.card.border.color; ]]]"
          }
        ],
        "name": [
          {
            "display": "flex"
          },
          {
            "justify-content": "[[[ return variables.text.name.justify ]]]"
          },
          {
            "align-items": "[[[ return variables.text.name.align_items ]]]"
          },
          {
            "text-transform": "[[[ return variables.text.name.transform ]]]"
          },
          {
            "border-left": 0
          },
          {
            "border-top": 0
          },
          {
            "border-top-left-radius": "0px"
          },
          {
            "border-top-right-radius": "0px"
          },
          {
            "background": "none !important"
          },
          {
            "position": "absolute"
          },
          {
            "top": "0px"
          },
          {
            "left": "0px"
          },
          {
            "width": "[[[ return \"calc(100% - \" + variables.text.name.padding.left + \" - \" + variables.text.name.padding.right + \")\"; ]]]"
          },
          {
            "height": "[[[ return \"calc(100% - \" + variables.text.name.padding.top + \" - \" + variables.text.name.padding.bottom + \")\"; ]]]"
          },
          {
            "color": "[[[ return variables.text.name.color.default ]]]"
          },
          {
            "font-size": "[[[ return variables.text.name.font_size ]]]"
          },
          {
            "font-weight": "[[[ return variables.text.name.font_weight ]]]"
          },
          {
            "justify-self": "start"
          },
          {
            "text-align": "[[[ return variables.text.name.align ]]]"
          },
          {
            "padding-top": "[[[ return variables.text.name.padding.top ]]]"
          },
          {
            "padding-left": "[[[ return variables.text.name.padding.left ]]]"
          },
          {
            "padding-right": "[[[ return variables.text.name.padding.right ]]]"
          },
          {
            "padding-bottom": "[[[ return variables.text.name.padding.bottom ]]]"
          },
          {
            "outline": "[[[ return variables.card.border.inner.width + \" solid \" + variables.card.border.color; ]]]"
          }
        ]
      },
      "state": [
        {
          "value": "on",
          "id": "state_on",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.active ]]]"
              },
              {
                "border-top": "[[[ return variables.card.border.top.size + \" solid \" + variables.card.color.active ]]]"
              },
              {
                "border-left": "[[[ return variables.card.border.left.size + \" solid \" + variables.card.color.active ]]]"
              },
              {
                "border-right": "[[[ return variables.card.border.right.size + \" solid \" + variables.card.color.active ]]]"
              },
              {
                "border-bottom": "[[[ return variables.card.border.bottom.size + \" solid \" + variables.card.color.active ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.on ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.on ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.on ]]]"
              }
            ],
            "icon": [
              {
                "color": "[[[ return variables.icon.color.active || variables.icon.color.default ]]]"
              },
              {
                "background": "[[[ return variables.icon.color.background.active || variables.card.color.background.active ]]]"
              }
            ]
          }
        },
        {
          "value": "off",
          "id": "state_off",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.inactive ]]]"
              },
              {
                "border-top": "[[[ return variables.card.border.top.size + \" solid \" + variables.card.color.inactive ]]]"
              },
              {
                "border-left": "[[[ return variables.card.border.left.size + \" solid \" + variables.card.color.inactive ]]]"
              },
              {
                "border-right": "[[[ return variables.card.border.right.size + \" solid \" + variables.card.color.inactive ]]]"
              },
              {
                "border-bottom": "[[[ return variables.card.border.bottom.size + \" solid \" + variables.card.color.inactive ]]]          "
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.off ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.off ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.off ]]]"
              }
            ],
            "icon": [
              {
                "color": "[[[ return variables.icon.color.inactive || variables.icon.color.default ]]]"
              },
              {
                "background": "[[[ return variables.icon.color.background.inactive || variables.card.color.background.inactive ]]]"
              }
            ]
          }
        },
        {
          "value": "open",
          "id": "state_open",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.active ]]]"
              },
              {
                "color": "[[[ return variables.card.color.active ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.on ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.on ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.on ]]]"
              }
            ]
          }
        },
        {
          "value": "closed",
          "id": "state_closed",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.inactive ]]]"
              },
              {
                "color": "[[[ return variables.card.color.inactive ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.off ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.off ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.off ]]]"
              }
            ]
          }
        },
        {
          "value": "heat",
          "id": "state_heat",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.inactive ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.hvac_heat ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.hvac_heat ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.hvac_heat ]]]"
              }
            ]
          }
        },
        {
          "value": "cool",
          "id": "state_cool",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.inactive ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.hvac_cool ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.hvac_cool ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.hvac_cool ]]]"
              }
            ]
          }
        },
        {
          "operator": "template",
          "value": "[[[\n  return entity !== undefined && ['00', '0'].includes(states[entity.entity_id].state);\n]]]\n",
          "id": "state_zero",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.inactive ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.zero ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.zero ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.zero ]]]"
              }
            ]
          }
        },
        {
          "operator": "template",
          "value": "[[[\n  return entity !== undefined && states[entity.entity_id].state !== '0';\n]]]\n",
          "id": "state_nonzero",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.inactive ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.non_zero ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.non_zero ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.non_zero ]]]"
              }
            ]
          }
        },
        {
          "operator": "default",
          "id": "state_default",
          "styles": {
            "card": [
              {
                "background-color": "[[[ return variables.card.color.background.inactive ]]]"
              }
            ],
            "state": [
              {
                "color": "[[[ return variables.text.state.color.default ]]]"
              }
            ],
            "label": [
              {
                "color": "[[[ return variables.text.label.color.default ]]]"
              }
            ],
            "name": [
              {
                "color": "[[[ return variables.text.name.color.default ]]]"
              }
            ],
            "icon": [
              {
                "color": "[[[ return variables.icon.color.inactive || variables.icon.color.default ]]]"
              },
              {
                "background": "[[[ return variables.icon.color.background.inactive || variables.card.color.background.inactive ]]]    "
              }
            ]
          }
        }
      ]
    },
    "cb-lcars-button-picard-label-east": {
      "variables": {
        "text": {
          "label": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-label-west": {
      "variables": {
        "text": {
          "label": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "justify": "left",
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-label-ne": {
      "variables": {
        "text": {
          "label": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "right",
            "align_items": "flex-start",
            "padding": {
              "top": "5px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-label-se": {
      "variables": {
        "text": {
          "label": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "right",
            "align_items": "flex-end",
            "padding": {
              "top": "5px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-label-nw": {
      "variables": {
        "text": {
          "label": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "left",
            "align_items": "flex-start",
            "padding": {
              "top": "5px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-label-sw": {
      "variables": {
        "text": {
          "label": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "left",
            "align_items": "flex-end",
            "padding": {
              "padding": {
                "top": "5px",
                "left": "10px",
                "right": "10px",
                "bottom": "5px"
              }
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-label-center": {
      "variables": {
        "text": {
          "label": {
            "font_size": "22px",
            "font_weight": "normal",
            "justify": "center",
            "align_items": "center",
            "padding": {
              "padding": {
                "bottom": "10px"
              }
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-state-east": {
      "variables": {
        "text": {
          "state": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-state-west": {
      "variables": {
        "text": {
          "state": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "justify": "left",
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-state-ne": {
      "variables": {
        "text": {
          "state": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "right",
            "align_items": "flex-start",
            "padding": {
              "top": "5px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-state-se": {
      "variables": {
        "text": {
          "state": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "right",
            "align_items": "flex-end",
            "padding": {
              "top": "5px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-state-nw": {
      "variables": {
        "text": {
          "state": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "left",
            "align_items": "flex-start",
            "padding": {
              "top": "5px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-state-sw": {
      "variables": {
        "text": {
          "state": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "left",
            "align_items": "flex-end",
            "padding": {
              "padding": {
                "top": "5px",
                "left": "10px",
                "right": "10px",
                "bottom": "5px"
              }
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-state-center": {
      "variables": {
        "text": {
          "state": {
            "font_size": "22px",
            "font_weight": "normal",
            "justify": "center",
            "align_items": "center",
            "padding": {
              "padding": {
                "bottom": "10px"
              }
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-name-east": {
      "variables": {
        "text": {
          "name": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-name-west": {
      "variables": {
        "text": {
          "name": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "justify": "left",
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-name-ne": {
      "variables": {
        "text": {
          "name": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "right",
            "align_items": "flex-start",
            "padding": {
              "top": "5px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-name-se": {
      "variables": {
        "text": {
          "name": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "right",
            "align_items": "flex-end",
            "padding": {
              "top": "5px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-name-nw": {
      "variables": {
        "text": {
          "name": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "left",
            "align_items": "flex-start",
            "padding": {
              "top": "5px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-name-sw": {
      "variables": {
        "text": {
          "name": {
            "font_size": "18px",
            "font_weight": "normal",
            "justify": "left",
            "align_items": "flex-end",
            "padding": {
              "padding": {
                "top": "5px",
                "left": "10px",
                "right": "10px",
                "bottom": "5px"
              }
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-name-center": {
      "variables": {
        "text": {
          "name": {
            "font_size": "22px",
            "font_weight": "normal",
            "justify": "center",
            "align_items": "center",
            "padding": {
              "padding": {
                "bottom": "10px"
              }
            }
          }
        }
      }
    },
    "cb-lcars-button-lozenge": {
      "template": "cb-lcars-button-base",
      "variables": {
        "card": {
          "border": {
            "top": {
              "left_radius": null,
              "right_radius": null
            },
            "bottom": {
              "left_radius": null,
              "right_radius": null
            }
          }
        }
      }
    },
    "cb-lcars-button-lozenge-right": {
      "template": "cb-lcars-button-lozenge",
      "variables": {
        "text": {
          "label": {
            "justify": "left"
          },
          "state": {
            "justify": "left"
          },
          "name": {
            "justify": "left"
          }
        },
        "icon": {
          "justify": "right",
          "border": {
            "left": {
              "size": "6px",
              "color": "black",
              "padding": "1.0%",
              "margin": 0
            },
            "right": {
              "size": "6px",
              "color": "transparent",
              "padding": "1.0%",
              "margin": null
            }
          }
        }
      }
    },
    "cb-lcars-button-square": {
      "template": "cb-lcars-button-base",
      "show_icon": false
    },
    "cb-lcars-button-picard": {
      "template": "cb-lcars-button-base",
      "variables": {
        "text": {
          "label": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "color": {
              "default": "[[[ return variables.lcars_color ]]]",
              "on": "[[[ return variables.card.color.active ]]]",
              "off": "[[[ return variables.card.color.inactive ]]]",
              "zero": "[[[ return variables.card.color.active ]]]",
              "non_zero": "[[[ return variables.card.color.inactive ]]]"
            },
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          },
          "state": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "color": {
              "default": "[[[ return variables.lcars_color ]]]",
              "on": "[[[ return variables.card.color.active ]]]",
              "off": "[[[ return variables.card.color.inactive ]]]",
              "zero": "[[[ return variables.card.color.active ]]]",
              "non_zero": "[[[ return variables.card.color.inactive ]]]"
            },
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          },
          "name": {
            "font_weight": "normal",
            "font_size": "22px",
            "align_items": "center",
            "color": {
              "default": "[[[ return variables.lcars_color ]]]",
              "on": "[[[ return variables.card.color.active ]]]",
              "off": "[[[ return variables.card.color.inactive ]]]",
              "zero": "[[[ return variables.card.color.active ]]]",
              "non_zero": "[[[ return variables.card.color.inactive ]]]"
            },
            "padding": {
              "top": "0px",
              "left": "10px",
              "right": "10px",
              "bottom": "5px"
            }
          }
        },
        "icon": {
          "color": {
            "default": null,
            "active": "[[[ return variables.card.color.active ]]]",
            "inactive": "[[[ return variables.card.color.inactive ]]]"
          }
        },
        "card": {
          "border": {
            "top": {
              "size": "4px"
            },
            "left": {
              "size": "4px"
            },
            "right": {
              "size": "4px"
            },
            "bottom": {
              "size": "4px"
            }
          },
          "color": {
            "background": {
              "default": "transparent",
              "active": "transparent",
              "inactive": "transparent"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-dense": {
      "template": "cb-lcars-button-picard",
      "variables": {
        "card": {
          "height": "50px"
        }
      }
    },
    "cb-lcars-button-picard-right": {
      "template": "cb-lcars-button-picard",
      "variables": {
        "text": {
          "label": {
            "justify": "left"
          },
          "state": {
            "justify": "left"
          },
          "name": {
            "justify": "left"
          }
        },
        "icon": {
          "justify": "right",
          "border": {
            "left": {
              "color": "black"
            },
            "right": {
              "color": "transparent"
            }
          }
        }
      }
    },
    "cb-lcars-button-picard-dense-right": {
      "template": "cb-lcars-button-picard-right",
      "variables": {
        "card": {
          "height": "50px"
        }
      }
    },
    "cb-lcars-button-base": {
      "template": [
        "cb-lcars-base",
        "cb-lcars-actions-toggle"
      ],
      "show_icon": false,
      "show_name": false,
      "show_label": true,
      "variables": {
        "label": " ",
        "card": {
          "height": "60px",
          "min_height": "45px",
          "color": {
            "active": "var(--lcars-ui-secondary)",
            "inactive": "var(--lcars-ui-tertiary)",
            "background": {
              "default": null,
              "active": "var(--lcars-ui-secondary)",
              "inactive": "var(--lcars-ui-tertiary)"
            }
          }
        },
        "text": {
          "label": {
            "padding": {
              "top": "5px",
              "bottom": "5px",
              "right": "24px",
              "left": "24px"
            },
            "transform": "uppercase",
            "font_size": null,
            "justify": "right",
            "align_items": "end",
            "color": {
              "default": "black",
              "on": "black",
              "off": "black",
              "zero": "black",
              "non_zero": "black"
            }
          },
          "state": {
            "padding": {
              "top": "5px",
              "bottom": "5px",
              "right": "24px",
              "left": "24px"
            },
            "transform": "uppercase",
            "font_size": null,
            "justify": "right",
            "align_items": "end",
            "color": {
              "default": "black",
              "on": "black",
              "off": "black",
              "zero": "black",
              "non_zero": "black"
            }
          },
          "name": {
            "padding": {
              "top": "5px",
              "bottom": "5px",
              "right": "24px",
              "left": "24px"
            },
            "transform": "uppercase",
            "font_size": null,
            "justify": "right",
            "align_items": "end",
            "color": {
              "default": "black",
              "on": "black",
              "off": "black",
              "zero": "black",
              "non_zero": "black"
            }
          }
        },
        "icon": {
          "size": "24px",
          "color": {
            "default": "black"
          },
          "justify": "left",
          "border": {
            "top": {
              "size": "0px",
              "color": "transparent"
            },
            "bottom": {
              "size": "0px",
              "color": "transparent"
            },
            "right": {
              "size": "6px",
              "color": "black",
              "padding": "1.0%",
              "margin": 0
            },
            "left": {
              "size": "6px",
              "color": "transparent",
              "padding": "1.0%",
              "margin": null
            }
          }
        }
      },
      "size": "1.75em",
      "styles": {
        "grid": [
          {
            "grid-template-areas": "\"i n\" \"i s\" \"i l\""
          }
        ],
        "icon": [
          {
            "color": "[[[ return variables.icon.color.default ]]]"
          },
          {
            "display": "flex"
          },
          {
            "align-items": "center"
          },
          {
            "justify-content": "left"
          },
          {
            "height": "[[[ return variables.card.height || variables.card.min_height; ]]]"
          },
          {
            "border-left": "[[[ return variables.icon.border.left.color + \" solid \" + variables.icon.border.left.size ]]]"
          },
          {
            "border-right": "[[[ return variables.icon.border.right.color + \" solid \" + variables.icon.border.right.size ]]]"
          },
          {
            "--mdc-icon-size": "[[[ return variables.icon.size; ]]]"
          },
          {
            "margin-left": "[[[ return variables.icon.border.left.margin ]]]"
          },
          {
            "margin-right": "[[[ return variables.icon.border.right.margin ]]]"
          },
          {
            "padding-left": "[[[ return variables.icon.border.left.padding ]]]"
          },
          {
            "padding-right": "[[[ return variables.icon.border.right.padding ]]]"
          }
        ]
      }
    },
    "cb-lcars-functions": {
      "variables": {
        "__calculcate_grid_cell_dimension": "[[[\n  return function calculcate_grid_cell_dimension(cardDimension, gridCells, gridGap, defaultButtonCardDimension) {\n    let card_dimension = cardDimension ? parseInt(cardDimension) : 0;\n    let grid_cells = gridCells ? parseInt(gridCells) : 0;\n    let grid_gap = gridGap ? parseInt(gridGap) : 0;\n    //console.debug(\"... card_dimension: \" + card_dimension);\n    //console.debug(\"... grid_cells: \" + grid_cells);\n    //console.debug(\"... grid_gap: \" + grid_gap);\n    // If card_dimension is not defined or is 0, return defaultButtonCardDimension (default or user overrides this)\n    if (card_dimension === 0) {\n      //console.debug(\"...returning defaultButtonCardDimension: \" + defaultButtonCardDimension);\n      return defaultButtonCardDimension;\n    }\n    // Calculate the button card dimension that would fit the given number of grid cells\n    //let button_card_dimension = Math.floor((card_dimension - grid_gap * (grid_cells - 1)) / grid_cells);\n    let button_card_dimension = ((card_dimension - grid_gap * (grid_cells - 1)) / grid_cells);\n    //console.debug(\"...button_card_dimension calulated: \" + button_card_dimension);\n    return (button_card_dimension +\"px\");\n  } \n]]]\n",
        "__calculate_grid_cells": "[[[\n    return function calculate_grid_cells(cardDimension, buttonCardDimension, gridGap, defaultGridCells) {\n    let card_dimension = cardDimension ? parseInt(cardDimension) : 0;\n    let button_card_dimension = buttonCardDimension ? parseInt(buttonCardDimension) : 0;\n    let grid_gap = gridGap ? parseInt(gridGap) : 0;\n    //console.debug(\"... card_dimension: \" + card_dimension);\n    //console.debug(\"... grid_gap: \" + grid_gap);\n    //console.debug(\"... defaultGridCells: \" + defaultGridCells);\n    // If card_dimension is not defined or is 0, return defaultGridCells (default or user overrides this)\n    if (card_dimension === 0) {\n      //console.debug(\"...returning defaultGridCells!\");\n      return defaultGridCells;\n    }\n    // Calculate the number of grid cells that would fit\n    let grid_dimension = Math.floor((card_dimension + grid_gap) / (button_card_dimension + grid_gap));\n    //console.debug(\"...returing calc. grid_dimension: \" + grid_dimension);\n    return grid_dimension;\n  }\n]]]      \n",
        "__deepMerge": "[[[\n  return function deepMerge(object1, object2) {\n    if (Array.isArray(object1) && Array.isArray(object2)) {\n      return [...object1, ...object2];\n    } else if (typeof object1 === 'object' && typeof object2 === 'object') {\n      return Object.entries(object2).reduce((acc, [key, value]) => {\n        if (Object.keys(acc).includes(key) && typeof value === 'object') {\n          acc = { ...acc, [key]: deepMerge(acc[key], value) };\n        } else {\n          acc = { ...acc, [key]: value };\n        }\n        return acc;\n      }, { ...object1 });\n    } else {\n      return object2;\n    }\n  }\n]]]\n",
        "__get_random_css_color": "[[[\n    return function get_random_css_color() {\n      var letters = '0123456789ABCDEF';\n      var color = '#';\n      for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    }\n]]]\n",
        "__get_light_css_color": "[[[\n  return function get_light_css_color(entity) {\n    let css_color = 'var(--lcars-ui-secondary)';\n    let lightEntity = states[entity];\n    if (lightEntity && lightEntity.attributes.rgb_color) {\n      const light_color = lightEntity.attributes.rgb_color;\n      css_color = `rgb(${light_color.join(', ')})`;\n    }\n    return css_color;\n  }\n]]]\n",
        "__get_light_css_color_string": "[[[\n  return function get_light_css_color_string(entity) {\n    const entityString = `'${entity}'`; // This will give you the entity variable with single quotes around it\n    const lightEntity2 = states[entity];\n    const lightEntity = states[entityString];\n    console.debug(\"entity: \" + entity);\n    console.debug(\"entityString: \" + entityString);\n    console.debug(\"lightEntity: \" + lightEntity);\n    console.debug(\"lightEntity2: \" + lightEntity2);\n    console.debug(\"states: \" + states);\n    console.debug(\"states[living]: \" + states['light.living_room_ambient'].attributes.rgb_color);\n    console.debug(\"lightEntity2.attributes.rgb_color: \" + lightEntity2.attributes.rgb_color);\n    let cssColor = 'var(--lcars-ui-secondary)'; // default color\n    if (lightEntity && lightEntity.attributes.rgb_color) {\n      const lightColor = lightEntity.attributes.rgb_color;\n      cssColor = `rgb(${lightColor.join(', ')})`;\n    }\n    return cssColor;\n  }\n]]]\n",
        "__hex_to_rgba": "[[[\n  return function hex_to_rgba(input, alpha = 1) {\n    if (input.startsWith('rgb')) {\n      // If the input starts with 'rgb', return the input as is\n      return input;\n    }     let hex;\n    if (input.startsWith('var(--')) {\n        // If the input is a CSS variable in the format \"var(--color)\", extract the color variable\n        hex = getComputedStyle(document.documentElement)\n            .getPropertyValue(input.slice(4, -1))\n            .trim();\n    } else if (input.startsWith('--')) {\n        // If the input is a CSS variable, get its value\n        hex = getComputedStyle(document.documentElement)\n            .getPropertyValue(input)\n            .trim();\n    } else {\n        hex = input;\n    }\n    let r, g, b;\n    if (hex.length === 7) {\n        r = parseInt(hex.slice(1, 3), 16);\n        g = parseInt(hex.slice(3, 5), 16);\n        b = parseInt(hex.slice(5, 7), 16);\n    } else if (hex.length === 4) {\n        r = parseInt(hex[1] + hex[1], 16);\n        g = parseInt(hex[2] + hex[2], 16);\n        b = parseInt(hex[3] + hex[3], 16);\n    } else {\n        throw new Error('Invalid HEX color.');\n    }\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  }\n]]]\n",
        "__extract_color_channel": "[[[\n  return function extract_color_channel(color, channel) {\n    // Convert the channel to lowercase\n    channel = channel.toLowerCase();\n    // Determine if the input is rgb or rgba\n    let isRGBA = color.startsWith('rgba');\n    // Split the color string into an array of numbers\n    let numbers = color.slice(isRGBA ? 5 : 4, -1).split(',').map(Number);\n    // Define the color channels\n    let channels = {r: 0, g: 1, b: 2, a: 3};\n    // Check if the specified channel exists\n    if (channel in channels) {\n      // If the input is rgb and the channel is 'a', return undefined\n      if (!isRGBA && channel === 'a') {\n        return undefined;\n      }\n      // Return the decimal value of the specified color channel\n      return numbers[channels[channel]];\n    } else {\n      throw new Error('Invalid color channel. Please specify \"r\", \"g\", \"b\", or \"a\".');\n    }\n  }\n]]]\n",
        "__extract_color_channel2": "[[[\n  return function extract_color_channel2(rgba, channel) {\n    // Convert the channel to lowercase\n    channel = channel.toLowerCase();\n    // Split the rgba string into an array of numbers\n    let numbers = rgba.slice(5, -1).split(',').map(Number);\n    // Define the color channels\n    let channels = {r: 0, g: 1, b: 2, a: 3};\n    // Check if the specified channel exists\n    if (channel in channels) {\n      // Return the decimal value of the specified color channel\n      //console.log(\"....numbers = \" + numbers);\n      //console.log(\"....channels[channel] = \" + numbers[channels[channel]]);\n      return numbers[channels[channel]];\n    } else {\n      throw new Error('Invalid color channel. Please specify \"r\", \"g\", \"b\", or \"a\".');\n    }\n  }\n]]]\n",
        "__interpolated_rgb": "[[[\n  return function interpolated_rgb(start_rgb, end_rgb, step, total_steps) {\n    let start_r = variables.__extract_color_channel(start_rgb, 'r');\n    let start_g = variables.__extract_color_channel(start_rgb, 'g');\n    let start_b = variables.__extract_color_channel(start_rgb, 'b');\n    let end_r = variables.__extract_color_channel(end_rgb, 'r');\n    let end_g = variables.__extract_color_channel(end_rgb, 'g');\n    let end_b = variables.__extract_color_channel(end_rgb, 'b');\n    let interpolated_r = Math.round(start_r + step * (end_r - start_r) / total_steps);\n    let interpolated_g = Math.round(start_g + step * (end_g - start_g) / total_steps);\n    let interpolated_b = Math.round(start_b + step * (end_b - start_b) / total_steps);\n    //console.log(\"in function r=\"+interpolated_r + \",g=\" +interpolated_g+ \",b=\" + interpolated_b);\n    return `rgb(${interpolated_r}, ${interpolated_g}, ${interpolated_b})`;\n  }\n]]]\n"
      }
    },
    "cb-lcars-slider": {
      "template": [
        "cb-lcars-card-base",
        "cb-lcars-functions"
      ],
      "entity": "",
      "triggers_update": "[[[ return variables.entity ]]]",
      "variables": {
        "card": {
          "width": "80px",
          "height": "300px"
        },
        "entity": "[[[ return entity.entity_id ]]]",
        "entity_color": "[[[ return variables.__get_light_css_color(variables.entity) ]]]",
        "entity_match_slider_start": false,
        "entity_match_slider_end": false,
        "meter": {
          "template": [
            "cb-lcars-meter"
          ],
          "variables": {
            "gradient_start_color": "[[[ return  variables.entity_match_slider_start ? variables.entity_color : \"var(--error-color)\" ]]]\n",
            "gradient_end_color": "[[[ return  variables.entity_match_slider_end ? variables.entity_color : \"var(--success-color)\" ]]]\n",
            "card": {
              "height": "[[[ return variables.card.height ]]]",
              "width": "[[[ return variables.card.width ]]]"
            },
            "button": {
              "variables": {
                "card": {
                  "height": "15px",
                  "width": "[[[ return variables.card.width ]]]"
                }
              }
            }
          }
        },
        "slider": {
          "variables": {
            "mask_color": "rgb(0,0,0,0.8)",
            "step": 1
          }
        }
      },
      "styles": {
        "card": [
          {
            "width": "[[[ return variables.card.width ]]]"
          },
          {
            "height": "[[[ return variables.card.height ]]]"
          },
          {
            "border-radius": "0 !important"
          },
          {
            "background": "none"
          }
        ],
        "custom_fields": {
          "meter": [
            {
              "position": "absolute"
            },
            {
              "left": "0px"
            },
            {
              "top": "0px"
            }
          ],
          "slider": [
            {
              "position": "absolute"
            },
            {
              "left": "0px"
            },
            {
              "top": "0px"
            },
            {
              "z-index": 1
            },
            {
              "width": "[[[ return variables.card.width ]]]"
            },
            {
              "height": "[[[ return variables.card.height ]]]"
            }
          ]
        }
      },
      "custom_fields": {
        "meter": {
          "card": {
            "type": "custom:button-card",
            "template": "[[[ return variables.meter.template ]]]",
            "variables": "[[[ return variables.meter.variables ]]]"
          }
        },
        "slider": {
          "card": {
            "type": "custom:my-slider-v2",
            "entity": "[[[ return variables.entity ]]]",
            "mode": "brightness",
            "flipped": true,
            "inverse": true,
            "vertical": true,
            "step": "[[[ return variables.slider.variables.step; ]]]",
            "styles": {
              "card": [
                {
                  "width": "[[[ return variables.card.width ]]]"
                },
                {
                  "height": "[[[ return variables.card.height ]]]"
                },
                {
                  "background": "none"
                },
                {
                  "border-radius": 0
                }
              ],
              "progress": [
                {
                  "background-color": "[[[ return variables.slider.variables.mask_color; ]]]"
                }
              ],
              "container": [
                {
                  "border-radius": 0
                }
              ],
              "track": [
                {
                  "background": "none"
                }
              ],
              "thumb": [
                {
                  "background": "none"
                }
              ]
            }
          }
        }
      }
    },
    "cb-lcars-slider-horizontal": {
      "template": "cb-lcars-slider",
      "entity": "",
      "variables": {
        "meter": {
          "template": "cb-lcars-meter-horizontal",
          "variables": {
            "_gradient": {
              "gap": "5px"
            },
            "button": {
              "template": "cb-lcars-button-picard-filled",
              "variables": {
                "card": {
                  "height": "[[[ return variables.card.height ]]]",
                  "width": "10px"
                }
              }
            }
          }
        },
        "card": {
          "width": "375px",
          "height": "45px"
        }
      },
      "triggers_update": "[[[ return variables.entity  ]]]",
      "custom_fields": {
        "slider": {
          "card": {
            "vertical": false
          }
        }
      }
    }
  }
}
