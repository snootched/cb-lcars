# LCARS MSD Clean‑Slate Schema (v1)
# UPDATED: Includes rules engine (with map_range_cond), value_map, animation_ref system, anchors, view_box:auto.
# This schema is authoritative and supersedes prior iterative drafts.

msd:
  version: 1

  # Optional base SVG (if view_box:auto, this supplies the coordinate system)
  base_svg:
    source: builtin:ncc-1701-a-blue

  # view_box may be explicit numeric array OR 'auto' (derive from base_svg)
  view_box: auto

  # User anchor overrides / additions (numbers or percentages)
  anchors:
    cpu: [120, 80]
    mem: ["60%", "40%"]

  # (Optional) use packs – if omitted, builtin:[core] assumed
  use_packs:
    builtin: [core]
    external: []

  # Remove items by id AFTER merges
  remove:
    animations: []
    rules: []
    overlays: []
    profiles: []

  palettes:
    default:
      accent1: "var(--lcars-orange)"
      accent2: "var(--lcars-yellow)"
      danger:  "var(--lcars-red)"

  data_sources:
    cpu_temp:
      entity: sensor.cpu_temp
      window_seconds: 3600
      minEmitMs: 250
      coalesceMs: 120
      maxDelayMs: 800
      emitOnSameValue: false
      history: { preload: true, hours: 6 }

  profiles:
    - id: normal
      defaults:
        line: { color: var(--lcars-orange), width: 2, corner_style: round, corner_radius: 12 }
        text: { color: var(--lcars-orange), font_size: 14 }
    - id: red_alert
      defaults:
        line: { color: var(--lcars-red), width: 3 }
        text: { color: var(--lcars-red) }

  active_profiles: [normal]

  routing:
    default_mode: manhattan
    clearance: 8
    grid_resolution: 56
    # NEW (M5.4 shaping config – optional):
    channel_target_coverage: 0.6              # coverage goal for prefer
    channel_shaping_max_attempts: 12          # max elbow adjustments
    channel_shaping_span: 32                  # px shift per attempt
    channel_min_coverage_gain: 0.04           # minimum coverage delta to accept an adjustment
    cost_defaults:
      distance: 1
      bend: 12
      proximity: 4
      channel: 0.6
      spacing: 8
    fallback:
      max_cost_multiple: 4.0
      enable_two_elbow: true
    channels:
      - id: main_bus
        rect: [400, 200, 800, 120]
    smoothing_mode: none          # none|chaikin (invalid → none + warning counter)
    smoothing_iterations: 0       # iterations (0 disables)
    smoothing_max_points: 160     # safety cap

  animations:
    - id: pulse_fast
      preset: pulse
      params:
        duration: 1200
        loop: true
        alternate: true
        max_scale: 1.15
    - id: trace_cpu_route
      preset: motionpath
      params:
        path_selector: "#line_cpu"
        tracer: { r: 4, fill: var(--lcars-orange) }
        duration: 4000
        loop: true

  timelines:
    - id: intro_sequence
      globals: { autoplay: true, easing: easeInOutSine }
      steps:
        - targets: "#panel_title"
          preset: fade
          params: { duration: 500 }
        - targets: "#line_cpu"
          offset: "+=120"
          preset: draw
          params: { duration: 1000 }

  overlays:
    - id: panel_title
      type: text
      position: [40, 40]
      style:
        value: "CPU"
        color: var(--lcars-orange)
        font_size: 24
        align: start
      animation_ref: pulse_fast

    - id: spark_temp
      type: sparkline
      position: [40, 80]
      size: [220, 60]
      style:
        source: cpu_temp
        color: var(--lcars-yellow)
        width: 2
        markers: { r: 2, fill: var(--lcars-yellow) }
        label_last:
          decimals: 1
          format: "{v}°C"
          offset: [8, -10]
          fill: var(--lcars-orange)
        grid: { x: 6, y: 4, color: "rgba(255,255,255,0.12)", opacity: 0.5 }
        # Dynamic stroke width example:
        width_dynamic:
          value_map:
            entity: sensor.cpu_temp
            input: [20, 90]
            output: [1, 6]
            clamp: true
            round: 0

    - id: line_cpu
      type: line
      anchor: cpu
      attach_to: spark_temp
      route: auto
      route_mode: auto
      style:
        color: var(--lcars-orange)
        width: 2
        corner_style: round   # corner_style: round | bevel | miter (default miter); round uses corner_radius; others ignore radius for Wave 5
        corner_radius: 12
      animation_ref: trace_cpu_route

  rules:
    - id: cpu_hot
      priority: 20
      when:
        all:
          - entity: sensor.cpu_temp
            above: 75
      apply:
        overlays:
          - id: line_cpu
            style: { color: var(--lcars-red), width: 4 }
        profiles_add: [red_alert]
        animations:
          - ref: pulse_fast
            override:
              params:
                duration: 900

    - id: cpu_cool_hours
      priority: 5
      when:
        all:
          - time_between: "00:00-06:00"
          - entity: sensor.cpu_temp
            below: 40
      apply:
        overlays:
          - id: panel_title
            style: { color: var(--lcars-cyan) }

    - id: cpu_temp_mapped
      when:
        all:
          - map_range_cond:
              entity: sensor.cpu_temp
              input: [20, 90]
              output: [0, 1]
              above: 0.6   # threshold on mapped value
      apply:
        overlays:
          - id: spark_temp
            style:
              color: var(--lcars-red)

  hud:
    workbench:
      snap_grid: 4
      show_rule_badges: true

# ------------------------------
# SCHEMA NOTES / VALIDATION RULES
# ------------------------------
# 1. Overlays require id + type; coordinate fields (anchor, attach_to, position) accept anchor id or [x,y] (numbers or percentages).
# 2. value_map structure valid anywhere a numeric style param expected (not inside rules conditions).
# 3. map_range_cond is optional rule condition enabling direct threshold tests on a mapped numeric domain.
# 4. Removal lists execute after all merges (packs).
# 5. Animations: 'preset' must exist in runtime preset registry; override.params deep merges.
# 6. Rules: 'apply.overlays[].style' shallow merges into final overlay style after profile merges.
# 7. Time format: "HH:MM-HH:MM" 24h; validation enforces start != end and correct range.
# 8. Regex operator: pattern validated (invalid => rule ignored with warning).
# 9. priority: integer; higher executes earlier. Ties break by declaration order.
# 10. stop (optional): if true stops further rule effects on overlays modified *in that rule* (overlay-scoped).
# 11. corner_style accepted: round | bevel | miter. round uses corner_radius (Wave 5.5 adds arc path substitution). bevel = straight cut; miter = sharp vertex.
# Corner Arc Notes (M5.5):
# - corner_style: round enables arc substitution (90° A commands) per interior elbow.
# - corner_radius capped to half of each adjacent segment length.
# - Future (Wave 11): corner_arc_subdiv / smoothing quality levels.
# - meta.arc emitted for debug (count, trimPx).