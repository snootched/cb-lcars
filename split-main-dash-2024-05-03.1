animated_background:
  default_url: /local/space_03.mp4
  included_users:
    - taba9
    - taba7
wallpanel:
  enabled: false
  hide_toolbar: true
  hide_sidebar: true
  fullscreen: true
  idle_time: ${entity:input_number.lcars_ui_screen_timeout}
  profiles:
    user.taba7:
      idle_time: 120
      enabled: true
      enabled_on_tabs:
        - home
        - home2
    user.taba9:
      enabled: true
      idle_time: 300
      enabled_on_tabs:
        - home
        - home2
  image_animation_ken_burns: true
  image_animation_ken_burns_zoom: 1.3
  image_animation_ken_burns_delay: 0
  show_progress_bar: false
  image_order: random
  image_list_update_interval: 3600
  image_url: >-
    https://api.unsplash.com/photos/random?client_id=IPlSVC0kvr1xJj4-pKYPMG9UiwL9TEHXmHsBXbMVpB0&query=outer%20space
  show_image_info: true
  image_info_template: <span style="color:#990000">//</span> ${description|alt_description}
  card_interaction: true
  style:
    wallpanel-screensaver-info-box:
      background: none
      '--wp-card-width': 600px
      position: absolute
      top: 10px
      right: 80px
  cards:
    - type: custom:button-card
      styles:
        card:
          - background-color: transparent !important
          - width: 600px
          - height: 430px
          - border-top-left-radius: 0 !important
        custom_fields:
          lcars_header:
            - position: absolute
            - top: 0px
            - right: 0px
          clock:
            - position: absolute
            - width: 300px
            - height: 120px
            - top: 25px
            - left: 25px
          button_panel:
            - position: absolute
            - right: 0px
            - bottom: 5px
            - width: 210px
      custom_fields:
        lcars_header:
          card:
            type: custom:button-card
            template:
              - custom-button-lcars-header-picard-right
            variables:
              card_width: 600px
              card_height: 170px
              picard_lcars_outer_color: var(--picard-blue)
              picard_lcars_inner_color: var(--picard-dark-blue)
              card_border_top_right_radius: 120px
              card_inner_border_width: 50px
              picard_border_gap: 5px
              picard_lcars_outer_border_top: 10px
              picard_lcars_inner_border_top: 10px
              picard_lcars_outer_border_right: 155px
              picard_lcars_inner_border_right: 50px
        clock:
          card:
            type: custom:simple-clock-card
            use_military: true
            hide_seconds: false
            bold_clock: false
            lead_zero: true
            font_size: 7rem
            card_mod:
              style: |
                ha-card {
                  height: 110px;
                  background: transparent !important;
                  color: var(--picard-starlight)
                } 
        button_panel:
          card:
            type: custom:layout-card
            layout_type: custom:grid-layout
            cards:
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled-dense
                variables:
                  text_justify: center
                  font_size: 26px
                  font_weight: bold
                  text_padding_bottom: 5px
                  text_color_zero: var(--error-color)
                  text_color_non_zero: var(--picard-starlight)
                entity: sensor.cats_home
                show_state: false
                show_name: false
                show_label: true
                label: |
                  [[[
                      const state = states['sensor.cats_home'].state;
                      const roundedValue = Math.round(parseFloat(state));
                      const formattedValue = roundedValue.toString().padStart(2, '0');
                      return formattedValue;
                  ]]]
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled-dense
                  - custom-button-animate-press
                variables:
                  card_inactive_background_color: var(--error-color)
                  card_inactive_color: var(--error-color)
                  card_active_background_color: var(--picard-blue)
                  card_active_color: var(--picard-blue)
                  border_top: 3px
                  border_left: 3px
                  border_right: 3px
                  border_bottom: 3px
                  font_weight: normal
                state:
                  - id: state_on
                    value: home
                  - id: state_off
                    value: not_home
                entity: person.dexter
                label: the dex
                tap_action:
                  action: more-info
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled-dense
                variables:
                  text_justify: center
                  font_size: 26px
                  font_weight: bold
                  text_padding_bottom: 5px
                  text_color_zero: var(--picard-blue)
                  text_color_non_zero: var(--error-color)
                entity: sensor.contact_sensors_open
                show_state: false
                show_name: false
                show_label: true
                label: |
                  [[[
                      const state = states['sensor.contact_sensors_open'].state;
                      const roundedValue = Math.round(parseFloat(state));
                      const formattedValue = roundedValue.toString().padStart(2, '0');
                      return formattedValue;
                  ]]]
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled-dense
                  - custom-button-animate-press
                icon: none
                size: 24px
                variables:
                  card_inactive_color: var(--picard-blue)
                  card_inactive_background_color: var(--picard-blue)
                  card_active_color: var(--error-color)
                  card_active_background_color: var(--error-color)
                  border_top: 3px
                  border_left: 3px
                  border_right: 3px
                  border_bottom: 3px
                  font_weight: normal
                entity: binary_sensor.patio_gate_home_security_intrusion
                label: patio gate
                tap_action: more-info
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled-dense
                variables:
                  text_justify: center
                  font_size: 26px
                  font_weight: bold
                  text_padding_bottom: 5px
                entity: climate.living_room
                show_state: false
                show_name: false
                show_label: true
                label: |
                  [[[
                      const state = states['sensor.home_average_temperature_template'].state;
                      const roundedValue = Math.round(parseFloat(state));
                      const formattedValue = roundedValue.toString().padStart(2, '0');
                      return formattedValue;
                  ]]]
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-dense
                  - custom-button-animate-press
                icon: none
                size: 24px
                variables:
                  card_active_color: var(--picard-cyan)
                  icon_active_color: transparent
                  icon_inactive_color: transparent
                  icon_active_background_color: var(--picard-blue)
                  icon_inactive_background_color: transparent
                entity: climate.living_room
                show_state: true
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  data:
                    entity_id: input_select.lcars_ui_page_selector
                    option: LIGHTS II
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled-dense
                variables:
                  text_justify: center
                  font_size: 26px
                  font_weight: bold
                  text_padding_bottom: 5px
                  text_color_zero: var(--picard-dark-blue)
                  text_color_non_zero: var(--picard-blue)
                  card_inactive_background_color: var(--lcars-ui-secondary)
                  card_active_background_color: var(--picard-blue)
                entity: input_boolean.enable_verbal_notifications
                show_state: true
                show_label: false
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                  - custom-button-animate-press
                show_icon: false
                icon: none
                size: 24px
                variables:
                  icon_active_color: transparent
                  icon_inactive_color: transparent
                  icon_active_background_color: var(--picard-blue)
                  icon_inactive_background_color: transparent
                  card_active_color: var(--picard-green)
                  card_inactive_color: var(--error-color)
                  card_inactive_background_color: var(--lcars-ui-secondary)
                  card_active_background_color: var(--picard-starlight)
                  lcars_color: var(--error-color)
                  card_min_height: 50px
                entity: input_boolean.enable_verbal_notifications
                label: tts alerts
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
                double_tap_action:
                  action: none
            layout:
              grid-template-columns: 55px 160px
              grid-template-rows: auto
              grid-auto-rows: auto
              card_margin: 0
              padding: 0
              margin: '-4px -4px 0px -4px'
              grid-column-gap: 0px
button_card_templates:
  custom-button-lcars-debug:
    variables:
      debug: true
      debug_hass: false
      debug_extras: null
      __title: '::LCARS-cbc::DEBUG::>'
    custom_fields:
      debugger: |
        [[[
          if (!variables.debug) return

          const o = {
            variables: variables, 
            entity: entity ? entity : {},
            bc: this
          }

          if (variables.debug_hass) {
            o.hass = hass
          }

          if (variables.debug_extras) {
            o.extras = variables.debug_extras
          }

          console.debug(variables.__title, o)
        ]]]
    styles:
      custom_fields:
        debugger:
          - height: 0
          - width: 0
          - visibility: hidden
  custom-button-lcars-functions:
    variables:
      __get_light_css_color: |
        [[[
          return function(entity) {
            let css_color = 'var(--lcars-ui-secondary)';
            let lightEntity = states[entity];
            if (lightEntity && lightEntity.attributes.rgb_color) {
              const light_color = lightEntity.attributes.rgb_color;
              css_color = `rgb(${light_color.join(', ')})`;
            }
            return css_color;
          }
        ]]]
      __get_light_css_color_string: |
        [[[
          return function(entity) {
            const entityString = `'${entity}'`; // This will give you the entity variable with single quotes around it
            const lightEntity2 = states[entity];
            const lightEntity = states[entityString];
            console.debug("entity: " + entity);
            console.debug("entityString: " + entityString);
            console.debug("lightEntity: " + lightEntity);
            console.debug("lightEntity2: " + lightEntity2);
            console.debug("states: " + states);
            console.debug("states[living]: " + states['light.living_room_ambient'].attributes.rgb_color);
            console.debug("lightEntity2.attributes.rgb_color: " + lightEntity2.attributes.rgb_color);
            let cssColor = 'var(--lcars-ui-secondary)'; // default color
            if (lightEntity && lightEntity.attributes.rgb_color) {
              const lightColor = lightEntity.attributes.rgb_color;
              cssColor = `rgb(${lightColor.join(', ')})`;
            }
            return cssColor;
          }
        ]]]
      __hex_to_rgba: |
        [[[
          return function(input, alpha = 1) {
            if (input.startsWith('rgb')) {
              // If the input starts with 'rgb', return the input as is
              return input;
            }     let hex;
            if (input.startsWith('var(--')) {
                // If the input is a CSS variable in the format "var(--color)", extract the color variable
                hex = getComputedStyle(document.documentElement)
                    .getPropertyValue(input.slice(4, -1))
                    .trim();
            } else if (input.startsWith('--')) {
                // If the input is a CSS variable, get its value
                hex = getComputedStyle(document.documentElement)
                    .getPropertyValue(input)
                    .trim();
            } else {
                hex = input;
            }
            
            let r, g, b;
            if (hex.length === 7) {
                r = parseInt(hex.slice(1, 3), 16);
                g = parseInt(hex.slice(3, 5), 16);
                b = parseInt(hex.slice(5, 7), 16);
            } else if (hex.length === 4) {
                r = parseInt(hex[1] + hex[1], 16);
                g = parseInt(hex[2] + hex[2], 16);
                b = parseInt(hex[3] + hex[3], 16);
            } else {
                throw new Error('Invalid HEX color.');
            }
            return `rgba(${r}, ${g}, ${b}, ${alpha})`;
          }
        ]]]
      __extract_color_channel: |
        [[[
          return function(color, channel) {
            // Convert the channel to lowercase
            channel = channel.toLowerCase();
            // Determine if the input is rgb or rgba
            let isRGBA = color.startsWith('rgba');
            // Split the color string into an array of numbers
            let numbers = color.slice(isRGBA ? 5 : 4, -1).split(',').map(Number);
            // Define the color channels
            let channels = {r: 0, g: 1, b: 2, a: 3};
            // Check if the specified channel exists
            if (channel in channels) {
              // If the input is rgb and the channel is 'a', return undefined
              if (!isRGBA && channel === 'a') {
                return undefined;
              }
              // Return the decimal value of the specified color channel
              return numbers[channels[channel]];
            } else {
              throw new Error('Invalid color channel. Please specify "r", "g", "b", or "a".');
            }
          }
        ]]]
      __extract_color_channel2: |
        [[[
          return function(rgba, channel) {
            // Convert the channel to lowercase
            channel = channel.toLowerCase();
            // Split the rgba string into an array of numbers
            let numbers = rgba.slice(5, -1).split(',').map(Number);
            // Define the color channels
            let channels = {r: 0, g: 1, b: 2, a: 3};
            // Check if the specified channel exists
            if (channel in channels) {
              // Return the decimal value of the specified color channel
              //console.log("....numbers = " + numbers);
              //console.log("....channels[channel] = " + numbers[channels[channel]]);
              return numbers[channels[channel]];
            } else {
              throw new Error('Invalid color channel. Please specify "r", "g", "b", or "a".');
            }
          }
        ]]]
      __interpolated_rgb: |
        [[[
          return function(start_rgb, end_rgb, step, total_steps) {

            let start_r = variables.__extract_color_channel(start_rgb, 'r');
            let start_g = variables.__extract_color_channel(start_rgb, 'g');
            let start_b = variables.__extract_color_channel(start_rgb, 'b');
          
            let end_r = variables.__extract_color_channel(end_rgb, 'r');
            let end_g = variables.__extract_color_channel(end_rgb, 'g');
            let end_b = variables.__extract_color_channel(end_rgb, 'b');
          
            let interpolated_r = Math.round(start_r + step * (end_r - start_r) / total_steps);
            let interpolated_g = Math.round(start_g + step * (end_g - start_g) / total_steps);
            let interpolated_b = Math.round(start_b + step * (end_b - start_b) / total_steps);
            //console.log("in function r="+interpolated_r + ",g=" +interpolated_g+ ",b=" + interpolated_b);
          
            return `rgb(${interpolated_r}, ${interpolated_g}, ${interpolated_b})`;

          }
        ]]]
  custom-button-lcars-actions-toggle:
    tap_action:
      action: toggle
      haptic: success
    double_tap_action:
      action: more-info
      haptic: success
    hold_action:
      action: more-info
      haptic: success
  custom-button-lcars-actions-more-info:
    tap_action:
      action: more-info
      haptic: success
    double_tap_action:
      action: more-info
      haptic: success
    hold_action:
      action: more-info
      haptic: success
  custom-button-lcars-actions-disable:
    tap_action:
      action: none
      haptic: failure
    double_tap_action:
      action: none
      haptic: failure
    hold_action:
      action: none
      haptic: failure
  custom-button-lcars-base:
    label: ' '
    variables:
      align_items: center
      font_size: 20px
      font_weight: normal
      text_color: var(--primary-text-color)
      lcars_color: var(--lcars-card-top-color)
      card_active_color: var(--lcars-ui-secondary)
      card_inactive_color: var(--lcars-ui-tertiary)
      card_background: none
      card_inactive_background_color: transparent
      card_active_background_color: transparent
      card_height: null
      card_min_height: 60px
      card_width: null
      card_border_top_left_radius: 0px
      card_border_top_right_radius: 0px
      card_border_bottom_left_radius: 0px
      card_border_bottom_right_radius: 0px
      card_inner_border_factor: 2
      card_inner_border_width: 35px
      border_top: 0px
      border_left: 0px
      border_right: 0px
      border_bottom: 0px
      text_padding_top: 10px
      text_padding_left: 0px
      text_padding_right: 0px
      text_padding_bottom: 10px
      text_align: left
      text_justify: center
      text_transform: none
      text_color_on: var(--primary-text-color)
      text_color_off: var(--primary-text-color)
      text_color_zero: var(--lcars-green)
      text_color_non_zero: var(--lcars-blue)
      text_color_hvac_heat: var(--lcars-orange)
      text_color_hvac_cool: var(--lcars-blue)
      text_color_hvac_other: var(--lcars-purple)
      icon_box_size: 35px
      icon_size: 24px
      icon_color: black
      icon_active_color: null
      icon_inactive_color: null
      icon_active_background_color: null
      icon_inactive_background_color: null
    show_label: true
    show_state: false
    show_icon: false
    show_name: false
    styles:
      card:
        - height: '[[[ return variables.card_height; ]]]'
        - min-height: '[[[ return variables.card_min_height; ]]]'
        - width: '[[[ return variables.card_width; ]]]'
        - border-top: >-
            [[[ return variables.border_top + " solid " + variables.lcars_color;
            ]]]
        - border-left: >-
            [[[ return variables.border_left + " solid " +
            variables.lcars_color; ]]]
        - border-right: >-
            [[[ return variables.border_right + " solid " +
            variables.lcars_color; ]]]
        - border-bottom: >-
            [[[ return variables.border_bottom + " solid " +
            variables.lcars_color; ]]]
        - background: '[[[ return variables.card_background; ]]]'
        - border-top-left-radius: >-
            [[[ return variables.card_border_top_left_radius + " !important";
            ]]]
        - border-top-right-radius: >-
            [[[ return variables.card_border_top_right_radius + " !important";
            ]]]
        - border-bottom-left-radius: >-
            [[[ return variables.card_border_bottom_left_radius + " !important";
            ]]]
        - border-bottom-right-radius: >-
            [[[ return variables.card_border_bottom_right_radius + "
            !important"; ]]]
        - position: relative
      label:
        - display: flex
        - justify-content: '[[[ return variables.text_justify; ]]]'
        - align-items: '[[[ return variables.align_items; ]]]'
        - text-transform: '[[[ return variables.text_transform; ]]]'
        - border-left: 0
        - border-top: 0
        - border-top-left-radius: 0px
        - border-top-right-radius: 0px
        - background: none !important
        - position: absolute
        - top: 0px
        - left: 0px
        - width: >-
            [[[ return "calc(100% - " + variables.text_padding_left + " - " +
            variables.text_padding_right + ")";]]]
        - height: >-
            [[[ return "calc(100% - " + variables.text_padding_top + " - " +
            variables.text_padding_bottom + ")";]]]
        - color: '[[[ return variables.text_color; ]]]'
        - font-size: '[[[ return variables.font_size; ]]]'
        - font-weight: '[[[ return variables.font_weight; ]]]'
        - justify-self: start
        - text-align: '[[[ return variables.text_align; ]]]'
        - padding-top: '[[[ return variables.text_padding_top; ]]]'
        - padding-left: '[[[ return variables.text_padding_left; ]]]'
        - padding-right: '[[[ return variables.text_padding_right; ]]]'
        - padding-bottom: '[[[ return variables.text_padding_bottom; ]]]'
        - outline: >-
            [[[ return variables.card_inner_border_width + " solid " +
            variables.lcars_color; ]]]
      state:
        - display: flex
        - justify-content: '[[[ return variables.text_justify; ]]]'
        - align-items: '[[[ return variables.align_items; ]]]'
        - text-transform: '[[[ return variables.text_transform; ]]]'
        - border-left: 0
        - border-top: 0
        - border-top-left-radius: 0px
        - border-top-right-radius: 0px
        - background: none !important
        - position: absolute
        - top: 0px
        - left: 0px
        - width: >-
            [[[ return "calc(100% - " + variables.text_padding_left + " - " +
            variables.text_padding_right + ")";]]]
        - height: >-
            [[[ return "calc(100% - " + variables.text_padding_top + " - " +
            variables.text_padding_bottom + ")";]]]
        - color: '[[[ return variables.text_color; ]]]'
        - font-size: '[[[ return variables.font_size; ]]]'
        - font-weight: '[[[ return variables.font_weight; ]]]'
        - justify-self: start
        - text-align: '[[[ return variables.text_align; ]]]'
        - padding-top: '[[[ return variables.text_padding_top; ]]]'
        - padding-left: '[[[ return variables.text_padding_left; ]]]'
        - padding-right: '[[[ return variables.text_padding_right; ]]]'
        - padding-bottom: '[[[ return variables.text_padding_bottom; ]]]'
        - outline: >-
            [[[ return variables.card_inner_border_width + " solid " +
            variables.lcars_color; ]]]
      name:
        - display: flex
        - justify-content: '[[[ return variables.text_justify; ]]]'
        - align-items: '[[[ return variables.align_items; ]]]'
        - text-transform: '[[[ return variables.text_transform; ]]]'
        - border-left: 0
        - border-top: 0
        - border-top-left-radius: 0px
        - border-top-right-radius: 0px
        - background: none !important
        - position: absolute
        - top: 0px
        - left: 0px
        - width: >-
            [[[ return "calc(100% - " + variables.text_padding_left + " - " +
            variables.text_padding_right + ")";]]]
        - height: >-
            [[[ return "calc(100% - " + variables.text_padding_top + " - " +
            variables.text_padding_bottom + ")";]]]
        - color: '[[[ return variables.text_color; ]]]'
        - font-size: '[[[ return variables.font_size; ]]]'
        - font-weight: '[[[ return variables.font_weight; ]]]'
        - justify-self: start
        - text-align: '[[[ return variables.text_align; ]]]'
        - padding-top: '[[[ return variables.text_padding_top; ]]]'
        - padding-left: '[[[ return variables.text_padding_left; ]]]'
        - padding-right: '[[[ return variables.text_padding_right; ]]]'
        - padding-bottom: '[[[ return variables.text_padding_bottom; ]]]'
        - outline: '[[[ return "20px solid " + variables.lcars_color; ]]]'
    state:
      - value: 'on'
        id: state_on
        styles:
          card:
            - background-color: '[[[ return variables.card_active_background_color; ]]]'
            - border-top: >-
                [[[ return variables.border_top + " solid " +
                variables.card_active_color; ]]]
            - border-left: >-
                [[[ return variables.border_left + " solid " +
                variables.card_active_color; ]]]
            - border-right: >-
                [[[ return variables.border_right + " solid " +
                variables.card_active_color; ]]]
            - border-bottom: >-
                [[[ return variables.border_bottom + " solid " +
                variables.card_active_color; ]]]
          state:
            - color: '[[[ return variables.text_color_on; ]]]'
          label:
            - color: '[[[ return variables.text_color_on; ]]]'
          icon:
            - color: >-
                [[[ return variables.icon_active_color || variables.icon_color;
                ]]]
            - background: >-
                [[[ return variables.icon_active_background_color ||
                variables.card_inactive_background_color; ]]]
      - value: 'off'
        id: state_off
        styles:
          card:
            - background-color: '[[[ return variables.card_inactive_background_color; ]]]'
            - border-top: >-
                [[[ return variables.border_top + " solid " +
                variables.card_inactive_color; ]]]
            - border-left: >-
                [[[ return variables.border_left + " solid " +
                variables.card_inactive_color; ]]]
            - border-right: >-
                [[[ return variables.border_right + " solid " +
                variables.card_inactive_color; ]]]
            - border-bottom: >-
                [[[ return variables.border_bottom + " solid " +
                variables.card_inactive_color; ]]]          
          state:
            - color: '[[[ return variables.text_color_off; ]]]'
          label:
            - color: '[[[ return variables.text_color_off; ]]]'
          icon:
            - color: >-
                [[[ return variables.icon_inactive_color ||
                variables.icon_color; ]]]
            - background: >-
                [[[ return variables.icon_inactive_background_color ||
                variables.card_active_background_color; ]]]
      - value: open
        id: state_open
        styles:
          card:
            - background-color: '[[[ return variables.card_active_background_color; ]]]'
            - color: '[[[ return variables.card_active_color; ]]]'
          state:
            - color: '[[[ return variables.text_color_on; ]]]'
          label:
            - color: '[[[ return variables.text_color_on; ]]]'
      - value: closed
        id: state_closed
        styles:
          card:
            - background-color: '[[[ return variables.card_inactive_background_color; ]]]'
            - color: '[[[ return variables.card_inactive_color; ]]]'
          state:
            - color: '[[[ return variables.text_color_off; ]]]'
          label:
            - color: '[[[ return variables.text_color_off; ]]]'
      - value: heat
        id: state_heat
        styles:
          card:
            - background-color: '[[[ return variables.card_inactive_background_color; ]]]'
          state:
            - color: '[[[ return variables.text_color_hvac_heat; ]]]'
          label:
            - color: '[[[ return variables.text_color_hvac_heat; ]]]'
      - value: cool
        id: state_cool
        styles:
          card:
            - background-color: '[[[ return variables.card_inactive_background_color; ]]]'
          state:
            - color: '[[[ return variables.text_color_hvac_cool; ]]]'
          label:
            - color: '[[[ return variables.text_color_hvac_cool; ]]]'
      - operator: template
        value: |
          [[[
            return entity !== undefined && ['00', '0'].includes(states[entity.entity_id].state);
          ]]]
        id: state_zero
        styles:
          card:
            - background-color: '[[[ return variables.card_inactive_background_color; ]]]'
          state:
            - color: '[[[ return variables.text_color_zero; ]]]'
          label:
            - color: '[[[ return variables.text_color_zero; ]]]'
      - operator: template
        value: |
          [[[
            return entity !== undefined && states[entity.entity_id].state !== '0';
          ]]]
        id: state_nonzero
        styles:
          card:
            - background-color: '[[[ return variables.card_inactive_background_color; ]]]'
          state:
            - color: '[[[ return variables.text_color_non_zero; ]]]'
          label:
            - color: '[[[ return variables.text_color_non_zero; ]]]'
      - operator: default
        id: state_default
        styles:
          card:
            - background-color: '[[[ return variables.card_inactive_background_color; ]]]'
          state:
            - color: '[[[ return variables.text_color_off; ]]]'
          label:
            - color: '[[[ return variables.text_color_off; ]]]'
          icon:
            - color: >-
                [[[ return variables.icon_inactive_color ||
                variables.icon_color; ]]]
            - background: >-
                [[[ return variables.icon_inactive_background_color ||
                variables.card_active_background_color; ]]]
  custom-button-lcars-button-base:
    template:
      - custom-button-lcars-base
      - custom-button-lcars-actions-toggle
    variables:
      label: ' '
      card_background: null
      card_active_color: var(--lcars-ui-secondary)
      card_inactive_color: var(--lcars-ui-tertiary)
      card_active_background_color: var(--lcars-ui-secondary)
      card_inactive_background_color: var(--lcars-ui-tertiary)
      text_padding_top: 5px
      text_padding_bottom: 5px
      text_padding_right: 24px
      text_padding_left: 24px
      text_transform: uppercase
      font_size: null
      text_justify: right
      align_items: end
      text_color: black
      text_color_on: black
      text_color_off: black
      text_color_zero: black
      text_color_non_zero: black
      icon_box_size: 35px
      icon_size: 24px
      icon_color: black
      icon_border_size: 6px
      icon_border_color: black
    size: 35px
    styles:
      grid:
        - grid-template-areas: '"l" "n" "s" "i"'
      icon:
        - color: '[[[ return variables.icon_color; ]]]'
        - display: flex
        - align-items: center
        - justify-content: center
        - height: '[[[ return variables.card_height || variables.card_min_height; ]]]'
        - border-right: >-
            [[[ return variables.icon_border_color + " solid " +
            variables.icon_border_size; ]]]
        - background: var(--lcars-card-top-color)
        - '--mdc-icon-size': '[[[ return variables.icon_size; ]]]'
        - margin-left: 0
      entity_picture:
        - display: flex
        - align-items: center
        - justify-content: null
        - height: '[[[ return variables.card_height || variables.card_min_height; ]]]'
        - border-right: >-
            [[[ return variables.icon_border_color + " solid " +
            variables.icon_border_size; ]]]
        - margin-left: 0
    show_icon: false
  custom-button-lcars-header-open:
    template: custom-button-lcars-base
    variables:
      border_top: 20px
  custom-button-lcars-header:
    template: custom-button-lcars-base
    variables:
      border_top: 20px
      border_left: 90px
      card_border_top_left_radius: var(--ha-card-border-radius)
      text_padding_top: 10px
      text_padding_left: 20px
      text_padding_right: 0px
      text_padding_bottom: 10px
      text_align: left
      text_justify: left
      card_border_inner_min_radius: 30px
    styles:
      label:
        - border-top-right-radius: 0px
        - border-top-left-radius: >-
            [[[ return "calc(" + variables.card_border_top_left_radius + " / " +
            variables.card_inner_border_factor +" )";]]]
  custom-button-lcars-header-contained:
    template: custom-button-lcars-header-open
    variables:
      border_left: 50px
      border_right: 50px
      border_top: 10px
      card_border_top_left_radius: var(--ha-card-border-radius)
      card_border_top_right_radius: var(--ha-card-border-radius)
      card_border_bottom_left_radius: 0px
      card_border_bottom_right_radius: 0px
    styles:
      label:
        - border-top-left-radius: >-
            [[[ return "calc(" + variables.card_border_top_left_radius + " / " +
            variables.card_inner_border_factor +" )";]]]
        - border-top-right-radius: >-
            [[[ return "calc(" + variables.card_border_top_right_radius + " / "
            + variables.card_inner_border_factor +" )";]]]
  custom-button-lcars-header-right:
    template: custom-button-lcars-base
    variables:
      border_top: 20px
      border_right: 90px
      card_border_top_left_radius: 0px
      card_border_top_right_radius: var(--ha-card-border-radius)
      card_border_bottom_right_radius: 0px
      text_padding_top: 10px
      text_padding_left: 0px
      text_padding_right: 20px
      text_padding_bottom: 10px
      text_align: left
      text_justify: right
    styles:
      label:
        - border-top-left-radius: 0px
        - border-top-right-radius: >-
            [[[ return "calc(" + variables.card_border_top_right_radius + " / "
            + variables.card_inner_border_factor +" )";]]]
  custom-button-lcars-footer-base:
    template: custom-button-lcars-base
    variables:
      lcars_color: var(--lcars-card-bottom-color)
  custom-button-lcars-footer-open:
    template: custom-button-lcars-footer-base
    variables:
      border_bottom: 20px
  custom-button-lcars-footer:
    template: custom-button-lcars-footer-base
    variables:
      border_left: 90px
      border_bottom: 20px
      card_border_bottom_left_radius: var(--ha-card-border-radius)
      text_padding_top: 10px
      text_padding_left: 20px
      text_padding_right: 0px
      text_padding_bottom: 10px
      text_align: left
      text_justify: left
    styles:
      label:
        - border-bottom-left-radius: >-
            [[[ return "calc(" + variables.card_border_bottom_left_radius + " /
            " + variables.card_inner_border_factor +" )";]]]
        - border-bottom-right-radius: 0px
  custom-button-lcars-footer-contained:
    template: custom-button-lcars-footer-open
    variables:
      border_left: 50px
      border_right: 50px
      border_bottom: 10px
      card_border_bottom_left_radius: var(--ha-card-border-radius)
      card_border_bottom_right_radius: var(--ha-card-border-radius)
      card_border_top_left_radius: 0px
      card_border_top_right_radius: 0px
    styles:
      label:
        - border-bottom-left-radius: >-
            [[[ return "calc(" + variables.card_border_bottom_left_radius + " /
            " + variables.card_inner_border_factor +" )";]]]
        - border-bottom-right-radius: >-
            [[[ return "calc(" + variables.card_border_bottom_right_radius + " /
            " + variables.card_inner_border_factor +" )";]]]
  custom-button-lcars-footer-right:
    template: custom-button-lcars-footer-base
    variables:
      border_right: 90px
      border_bottom: 20px
      card_border_bottom_right_radius: var(--ha-card-border-radius)
      text_padding_top: 10px
      text_padding_left: 0px
      text_padding_right: 20px
      text_padding_bottom: 10px
      text_align: left
      text_justify: right
    styles:
      label:
        - border-bottom-left-radius: 0px
        - border-bottom-right-radius: >-
            [[[ return "calc(" + variables.card_border_bottom_right_radius + " /
            " + variables.card_inner_border_factor +" )";]]]
  custom-button-lcars-label:
    template: custom-button-lcars-base
    variables:
      label: ' '
      lcars_color: transparent
      font_size: 40px
      font_weight: bold
      text_padding_top: 0px
      text_padding_bottom: 5px
      text_transform: uppercase
      text_align: center
      text_justify: center
      text_color_on: var(--lcars-green)
      text_color_off: var(--lcars-blue)
      text_color_zero: var(--lcars-green)
      text_color_non_zero: var(--lcars-blue)
      text_color_hvac_heat: var(--lcars-orange)
      text_color_hvac_cool: var(--lcars-blue)
      text_color_hvac_other: var(--lcars-purple)
  custom-button-lcars-bar-large:
    template: custom-button-lcars-base
    variables:
      border_left: 60px
      border_right: 60px
      lcars_color: var(--lcars-card-top-color)
      font_size: 60px
      text_transform: uppercase
      text_padding_bottom: 20px
      text_color_on: null
      text_color_off: null
      card_border_top_left_radius: null
      card_border_top_right_radius: null
      card_border_bottom_left_radius: null
      card_border_bottom_right_radius: null
  custom-button-lcars-button-square:
    template: custom-button-lcars-button-base
    show_icon: false
  custom-button-lcars-button-picard:
    template: custom-button-lcars-button-square
    variables:
      font_weight: normal
      font_size: 22px
      border_top: 4px
      border_left: 4px
      border_right: 4px
      border_bottom: 4px
      card_background: transparent
      card_active_background_color: transparent
      card_inactive_background_color: transparent
      text_color: '[[[ return variables.lcars_color; ]]]'
      text_color_on: '[[[ return variables.card_active_color; ]]]'
      text_color_off: '[[[ return variables.card_inactive_color; ]]]'
      text_color_zero: '[[[ return variables.card_active_color; ]]]'
      text_color_non_zero: '[[[ return variables.card_inactive_color; ]]]'
      align_items: center
      text_padding_top: 0px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      icon_color: null
    styles:
      icon:
        - height: null
  custom-button-lcars-button-picard-dense:
    template: custom-button-lcars-button-picard
    variables:
      card_min_height: 50px
  custom-button-lcars-button-picard-right:
    template: custom-button-lcars-button-picard
    variables:
      text_justify: left
    styles:
      icon:
        - margin-right: 0
        - margin-left: null
  custom-button-lcars-button-picard-label-mod-base:
    variables:
      font_size: 18px
      text_padding_top: 5px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      text_justify: right
      align_items: flex-start
    styles:
      label:
        - align-items: '[[[ return variables.align_items ]]]'
        - justify-content: '[[[ return variables.text_justify; ]]]'
        - font-size: '[[[ return variables.font_size ]]]'
        - padding-top: '[[[ return variables.text_padding_top ]]]'
        - padding-left: '[[[ return variables.text_padding_left ]]]'
        - padding-right: '[[[ return variables.text_padding_right]]]'
        - padding-bottom: '[[[ return variables.text_padding_bottom ]]]'
  custom-button-lcars-button-picard-label-ne:
    template: custom-button-lcars-button-picard-label-mod-base
    variables:
      font_size: 18px
      text_padding_top: 5px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      text_justify: right
      align_items: flex-start
  custom-button-lcars-button-picard-label-se:
    template: custom-button-lcars-button-picard-label-mod-base
    variables:
      font_size: 18px
      text_padding_top: 5px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      text_justify: right
      align_items: flex-end
  custom-button-lcars-button-picard-label-nw:
    template: custom-button-lcars-button-picard-label-mod-base
    variables:
      font_size: 18px
      text_padding_top: 5px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      text_justify: left
      align_items: flex-start
  custom-button-lcars-button-picard-label-sw:
    template: custom-button-lcars-button-picard-label-mod-base
    variables:
      font_size: 18px
      text_padding_top: 5px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      text_justify: left
      align_items: flex-end
  custom-button-lcars-button-picard-name-mod-base:
    variables:
      font_size: 18px
      text_padding_top: 5px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      text_justify: right
      align_items: flex-start
    styles:
      name:
        - align-items: '[[[ return variables.align_items ]]]'
        - justify-content: '[[[ return variables.text_justify; ]]]'
        - font-size: '[[[ return variables.font_size ]]]'
        - padding-top: '[[[ return variables.text_padding_top ]]]'
        - padding-left: '[[[ return variables.text_padding_left ]]]'
        - padding-right: '[[[ return variables.text_padding_right]]]'
        - padding-bottom: '[[[ return variables.text_padding_bottom ]]]'
  custom-button-lcars-button-picard-name-ne:
    template: custom-button-lcars-button-picard-name-mod-base
    variables:
      font_size: 18px
      text_padding_top: 5px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      text_justify: right
      align_items: flex-start
  custom-button-lcars-button-picard-name-se:
    template: custom-button-lcars-button-picard-name-mod-base
    variables:
      font_size: 18px
      text_padding_top: 5px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      text_justify: right
      align_items: flex-end
  custom-button-lcars-button-picard-name-nw:
    template: custom-button-lcars-button-picard-name-mod-base
    variables:
      font_size: 18px
      text_padding_top: 5px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      text_justify: left
      align_items: flex-start
  custom-button-lcars-button-picard-name-sw:
    template: custom-button-lcars-button-picard-name-mod-base
    variables:
      font_size: 18px
      text_padding_top: 5px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 5px
      text_justify: left
      align_items: flex-end
  custom-button-lcars-button-picard-filled:
    template: custom-button-lcars-button-base
    variables:
      font_weight: normal
      font_size: 22px
      text_color: black
      text_color_on: black
      text_color_off: black
      border_top: 0px
      border_left: 0px
      border_right: 0px
      border_bottom: 0px
      align_items: center
      text_padding_top: 0px
      text_padding_left: 10px
      text_padding_right: 10px
      text_padding_bottom: 0px
      text_color_hvac_heat: var(--picard-pale-orange)
      text_color_hvac_cool: var(--picard-blue)
      text_color_hvac_other: var(--picard-black-cherry)
      text_color_zero: var(--picard-green)
      text_color_non_zero: var(--picard-blue)
    state:
      - value: heat
        id: state_heat
        styles:
          card:
            - background-color: '[[[ return variables.text_color_hvac_heat; ]]]'
          state:
            - color: '[[[ return variables.text_color_on; ]]]'
          label:
            - color: '[[[ return variables.text_color_on; ]]]'
      - value: cool
        id: state_cool
        styles:
          card:
            - background-color: '[[[ return variables.text_color_hvac_cool; ]]]'
          state:
            - color: '[[[ return variables.text_color_on; ]]]'
          label:
            - color: '[[[ return variables.text_color_on; ]]]'
      - operator: template
        value: |
          [[[
            return entity !== undefined && Number(states[entity.entity_id].state) === 0;
          ]]]
        id: state_zero
        styles:
          card:
            - background-color: '[[[ return variables.text_color_zero; ]]]'
          state:
            - color: '[[[ return variables.text_color_off; ]]]'
          label:
            - color: '[[[ return variables.text_color_off; ]]]'
      - operator: template
        value: |
          [[[
            return entity !== undefined && Number(states[entity.entity_id].state) > 0;
          ]]]
        id: state_nonzero
        styles:
          card:
            - background-color: '[[[ return variables.text_color_non_zero; ]]]'
          state:
            - color: '[[[ return variables.text_color_on; ]]]'
          label:
            - color: '[[[ return variables.text_color_on; ]]]'
      - value: 'on'
        id: state_on
        styles:
          card:
            - background-color: '[[[ return variables.card_active_background_color; ]]]'
            - border-top: >-
                [[[ return variables.border_top + " solid " +
                variables.card_active_color; ]]]
            - border-left: >-
                [[[ return variables.border_left + " solid " +
                variables.card_active_color; ]]]
            - border-right: >-
                [[[ return variables.border_right + " solid " +
                variables.card_active_color; ]]]
            - border-bottom: >-
                [[[ return variables.border_bottom + " solid " +
                variables.card_active_color; ]]]
          state:
            - color: '[[[ return variables.text_color_on; ]]]'
          label:
            - color: '[[[ return variables.text_color_on; ]]]'
          icon:
            - color: >-
                [[[ return variables.icon_active_color || variables.icon_color;
                ]]]
            - background: >-
                [[[ return variables.icon_active_background_color ||
                variables.card_active_background_color; ]]]
      - value: 'off'
        id: state_off
        styles:
          card:
            - background-color: '[[[ return variables.card_inactive_background_color; ]]]'
            - border-top: >-
                [[[ return variables.border_top + " solid " +
                variables.card_inactive_color; ]]]
            - border-left: >-
                [[[ return variables.border_left + " solid " +
                variables.card_inactive_color; ]]]
            - border-right: >-
                [[[ return variables.border_right + " solid " +
                variables.card_inactive_color; ]]]
            - border-bottom: >-
                [[[ return variables.border_bottom + " solid " +
                variables.card_inactive_color; ]]]          
          state:
            - color: '[[[ return variables.text_color_off; ]]]'
          label:
            - color: '[[[ return variables.text_color_off; ]]]'
          icon:
            - color: >-
                [[[ return variables.icon_inactive_color ||
                variables.icon_color; ]]]
            - background: >-
                [[[ return variables.icon_inactive_background_color ||
                variables.card_inactive_background_color; ]]]
      - operator: default
        id: state_default
        styles:
          card:
            - background-color: '[[[ return variables.card_inactive_background_color; ]]]'
          state:
            - color: '[[[ return variables.text_color_off; ]]]'
          label:
            - color: '[[[ return variables.text_color_off; ]]]'
  custom-button-lcars-button-picard-filled-dense:
    template: custom-button-lcars-button-picard-filled
    variables:
      card_min_height: 50px
  custom-button-lcars-button-picard-filled-right:
    template: custom-button-lcars-button-picard-filled
    variables:
      text_justify: left
    styles:
      icon:
        - margin-right: 0
        - margin-left: null
        - border-left: >-
            [[[ return variables.icon_border_color + " solid " +
            variables.icon_border_size; ]]]
        - margin-right: 0
        - margin-left: null
        - border-right: null
  custom-button-lcars-button-picard-icon:
    template:
      - custom-button-lcars-button-picard-filled-dense
    variables:
      card_width: 40px
      card_min_height: 40px
      card_border_top_left_radius: 10px
      card_border_top_right_radius: 10px
      card_border_bottom_left_radius: 10px
      card_border_bottom_right_radius: 10px
    styles:
      icon:
        - border: none !important
    size: '[[[ return variables.card_min_height; ]]]'
    show_icon: true
    show_label: false
    tap_action:
      action: toggle
    hold_action:
      action: more-info
    double_tap_action:
      action: none
  custom-button-lcars-button-picard-icon-new:
    template:
      - custom-button-lcars-button-picard-filled-dense
      - custom-button-lcars-actions-toggle
    variables:
      card_width: 40px
      card_height: 40px
      card_min_height: 40px
      card_border_top_left_radius: 10px
      card_border_top_right_radius: 10px
      card_border_bottom_left_radius: 10px
      card_border_bottom_right_radius: 10px
    styles:
      icon:
        - border: none !important
      grid:
        - grid-template-areas: '"i"'
    size: 24px
    show_icon: true
    show_label: false
  custom-button-lcars-lozenge:
    template: custom-button-lcars-button-base
    show_icon: false
    variables:
      card_border_top_left_radius: null
      card_border_top_right_radius: null
      card_border_bottom_left_radius: null
      card_border_bottom_right_radius: null
    styles:
      icon:
        - border-right: black solid 6px
        - margin-left: 0
  custom-button-lcars-lozenge-right:
    template: custom-button-lcars-lozenge
    variables:
      text_justify: left
    styles:
      icon:
        - border-left: black solid 6px
        - margin-right: 0
        - margin-left: null
        - border-right: null
  custom-button-lcars-bullet:
    template: custom-button-lcars-lozenge
    variables:
      card_border_top_left_radius: 0px
      card_border_bottom_left_radius: 0px
  custom-button-lcars-bullet-right:
    template: custom-button-lcars-lozenge-right
    variables:
      card_border_top_right_radius: 0px
      card_border_bottom_right_radius: 0px
  custom-button-lcars-capped:
    template: custom-button-lcars-lozenge
    variables:
      card_border_top_right_radius: 0px
      card_border_bottom_right_radius: 0px
  custom-button-lcars-capped-right:
    template: custom-button-lcars-lozenge-right
    variables:
      card_border_top_left_radius: 0px
      card_border_bottom_left_radius: 0px
  custom-button-animate-press:
    variables:
      ripple_color: var(--lcars-card-top-color)
    styles:
      card:
        - '--mdc-ripple-color': '[[[ return variables.ripple_color; ]]]'
        - '--mdc-ripple-press-opacity': 0.5
  custom-button-state-blink:
    variables:
      blink_card_background_color: var(--error-color)
      blink_seconds: 2s
      color: var(--error-color)
      blink_state_mode: 'on'
    state:
      - value: '[[[ return variables.blink_state_mode; ]]]'
        color: '[[[ return variables.color; ]]]'
        styles:
          card:
            - animation-duration: '[[[ return variables.blink_seconds; ]]]'
            - animation-timing-function: ease-out
            - animation-name: blink
            - animation-iteration-count: infinite
            - animation-delay: 1s
            - background-color: '[[[ return variables.blink_card_background_color; ]]]'
  custom-button-lcars-button-grid-new:
    variables:
      grid_buttons: []
      grid_X: 3
      grid_Y: 2
      grid_template_columns: null
      grid_auto_rows: null
      grid_gap: 5px
      button:
        variables:
          card_width: 180px
          card_height: 45px
          card_min_height: 45px
          font_size: null
          card_active_color: var(--lcars-ui-secondary)
          card_active_background_color: var(--picard-cyan)
          card_inactive_color: var(--lcars-ui-primary)
          card_inactive_background_color: var(--lcars-ui-primary)
          lcars_color: null
          icon_active_color: null
          icon_inactive_color: null
          icon_active_background_color: null
          icon_inactive_background_color: null
        template:
          - custom-button-lcars-button-picard-filled
          - custom-button-lcars-button-picard-label-se
        show_icon: false
        icon: null
        size: 24px
        show_name: false
        show_state: false
        show_label: true
        label: ''
        entity: ''
      card_width: null
      card_height: null
      card_background: |
        [[[
          if (states['input_boolean.lcars_ui_debug'].state === 'on') {
            return 'rgba(0,150,0,0.3)';
          } else {
            return 'transparent';
          }
        ]]]
      y_total_cards: '[[[ return variables.grid_X * variables.grid_Y; ]]]'
      z_card_width: >
        [[[ return variables.card_width || "calc((" +

        variables.button.variables.card_width + " + " + variables.grid_gap + ")
        * " + variables.grid_X + ")";

        ]]]
      z_card_height: >
        [[[ return variables.card_height || "calc( " +

        "(" + variables.button.variables.card_height + " + " +
        variables.grid_gap + ") " + 

        " * " +

        "( " + variables.y_total_cards + " / " + variables.grid_X + "))";

        ]]]
    styles:
      card:
        - background: '[[[ return variables.card_background; ]]]'
        - height: '[[[ return variables.z_card_height ]]]'
        - width: '[[[ return variables.z_card_width ]]]'
        - border-radius: 0 !important
      custom_fields:
        button_grid:
          - position: absolute
          - top: 0px
          - left: 0px
    custom_fields:
      button_grid:
        card:
          type: custom:layout-card
          layout_type: custom:grid-layout
          layout:
            grid-template-columns: >-
              [[[ return variables.grid_template_columns || "repeat(" +
              variables.grid_X + ", " + variables.button.variables.card_width +
              ")"; ]]]
            grid-auto-rows: >-
              [[[ return variables.grid_auto_rows ||
              variables.button.variables.card_height; ]]]
            grid-gap: '[[[ return variables.grid_gap; ]]]'
            card_margin: 0
            padding: 0
            margin: '-4px -4px 0px -4px'
          cards: |
            [[[
              let resultArray = [];

              for (let x = 1; x <= variables.y_total_cards; x++) {
                let cardObject = variables.grid_buttons && variables.grid_buttons[x-1] ? variables.grid_buttons[x-1] : {};

                let defaultVariables = variables.button.variables;
                cardObject.variables = {...defaultVariables, ...cardObject.variables};
                
                let additionalObject = {
                  type: "custom:button-card",
                  view_layout: {
                    show: '[[[ return variables.y_total_cards >= x ? "always" : "never"; ]]]'
                  },
                  template:  variables.button.template,
                  entity: null,
                  show_icon: variables.button.show_icon,
                  icon: null,
                  show_label: variables.button.show_label,
                  label: variables.button.label || (((Math.floor(Math.random() * 256).toString(16).padStart(2, '0')) + "-" + (Math.floor(Math.random() * 4096).toString(16).padStart(3, '0')))),
                  show_name: variables.button.show_name,
                  name: null,
                  show_state: variables.button.show_state,
                  state: null,

                };
                resultArray.push({...additionalObject, ...cardObject});
              }
              return resultArray;
            ]]]
  custom-button-lcars-button-grid:
    variables:
      buttons: []
      num_cols: 3
      num_rows: 2
      button_width: 180px
      button_height: 45px
      button_gap: 5px
      button_font_size: null
      button_active_color: var(--lcars-ui-secondary)
      button_active_background_color: var(--picard-cyan)
      button_inactive_color: var(--lcars-ui-primary)
      button_inactive_background_color: var(--lcars-ui-primary)
      button_lcars_color: null
      button_icon_active_color: null
      button_icon_inactive_color: null
      button_icon_active_background_color: null
      button_icon_inactive_background_color: null
      button_template:
        - custom-button-lcars-button-picard-filled
        - custom-button-lcars-button-picard-label-se
      button_icon: null
      button_show_icon: false
      button_show_name: false
      button_show_state: false
      button_show_label: true
      button_label: ''
      grid_template_columns: null
      grid_auto_rows: null
      card_width: null
      card_height: null
      card_background: |
        [[[
          if (states['input_boolean.lcars_ui_debug'].state === 'on') {
            return 'rgba(0,150,0,0.3)';
          } else {
            return 'transparent';
          }
        ]]]
      y_total_cards: '[[[ return variables.num_cols * variables.num_rows; ]]]'
      z_card_width: >
        [[[ return variables.card_width || "calc((" +

        variables.button_width + " + " + variables.button_gap + ") * " +
        variables.num_cols + ")";

        ]]]
      z_card_height: |
        [[[ return variables.card_height || 
        "calc( " +
        "(" + variables.button_height + " + " + variables.button_gap + ") " + 
        " * " +
        "( " + variables.y_total_cards + " / " + variables.num_cols + "))";
        ]]]
    styles:
      card:
        - background: '[[[ return variables.card_background; ]]]'
        - height: '[[[ return variables.z_card_height ]]]'
        - width: '[[[ return variables.z_card_width ]]]'
        - border-radius: 0 !important
      custom_fields:
        button_grid:
          - position: absolute
          - top: 0px
          - left: 0px
    custom_fields:
      button_grid:
        card:
          type: custom:layout-card
          layout_type: custom:grid-layout
          layout:
            grid-template-columns: >-
              [[[ return variables.grid_template_columns || "repeat(" +
              variables.num_cols + ", " + variables.button_width + ")"; ]]]
            grid-auto-rows: >-
              [[[ return variables.grid_auto_rows || variables.button_height;
              ]]]
            grid-gap: '[[[ return variables.button_gap; ]]]'
            card_margin: 0
            padding: 0
            margin: '-4px -4px 0px -4px'
          cards: |
            [[[
              let resultArray = [];
              //let arrayLength = variables.buttons ? variables.buttons.length : variables.y_total_cards;
              //for (let x = 1; x <= arrayLength; x++) {
              for (let x = 1; x <= variables.y_total_cards; x++) {
                let cardObject = variables.buttons && variables.buttons[x-1] ? variables.buttons[x-1] : {};

                let defaultVariables = {
                  font_size: variables.button_font_size,
                  card_width: variables.button_width,
                  card_min_height: variables.button_height,
                  card_active_color: variables.button_active_color,
                  card_inactive_color: variables.button_inactive_color,
                  card_active_background_color: variables.button_active_background_color,
                  card_inactive_background_color: variables.button_inactive_background_color,
                  icon_active_color: variables.button_icon_active_color,
                  icon_inactive_color: variables.button_icon_inactive_color,
                  icon_active_background_color: variables.button_icon_active_background_color,
                  icon_inactive_background_color: variables.button_icon_inactive_background_color,
                  lcars_color: variables.button_inactive_color
                };
                cardObject.variables = {...defaultVariables, ...cardObject.variables};

                let additionalObject = {
                  type: "custom:button-card",
                  view_layout: {
                    show: '[[[ return variables.y_total_cards >= x ? "always" : "never"; ]]]'
                  },
                  template:  variables.button_template,
                  entity: null,
                  show_icon: variables.button_show_icon,
                  icon: variables.button_icon,
                  show_label: variables.button_show_label,
                  label: variables.button_label || (((Math.floor(Math.random() * 256).toString(16).padStart(2, '0')) + "-" + (Math.floor(Math.random() * 4096).toString(16).padStart(3, '0')))),
                  show_name: variables.button_show_name,
                  name: null,
                  show_state: variables.button_show_state,
                  state: null,


                };
                resultArray.push({...additionalObject, ...cardObject});
              }
              return resultArray;
            ]]]
  custom-button-lcars-button-grid-icons:
    template:
      - custom-button-lcars-button-grid
    variables:
      num_rows: 1
      num_cols: 5
      button_width: 40px
      button_height: 40px
      button_template:
        - custom-button-lcars-button-picard-icon
      button_show_icon: true
      button_show_label: false
  custom-button-lcars-button-grid-icons-new:
    type: custom:button-card
    template:
      - custom-button-lcars-button-grid-new
    variables:
      grid_X: 5
      grid_Y: 1
      button:
        variables:
          card_width: 40px
          card_height: 40px
          card_min_height: null
        template:
          - custom-button-lcars-button-picard-icon-new
        show_icon: true
        show_label: false
  custom-button-lcars-meter-new:
    template:
      - custom-button-lcars-functions
      - custom-button-lcars-button-grid-new
    variables:
      gradient_start_color: var(--error-color)
      gradient_start_rgb: |
        [[[ 
          return variables.__hex_to_rgba(variables.gradient_start_color)
         ]]]
      gradient_end_color: var(--lcars-blue)
      gradient_end_rgb: |
        [[[ 
          return variables.__hex_to_rgba(variables.gradient_end_color) 
        ]]]
      grid_X: 1
      grid_Y: 10
      button:
        variables:
          card_height: 20px
          card_min_height: 20px
          card_width: 100px
        show_label: false
        template: custom-button-lcars-lozenge
      grid_gap: 10px
      grid_buttons: |
        [[[ 
          let buttons = [];
          let total_steps = (variables.grid_X > variables.grid_Y) ? variables.grid_X : variables.grid_Y;
          for(let i = 0; i < total_steps ; i++) {
            buttons.push({
              variables: {
                card_inactive_background_color: variables.__interpolated_rgb(variables.gradient_start_rgb,variables.gradient_end_rgb, i, total_steps)
              }
            });
          }
          return buttons;
        ]]]
  custom-button-lcars-meter:
    template:
      - custom-button-lcars-functions
      - custom-button-lcars-button-grid
    variables:
      _start_color: var(--error-color)
      _start_rgb: |
        [[[ 
          //console.log("_start_rgb: " + variables.__hex_to_rgba(variables._start_color));
          return variables.__hex_to_rgba(variables._start_color)
         ]]]
      _end_color: var(--lcars-blue)
      _end_rgb: |
        [[[ 
         //console.log("_end_rgb: " + variables.__hex_to_rgba(variables._end_color));
          return variables.__hex_to_rgba(variables._end_color) 
        ]]]
      _total_steps: 9
      num_cols: 1
      num_rows: '[[[ return parseInt(variables._total_steps + 1) ]]]'
      button_height: 20px
      button_width: 100px
      button_gap: 10px
      button_show_label: false
      button_template: custom-button-lcars-lozenge
      buttons: |
        [[[ 
          let buttons = [];
          let num_rows = parseInt(variables._total_steps + 1);
          for(let i = 0; i < num_rows; i++) {
            buttons.push({
              variables: {
                card_inactive_background_color: variables.__interpolated_rgb(variables._start_rgb,variables._end_rgb, i, variables._total_steps)
              }
            });
          }
          return buttons;
        ]]]
  custom-button-lcars-meter-horizontal-new:
    template: custom-button-lcars-meter-new
    variables:
      grid_X: 25
      grid_Y: 1
      button:
        variables:
          card_width: 10px
          card_height: 45px
        template:
          - custom-button-lcars-button-picard-filled
      grid_gap: 5px
  custom-button-lcars-meter-horizontal:
    template: custom-button-lcars-meter
    variables:
      _total_steps: 24
      button_width: 10px
      button_height: 45px
      button_gap: 5px
      button_template:
        - custom-button-lcars-button-picard-filled
      num_rows: 1
      num_cols: '[[[ return parseInt(variables._total_steps + 1) ]]]'
  custom-button-lcars-slider-new:
    variables:
      meter:
        variables:
          gradient_start_color: var(--error-color)
          gradient_end_color: var(--success-color)
          grid_X: 1
          grid_Y: 10
          grid_gap: 10px
          button:
            variables:
              card_height: 15px
              card_min_height: 15px
              card_width: 100px
      slider:
        mask_color: rgb(0,0,0,0.8)
        step: 1
      card_width: 100px
      card_height: 250px
      entity: ''
    triggers_update: '[[[ return variables.entity ]]]'
    styles:
      card:
        - width: '[[[ return variables.card_width ]]]'
        - height: '[[[ return variables.card_height ]]]'
        - border-radius: 0 !important
        - background: none
      custom_fields:
        meter:
          - position: absolute
          - left: 0px
          - top: 0px
        slider:
          - position: absolute
          - left: 0px
          - top: 0px
          - z-index: 1
          - width: '[[[ return variables.card_width ]]]'
          - height: '[[[ return variables.card_height ]]]'
    custom_fields:
      meter:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-meter-new
          variables: '[[[ return variables.meter.variables; ]]]'
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return variables.entity ]]]'
          mode: brightness
          flipped: true
          inverse: true
          vertical: true
          step: '[[[ return variables.slider.step; ]]]'
          styles:
            card:
              - width: '[[[ return variables.card_width ]]]'
              - height: '[[[ return variables.card_height ]]]'
              - background: none
              - border-radius: 0
            progress:
              - background-color: '[[[ return variables.slider.mask_color; ]]]'
            container:
              - border-radius: 0
            track:
              - background: none
            thumb:
              - background: none
  custom-button-lcars-slider-horizontal-new:
    template: custom-button-lcars-slider-new
    variables:
      meter:
        variables:
          grid_X: 25
          grid_gap: 5px
          button:
            template: custom-button-lcars-button-picard
            variables:
              card_height: 45px
              card_min_height: 45px
              card_width: 10px
      card_width: 370px
      card_height: 45px
    custom_fields:
      slider:
        card:
          vertical: false
  custom-button-lcars-slider-horizontal-gauge-new:
    template:
      - custom-button-lcars-functions
      - custom-button-lcars-slider-new
    variables:
      card_width: 500px
      card_height: 45px
      entity: ''
      slider:
        color: var(--picard-cyan)
        color_alpha: 0.95
        border_color: var(--picard-blue)
        border_alpha: 0.5
        border_width: 2px
        height: 10px
        width: '[[[ return variables.card_width ]]]'
        top_padding: 10px
      gauge:
        ticks: 8
        meter:
          variables:
            grid_X: 10
            grid_gap: 0px
            gradient_start_rgb: none
            gradient_end_rgb: none
            grid_buttons:
              - label: 10
              - label: 20
              - label: 30
              - label: 40
              - label: 50
              - label: 60
              - label: 70
              - label: 80
              - label: 90
              - label: 100
            button:
              template:
                - custom-button-lcars-button-picard
                - custom-button-lcars-button-picard-label-se
              variables:
                font_size: 14px
                card_height: '[[[ return variables.card_height ]]]'
                card_min_height: 45px
                card_width: '[[[ return "calc("+variables.card_width+" / 10)" ]]]'
                border_right: 2px
                border_top: 0
                border_left: 0
                border_bottom: 0
                text_padding_bottom: 0px
                text_padding_right: 3px
                lcars_color: var(--lcars-ui-primary)
                text_color_off: var(--lcars-ui-primary)
                card_inactive_background_color: non
              label: '#'
              show_label: true
        sub_meter:
          variables:
            grid_X: 50
            grid_gap: 0px
            gradient_start_rgb: none
            gradient_end_rgb: none
            button:
              template:
                - custom-button-lcars-button-picard
                - custom-button-lcars-button-picard-label-se
              variables:
                card_height: 10px
                card_min_height: 10px
                card_width: '[[[ return "calc("+variables.card_width+" / 50)" ]]]'
                border_right: 1px
                border_top: 0
                border_left: 0
                border_bottom: 0
                text_padding_bottom: 0px
                lcars_color: var(--lcars-ui-primary)
                text_color_off: var(--lcars-ui-primary)
                card_inactive_background_color: none
              show_label: false
      meter: '[[[ return variables.gauge.meter ]]]'
      sub_meter: '[[[ return variables.gauge.sub_meter ]]]'
    styles:
      custom_fields:
        slider:
          - position: absolute
          - top: '[[[ return variables.slider.top_padding ]]]'
          - left: '[[[ return "calc(" + variables.slider.border_width + " * -1)" ]]]'
        sub_meter:
          - position: absolute
          - top: 0px
          - left: 0px
    custom_fields:
      slider:
        card:
          flipped: false
          vertical: false
          inverse: false
          styles:
            card:
              - height: '[[[ return variables.slider.height ]]]'
              - width: '[[[ return variables.slider.width ]]]'
            progress:
              - background-color: >-
                  [[[ return
                  variables.__hex_to_rgba(variables.slider.color,variables.slider.color_alpha)
                  ]]]
              - border: >-
                  [[[ return variables.slider.border_width + " solid " +
                  variables.__hex_to_rgba(variables.slider.border_color,
                  variables.slider.border_alpha)  ]]]
              - border-radius: 2px
      sub_meter:
        card:
          type: custom:button-card
          template: custom-button-lcars-meter-horizontal-new
          variables: '[[[ return variables.sub_meter.variables ]]]'
  custom-button-lcars-multimeter-new:
    variables:
      card_width: 500px
      card_height: 60px
      panel_width: 380px
      panel_height: 50px
      panel_padding: 5px
      panel_mode: gauge
      entity: ''
      slider:
        entity: '[[[ return variables.entity ]]]'
      gauge:
        entity: '[[[ return variables.entity ]]]'
      label: null
      button:
        variables:
          font_size: null
          card_active_color: var(--lcars-ui-secondary)
          card_active_background_color: var(--lcars-ui-secondary)
          card_inactive_color: var(--lcars-ui-primary)
          card_inactive_background_color: var(--lcars-ui-primary)
          lcars_color: null
          icon_active_color: null
          icon_inactive_color: null
          icon_active_background_color: null
          icon_inactive_background_color: null
      y_panel_width_padded: >-
        [[[ return "calc(" + variables.panel_width + " - " +
        variables.panel_padding + ")" ]]]
      y_panel_height_padded: >-
        [[[ return "calc(" + variables.panel_height + " - " +
        variables.panel_padding + ")" ]]]
      y_trim_height: >-
        [[[ return "calc(" + variables.card_height + " - " +
        variables.panel_height + ")" ]]]
      y_trim_width: '[[[ return variables.panel_width ]]]'
      y_header_height: '[[[ return variables.card_height ]]]'
      y_header_width: >-
        [[[ return "calc(" + variables.card_width + " - " +
        variables.panel_width + ")" ]]]
      z_button_card:
        type: custom:button-card
        template:
          - custom-button-lcars-button-grid-new
        variables:
          card_width: '[[[ return variables.card_width ]]]'
          card_height: '[[[ return variables.card_height ]]]'
          grid_X: 2
          grid_Y: 1
          button: '[[[ return variables.button ]]]'
          grid_buttons:
            - variables:
                card_width: '[[[ return variables.y_header_width ]]]'
                card_height: '[[[ return variables.y_header_height ]]]'
                font_size: 24px
              show_label: true
              label: '[[[ return variables.label ]]]'
              template:
                - custom-button-lcars-button-picard-filled
              entity: '[[[ return variables.entity ]]]'
            - variables:
                card_width: '[[[ return variables.y_trim_width ]]]'
                card_height: '[[[ return variables.y_trim_height ]]]'
                card_min_height: '[[[ return variables.y_trim_height ]]]'
              show_label: false
              entity: '[[[ return variables.entity ]]]'
          grid_template_columns: >-
            [[[ return  variables.y_header_width + " " + variables.y_trim_width 
            ]]]
          grid_gap: 0px
      z_gauge_card:
        type: custom:button-card
        template:
          - custom-button-lcars-slider-horizontal-gauge-new
        variables:
          card_height: '[[[ return variables.panel_height ]]]'
          card_width: '[[[ return variables.panel_width ]]]'
          entity: '[[[ return variables.gauge.entity || null ]]]'
      z_slider_card:
        type: custom:button-card
        template:
          - custom-button-lcars-slider-horizontal-new
        variables:
          card_height: '[[[ return variables.y_panel_height_padded ]]]'
          card_width: '[[[ return variables.y_panel_width_padded ]]]'
          entity: '[[[ return variables.slider.entity || null ]]]'
          meter: >
            [[[

            let meterObject = (variables.slider && variables.slider.meter) ?
            variables.slider.meter : {};

            let defaultVariables = {
              variables: {
                button: {
                  variables: {
                    card_height: variables.y_panel_height_padded
                  },
                  template: "custom-button-lcars-button-picard-filled"
                }
              }
            };

            meterObject = {...defaultVariables, ...meterObject};

            return meterObject;

            ]]]
      z_icon_grid:
        type: custom:button-card
        template:
          - custom-button-lcars-button-grid-icons-new
        variables: >
          [[[

          let iconObject = (variables.icon_grid &&
          variables.icon_grid.variables) ? variables.icon_grid.variables : {};

          let defaultVariables = {
            card_height: variables.y_panel_height_padded,
            card_width: variables.y_panel_width_padded,
            grid_X: "7",
            grid_gap: "9px",
             button: {
              variables: {
                card_width: "45px",
                card_height: "45px"
              }
            }
          }; iconObject = {...defaultVariables, ...iconObject};

          return iconObject;

          ]]]
    styles:
      card:
        - background: none
        - width: '[[[ return variables.card_width; ]]]'
        - height: '[[[  return variables.card_height; ]]]'
        - border-radius: 0 !important
      custom_fields:
        panel:
          - position: absolute
          - right: 0px
          - bottom: 0px
        button:
          - position: absolute
          - left: 0px
          - top: 0px
    custom_fields:
      button:
        card: '[[[ return variables.z_button_card ]]]'
      panel:
        card: |
          [[[
          let panel_card;
          switch (variables.panel_mode) {
            case 'icons':
            case 'icon_grid':
              panel_card = variables.z_icon_grid;
              break;
            case 'slider':
              panel_card = variables.z_slider_card;
              break;
            case 'gauge':
              panel_card = variables.z_gauge_card;
              break;
            default:
              panel_card = null;
          }
          return panel_card;
          ]]]
  custom-button-lcars-slider:
    variables:
      card_width: 100px
      card_height: 250px
      entity: ''
      meter_start_color: var(--error-color)
      meter_end_color: var(--success-color)
      meter_button_template: custom-button-lcars-lozenge
      meter_total_steps: 9
      meter_button_height: 15px
      meter_button_width: 100px
      meter_button_gap: 10px
      slider_color_mask: black
      slider_step: 1
    styles:
      card:
        - width: '[[[ return variables.card_width ]]]'
        - height: '[[[ return variables.card_height ]]]'
        - border-radius: 0 !important
        - background: none
      custom_fields:
        meter:
          - position: absolute
          - left: 0px
          - top: 0px
        slider:
          - position: absolute
          - left: 0px
          - top: 0px
          - z-index: 1
          - width: '[[[ return variables.card_width ]]]'
          - height: '[[[ return variables.card_height ]]]'
    custom_fields:
      meter:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-meter
          variables:
            _start_color: '[[[ return variables.meter_start_color; ]]]'
            _end_color: '[[[ return variables.meter_end_color; ]]]'
            _total_steps: '[[[ return variables.meter_total_steps; ]]]'
            button_template: '[[[ return variables.meter_button_template; ]]]'
            button_width: '[[[ return variables.meter_button_width; ]]]'
            button_height: '[[[ return variables.meter_button_height; ]]]'
            button_gap: '[[[ return variables.meter_button_gap; ]]]'
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return variables.entity; ]]]'
          mode: brightness
          flipped: true
          inverse: true
          vertical: true
          step: '[[[ return variables.slider_step; ]]]'
          styles:
            card:
              - width: '[[[ return variables.card_width ]]]'
              - height: '[[[ return variables.card_height ]]]'
              - background: none
              - border-radius: 0
            progress:
              - background-color: '[[[ return variables.slider_color_mask; ]]]'
            container:
              - border-radius: 0
            track:
              - background: none
            thumb:
              - background: none
  custom-button-lcars-slider-horizontal:
    variables:
      card_width: 370px
      card_height: 45px
      entity: ''
      meter_start_color: var(--error-color)
      meter_end_color: var(--success-color)
      meter_button_template: custom-button-lcars-button-picard-filled
      meter_total_steps: 24
      meter_button_height: 45px
      meter_button_width: 10px
      meter_button_gap: 5px
      slider_color_mask: black
      slider_step: 1
    styles:
      card:
        - width: '[[[ return variables.card_width ]]]'
        - height: '[[[ return variables.card_height ]]]'
        - border-radius: 0 !important
        - background: none
      custom_fields:
        meter:
          - position: absolute
          - left: 0px
          - top: 0px
        slider:
          - position: absolute
          - left: 0px
          - top: 0px
          - z-index: 1
          - width: '[[[ return variables.card_width ]]]'
          - height: '[[[ return variables.card_height ]]]'
    custom_fields:
      meter:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-meter-horizontal
          variables:
            _start_color: '[[[ return variables.meter_start_color; ]]]'
            _end_color: '[[[ return variables.meter_end_color; ]]]'
            _total_steps: '[[[ return variables.meter_total_steps; ]]]'
            button_template: '[[[ return variables.meter_button_template; ]]]'
            button_width: '[[[ return variables.meter_button_width; ]]]'
            button_height: '[[[ return variables.meter_button_height; ]]]'
            button_gap: '[[[ return variables.meter_button_gap; ]]]'
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return variables.entity; ]]]'
          mode: brightness
          flipped: true
          inverse: true
          vertical: false
          step: '[[[ return variables.slider_step; ]]]'
          styles:
            card:
              - width: '[[[ return variables.card_width ]]]'
              - height: '[[[ return variables.card_height ]]]'
              - background: none
              - border-radius: 0
            progress:
              - background-color: '[[[ return variables.slider_color_mask; ]]]'
            container:
              - border-radius: 0
            track:
              - background: none
            thumb:
              - background: none
  custom-button-lcars-slider-picard:
    variables:
      card_width: 500px
      card_height: 70px
      panel_width: 380px
      panel_height: 60px
      panel_padding: 4px
      y_panel_width_padded: >-
        [[[ return "calc(" + variables.panel_width + " - " +
        variables.panel_padding + ")" ]]]
      y_panel_height_padded: >-
        [[[ return "calc(" + variables.panel_height + " - " +
        variables.panel_padding + ")" ]]]
      y_trim_height: >-
        [[[ return "calc(" + variables.card_height + " - " +
        variables.panel_height + ")" ]]]
      y_trim_width: '[[[ return variables.panel_width ]]]'
      y_header_height: '[[[ return variables.card_height ]]]'
      y_header_width: >-
        [[[ return "calc(" + variables.card_width + " - " +
        variables.panel_width + ")" ]]]
      z_panel_card:
        type: custom:button-card
        template:
          - custom-button-lcars-slider-horizontal
        variables:
          card_height: '[[[ return variables.y_panel_height_padded ]]]'
          card_width: '[[[ return variables.y_panel_width_padded ]]]'
          entity: ''
          meter_start_color: var(--error-color)
          meter_end_color: var(--success-color)
          meter_button_template: custom-button-lcars-button-picard-filled
          meter_total_steps: 24
          meter_button_height: '[[[ return variables.y_panel_height_padded  ]]]'
          meter_button_width: 10px
          meter_button_gap: 5px
          slider_color_mask: black
          slider_step: 1
      z_header_card:
        type: custom:button-card
        label: ''
        entity: ''
        template:
          - custom-button-lcars-button-picard-filled
        variables:
          card_height: '[[[ return variables.y_header_height; ]]]'
          card_min_height: '[[[ return variables.y_header_height; ]]]'
          card_width: '[[[ return variables.y_header_width; ]]]'
          font_size: 26px
      z_trim_card:
        type: custom:button-card
        template:
          - custom-button-lcars-button-picard-filled
        variables:
          card_height: '[[[ return variables.y_trim_height; ]]]'
          card_min_height: '[[[ return variables.y_trim_height; ]]]'
          card_width: '[[[ return variables.y_trim_width; ]]]'
    styles:
      card:
        - background: none
        - width: '[[[ return variables.card_width; ]]]'
        - height: '[[[  return variables.card_height; ]]]'
        - border-radius: 0 !important
      custom_fields:
        trim:
          - position: absolute
          - right: 0px
          - top: 0px
        panel:
          - position: absolute
          - right: 0px
          - bottom: 0px
        header:
          - position: absolute
          - left: 0px
          - top: 0px
    custom_fields:
      trim:
        card: '[[[ return variables.z_trim_card ]]]'
      header:
        card: '[[[ return variables.z_header_card ]]]'
      panel:
        card: '[[[ return variables.z_panel_card ]]]'
  custom-button-lcars-dpad:
    variables:
      card_size: 300px
      dpad_button_scale: 6.5
      dpad_button_min_height: 10px
      button_ripple_color: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-color") ]]]
      svg_background_color: '#1111ee'
      svg_dpad_up_color: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-color") ]]]
      svg_dpad_up_color_active: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-active-color")
        ]]]
      svg_dpad_down_color: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-color") ]]]
      svg_dpad_down_color_active: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-active-color")
        ]]]
      svg_dpad_left_color: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-color") ]]]
      svg_dpad_left_color_active: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-active-color")
        ]]]
      svg_dpad_right_color: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-color") ]]]
      svg_dpad_right_color_active: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-active-color")
        ]]]
      svg_dpad_center_color: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-color") ]]]
      svg_dpad_center_color_active: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--state-active-color")
        ]]]
      svg_dpad_up_left_color: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--lcars-card-button")
        ]]]
      svg_dpad_up_left_color_active: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--lcars-ui-primary")
        ]]]
      svg_dpad_up_right_color: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--lcars-card-button")
        ]]]
      svg_dpad_up_right_color_active: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--lcars-ui-primary")
        ]]]
      svg_dpad_down_left_color: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--lcars-card-button")
        ]]]
      svg_dpad_down_left_color_active: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--lcars-ui-primary")
        ]]]
      svg_dpad_down_right_color: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--lcars-card-button")
        ]]]
      svg_dpad_down_right_color_active: >-
        [[[ return
        getComputedStyle(document.body).getPropertyValue("--lcars-ui-primary")
        ]]]
      dpad_center_entity: null
      dpad_center_entity_active_state: 'on'
      dpad_up_entity: input_boolean.lcars_ui_fullscreen
      dpad_up_entity_active_state: 'on'
      dpad_up_left_entity: null
      dpad_up_left_entity_active_state: 'on'
      dpad_up_left_show_label: true
      dpad_up_left_label: null
      dpad_up_left_show_name: false
      dpad_up_left_show_state: false
      dpad_up_right_entity: null
      dpad_up_right_entity_active_state: 'on'
      dpad_up_right_show_label: true
      dpad_up_right_label: null
      dpad_up_right_show_name: false
      dpad_up_right_show_state: false
      dpad_down_entity: null
      dpad_down_entity_active_state: 'on'
      dpad_down_left_entity: null
      dpad_down_left_entity_active_state: 'on'
      dpad_down_left_show_label: true
      dpad_down_left_label: null
      dpad_down_left_show_name: false
      dpad_down_left_show_state: false
      dpad_down_right_entity: null
      dpad_down_right_entity_active_state: 'on'
      dpad_down_right_show_label: true
      dpad_down_right_label: null
      dpad_down_right_show_name: false
      dpad_down_right_show_state: false
      dpad_left_entity: null
      dpad_left_entity_active_state: 'on'
      dpad_right_entity: null
      dpad_right_entity_active_state: 'on'
      dpad_center_card_background: transparent
      dpad_center_card_inactive_background_color: transparent
      dpad_center_card_active_background_color: transparent
      dpad_up_card_background: transparent
      dpad_up_card_inactive_background_color: transparent
      dpad_up_card_active_background_color: transparent
      dpad_up_left_card_background: transparent
      dpad_up_left_card_inactive_background_color: transparent
      dpad_up_left_card_active_background_color: transparent
      dpad_up_right_card_background: transparent
      dpad_up_right_card_inactive_background_color: transparent
      dpad_up_right_card_active_background_color: transparent
      dpad_down_card_background: transparent
      dpad_down_card_inactive_background_color: transparent
      dpad_down_card_active_background_color: transparent
      dpad_down_left_card_background: transparent
      dpad_down_left_card_inactive_background_color: transparent
      dpad_down_left_card_active_background_color: transparent
      dpad_down_right_card_background: transparent
      dpad_down_right_card_inactive_background_color: transparent
      dpad_down_right_card_active_background_color: transparent
      dpad_left_card_background: transparent
      dpad_left_card_inactive_background_color: transparent
      dpad_left_card_active_background_color: transparent
      dpad_right_card_background: transparent
      dpad_right_card_inactive_background_color: transparent
      dpad_right_card_active_background_color: transparent
    triggers_update:
      - '[[[ return variables.dpad_up_entity; ]]]'
      - '[[[ return variables.dpad_down_entity; ]]]'
      - '[[[ return variables.dpad_left_entity; ]]]'
      - '[[[ return variables.dpad_right_entity; ]]]'
      - '[[[ return variables.dpad_center_entity; ]]]'
      - '[[[ return variables.dpad_up_left_entity; ]]]'
      - '[[[ return variables.dpad_up_right_entity; ]]]'
      - '[[[ return variables.dpad_down_left_entity; ]]]'
      - '[[[ return variables.dpad_down_right_entity; ]]]'
    styles:
      card:
        - height: '[[[ return variables.card_size ]]]'
        - width: '[[[ return variables.card_size ]]]'
        - background: |
            [[[
              let button_ripple_color = variables.button_ripple_color;
              let svg_dpad_up_bg = (variables.dpad_up_entity && states[variables.dpad_up_entity] && states[variables.dpad_up_entity].state === variables.dpad_up_entity_active_state) ? variables.svg_dpad_up_color_active : variables.svg_dpad_up_color;
              let svg_dpad_down_bg = (variables.dpad_down_entity && states[variables.dpad_down_entity] && states[variables.dpad_down_entity].state === variables.dpad_down_entity_active_state) ? variables.svg_dpad_down_color_active : variables.svg_dpad_down_color;
              let svg_dpad_left_bg = (variables.dpad_left_entity && states[variables.dpad_left_entity] && states[variables.dpad_left_entity].state === variables.dpad_left_entity_active_state) ? variables.svg_dpad_left_color_active : variables.svg_dpad_left_color;
              let svg_dpad_right_bg = (variables.dpad_right_entity && states[variables.dpad_right_entity] && states[variables.dpad_right_entity].state === variables.dpad_right_entity_active_state) ? variables.svg_dpad_right_color_active : variables.svg_dpad_right_color;
              let svg_dpad_center_bg = (variables.dpad_center_entity && states[variables.dpad_center_entity] && states[variables.dpad_center_entity].state === variables.dpad_center_entity_active_state) ? variables.svg_dpad_center_color_active : variables.svg_dpad_center_color;

              let svg_dpad_up_left_bg = (variables.dpad_up_left_entity && states[variables.dpad_up_left_entity] && states[variables.dpad_up_left_entity].state === variables.dpad_up_left_entity_active_state) ? variables.svg_dpad_up_left_color_active : variables.svg_dpad_up_left_color;
              let svg_dpad_up_right_bg = (variables.dpad_up_right_entity && states[variables.dpad_up_right_entity] && states[variables.dpad_up_right_entity].state === variables.dpad_up_right_entity_active_state) ? variables.svg_dpad_up_right_color_active : variables.svg_dpad_up_right_color;
              let svg_dpad_down_left_bg = (variables.dpad_down_left_entity && states[variables.dpad_down_left_entity] && states[variables.dpad_down_left_entity].state === variables.dpad_down_left_entity_active_state) ? variables.svg_dpad_down_left_color_active : variables.svg_dpad_down_left_color;
              let svg_dpad_down_right_bg = (variables.dpad_down_right_entity && states[variables.dpad_down_right_entity] && states[variables.dpad_down_right_entity].state === variables.dpad_down_right_entity_active_state) ? variables.svg_dpad_down_right_color_active : variables.svg_dpad_down_right_color;
              
              
              
              let svg_background_color = variables.svg_background_color;
              let svgString = `<?xml version="1.0" encoding="UTF-8"?>
              <svg width="80mm" height="80mm" version="1.1" viewBox="0 0 80 80" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:xlink="http://www.w3.org/1999/xlink">
               <metadata>
                <rdf:RDF>
                 <cc:Work rdf:about="">
                  <dc:format>image/svg+xml</dc:format>
                  <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
                  <dc:title/>
                 </cc:Work>
                </rdf:RDF>
               </metadata>
                <defs>
                  <style type="text/css"><![CDATA[
                  .lcars-svg-bg {
                  fill: ${svg_background_color};
                  }
                  .lcars-d-pad-bg {
                  fill: ${button_ripple_color};
                  }
                  .lcars-dpad-left-bg {
                  fill: ${svg_dpad_left_bg};
                  }
                  .lcars-dpad-right-bg {
                  fill: ${svg_dpad_right_bg};
                  }
                  .lcars-dpad-up-bg {
                  fill: ${svg_dpad_up_bg};
                  }
                  .lcars-dpad-down-bg {
                  fill: ${svg_dpad_down_bg};
                  }
                  .lcars-dpad-center-bg {
                  fill: ${svg_dpad_center_bg};
                  }
                  .lcars-dpad-up-left-bg {
                  fill: ${svg_dpad_up_left_bg};
                  }
                  .lcars-dpad-up-right-bg {
                  fill: ${svg_dpad_up_right_bg};
                  }
                  .lcars-dpad-down-left-bg {
                  fill: ${svg_dpad_down_left_bg};
                  }
                  .lcars-dpad-down-right-bg {
                  fill: ${svg_dpad_down_right_bg};
                  }
                  ]]></style>
                </defs>
               <g transform="translate(0,-217)">
                
                <path id="path892" d="m33 250v-32.35c-15.992 2.4474-29.977 16.417-32.424 32.35z" class="lcars-dpad-up-left-bg"></path>
                <path d="m33 250v-32.35c-15.992 2.4474-29.977 16.417-32.424 32.35z" class="lcars-dpad-up-right-bg" transform="matrix(-1, 0, 0, 1, 80, 0.0000019179001355951186)"></path>
                <path d="m33 250v-32.35c-15.992 2.4474-29.977 16.417-32.424 32.35z" class="lcars-dpad-down-left-bg" transform="matrix(1, 0, 0, -1, -8.208900226236437e-8, 514)"></path>
                <path d="m33 250v-32.35c-15.992 2.4474-29.977 16.417-32.424 32.35z" class="lcars-dpad-down-right-bg" transform="matrix(-1, 0, 0, -1, 80, 514)"></path>

                <path d="m34 227h12v-9.5c-3.8785-0.47437-8.044-0.4824-12 0z" class="lcars-dpad-up-bg"/>
                <path d="m44.2 219.2v5.0271" style="fill:none;stroke-width:1.2;stroke:#000"/>
                <path d="m10 263v-12h-9.5c-0.47437 3.8785-0.4824 8.044 0 12z" class="lcars-dpad-left-bg"/>
                <path d="m2.199 252.8h5.0271" style="fill:none;opacity:.889;stroke-width:1.2;stroke:#000"/>
                <path d="m70 251v12h9.5c0.47437-3.8785 0.4824-8.044 0-12z" class="lcars-dpad-right-bg"/>
                <path d="m77.801 261.2h-5.0271" style="fill:none;stroke-width:1.2;stroke:#000"/>
                <path d="m46 287h-12v9.5c3.8785 0.47437 8.044 0.4824 12 0z" class="lcars-dpad-down-bg"/>
                <path d="m35.8 294.8v-5.0271" style="fill:none;stroke-width:1.2;stroke:#000"/>
                <path d="m11 251v12h23v23h12v-23h23v-12h-23v-23h-12v23z" class="lcars-dpad-center-bg"/>
                <path d="m34 230.49h12" style="fill:none;stroke-width:.75;stroke:#000"/>
                <path d="m34 233.2h12" style="fill:none;stroke-width:.75;stroke:#000"/>
                <path d="m34 236.48h12" style="fill:none;stroke-width:.75;stroke:#000"/>
                <path d="m34 244.9h12" style="fill:none;stroke-width:.75;stroke:#000"/>
                <path d="m34 276h12" style="fill:none;stroke-width:.75;stroke:#000"/>
               </g>
              </svg>`;
              let encodedSvgString = encodeURIComponent(svgString);
              let backgroundImage = `url('data:image/svg+xml,${encodedSvgString}')`;
              return backgroundImage;
            ]]]
        - background-position: center
        - background-size: '[[[ return variables.card_size ]]]'
        - background-color: none
      custom_fields:
        dpad_up_button:
          - position: absolute
          - top: 0px
          - left: >
              [[[ return "calc((" + variables.card_size + "/2) - (" +
              variables.card_size + " / " + variables.dpad_button_scale +
              "/2))"; ]]]
          - z-index: 100
        dpad_down_button:
          - position: absolute
          - bottom: 0px
          - left: >
              [[[ return "calc((" + variables.card_size + "/2) - (" +
              variables.card_size + " / " + variables.dpad_button_scale +
              "/2))"; ]]]
          - z-index: 100
        dpad_left_button:
          - position: absolute
          - left: 0px
          - top: >
              [[[ return "calc((" + variables.card_size + "/2) - (" +
              variables.card_size + " / " + variables.dpad_button_scale +
              "/2))"; ]]]
          - z-index: 100
        dpad_right_button:
          - position: absolute
          - right: 0px
          - top: >
              [[[ return "calc((" + variables.card_size + "/2) - (" +
              variables.card_size + " / " + variables.dpad_button_scale +
              "/2))"; ]]]
          - z-index: 100
        dpad_center_button:
          - position: absolute
          - right: |
              [[[ return "calc(" + variables.card_size + " /4 )";]]]
          - top: >
              [[[ return "calc((" + variables.card_size + "/2) - (" +
              variables.card_size + " / " + variables.dpad_button_scale +
              "/2))"; ]]]
          - z-index: 100
        dpad_up_left_button:
          - position: absolute
          - top: 0px
          - left: 0px
          - z-index: 99
        dpad_up_right_button:
          - position: absolute
          - top: 0px
          - right: 0px
          - z-index: 99
        dpad_down_left_button:
          - position: absolute
          - bottom: 0px
          - left: 0px
          - z-index: 99
        dpad_down_right_button:
          - position: absolute
          - bottom: 0px
          - right: 0px
          - z-index: 99
    custom_fields:
      dpad_center_button:
        card:
          type: custom:button-card
          entity: '[[[ return variables.dpad_center_entity; ]]]'
          template:
            - custom-button-animate-press
            - custom-button-lcars-button-square
          variables:
            ripple_color: '[[[ return variables.button_ripple_color; ]]]'
            card_min_height: '[[[ return variables.dpad_button_min_height; ]]]'
            card_width: |
              [[[ return "calc(" + variables.card_size + " /2 )";]]]
            card_height: |
              [[[ return "calc(" + variables.card_size + " / " +
              variables.dpad_button_scale + " )";]]]
            card_background: '[[[ return variables.dpad_center_card_background ]]]'
            card_active_background_color: '[[[ return variables.dpad_center_card_active_background_color ]]]'
            card_inactive_background_color: >-
              [[[ return variables.dpad_center_card_inactive_background_color
              ]]]
      dpad_up_button:
        card:
          type: custom:button-card
          entity: '[[[ return variables.dpad_up_entity; ]]]'
          template:
            - custom-button-animate-press
            - custom-button-lcars-button-square
          variables:
            ripple_color: '[[[ return variables.button_ripple_color; ]]]'
            card_min_height: '[[[ return variables.dpad_button_min_height; ]]]'
            card_width: >
              [[[ return "calc(" + variables.card_size + " / " +
              variables.dpad_button_scale + ")";]]]
            card_height: |
              [[[ return "calc(" + variables.card_size + " / " +
              variables.dpad_button_scale + ")";]]]
            card_background: '[[[ return variables.dpad_up_card_background ]]]'
            card_active_background_color: '[[[ return variables.dpad_up_card_active_background_color ]]]'
            card_inactive_background_color: '[[[ return variables.dpad_up_card_inactive_background_color ]]]'
      dpad_down_button:
        card:
          type: custom:button-card
          entity: '[[[ return variables.dpad_down_entity; ]]]'
          template:
            - custom-button-animate-press
            - custom-button-lcars-button-square
          variables:
            ripple_color: '[[[ return variables.button_ripple_color; ]]]'
            card_min_height: '[[[ return variables.dpad_button_min_height; ]]]'
            card_width: >
              [[[ return "calc(" + variables.card_size + " / " +
              variables.dpad_button_scale + ")";]]]
            card_height: |
              [[[ return "calc(" + variables.card_size + " / " +
              variables.dpad_button_scale + ")";]]]
            card_background: '[[[ return variables.dpad_down_card_background ]]]'
            card_active_background_color: '[[[ return variables.dpad_down_card_active_background_color ]]]'
            card_inactive_background_color: '[[[ return variables.dpad_down_card_inactive_background_color ]]]'
      dpad_left_button:
        card:
          type: custom:button-card
          entity: '[[[ return variables.dpad_left_entity; ]]]'
          template:
            - custom-button-animate-press
            - custom-button-lcars-button-square
          variables:
            ripple_color: '[[[ return variables.button_ripple_color; ]]]'
            card_min_height: '[[[ return variables.dpad_button_min_height; ]]]'
            card_width: >
              [[[ return "calc(" + variables.card_size + " / " +
              variables.dpad_button_scale + ")";]]]
            card_height: |
              [[[ return "calc(" + variables.card_size + " / " +
              variables.dpad_button_scale + ")";]]]
            card_background: '[[[ return variables.dpad_left_card_background ]]]'
            card_active_background_color: '[[[ return variables.dpad_left_card_active_background_color ]]]'
            card_inactive_background_color: '[[[ return variables.dpad_left_card_inactive_background_color ]]]'
      dpad_right_button:
        card:
          type: custom:button-card
          entity: '[[[ return variables.dpad_right_entity; ]]]'
          template:
            - custom-button-animate-press
            - custom-button-lcars-button-square
          variables:
            ripple_color: '[[[ return variables.button_ripple_color; ]]]'
            card_min_height: '[[[ return variables.dpad_button_min_height; ]]]'
            card_width: >
              [[[ return "calc(" + variables.card_size + " / " +
              variables.dpad_button_scale + ")";]]]
            card_height: |
              [[[ return "calc(" + variables.card_size + " / " +
              variables.dpad_button_scale + ")";]]]
            card_background: '[[[ return variables.dpad_right_card_background ]]]'
            card_active_background_color: '[[[ return variables.dpad_right_card_active_background_color ]]]'
            card_inactive_background_color: '[[[ return variables.dpad_right_card_inactive_background_color ]]]'
      dpad_up_left_button:
        card:
          type: custom:button-card
          entity: '[[[ return variables.dpad_up_left_entity; ]]]'
          template:
            - custom-button-animate-press
            - custom-button-lcars-base
          variables:
            ripple_color: '[[[ return variables.button_ripple_color; ]]]'
            card_width: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
            card_height: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
            card_background: '[[[ return variables.dpad_up_left_card_background ]]]'
            card_active_background_color: '[[[ return variables.dpad_up_left_card_active_background_color ]]]'
            card_inactive_background_color: >-
              [[[ return variables.dpad_up_left_card_inactive_background_color
              ]]]
            card_border_top_left_radius: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
          label: '[[[ return variables.dpad_up_left_label ]]]'
          show_name: '[[[ return variables.dpad_up_left_show_name ]]]'
          show_label: '[[[ return variables.dpad_up_left_show_label]]]'
          show_state: '[[[ return variables.dpad_up_left_show_state ]]]'
      dpad_up_right_button:
        card:
          type: custom:button-card
          entity: '[[[ return variables.dpad_up_right_entity; ]]]'
          template:
            - custom-button-animate-press
            - custom-button-lcars-base
          variables:
            ripple_color: '[[[ return variables.button_ripple_color; ]]]'
            card_width: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
            card_height: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
            card_background: '[[[ return variables.dpad_up_right_card_background ]]]'
            card_active_background_color: >-
              [[[ return variables.dpad_up_right_card_active_background_color
              ]]]
            card_inactive_background_color: >-
              [[[ return variables.dpad_up_right_card_inactive_background_color
              ]]]
            card_border_top_right_radius: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
          label: '[[[ return variables.dpad_up_right_label ]]]'
          show_name: '[[[ return variables.dpad_up_right_show_name ]]]'
          show_label: '[[[ return variables.dpad_up_right_show_label]]]'
          show_state: '[[[ return variables.dpad_up_right_show_state ]]]'
      dpad_down_left_button:
        card:
          type: custom:button-card
          entity: '[[[ return variables.dpad_down_left_entity; ]]]'
          template:
            - custom-button-animate-press
            - custom-button-lcars-base
          variables:
            ripple_color: '[[[ return variables.button_ripple_color; ]]]'
            card_width: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
            card_height: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
            card_background: '[[[ return variables.dpad_down_left_card_background ]]]'
            card_active_background_color: >-
              [[[ return variables.dpad_down_left_card_active_background_color
              ]]]
            card_inactive_background_color: >-
              [[[ return variables.dpad_down_left_card_inactive_background_color
              ]]]
            card_border_bottom_left_radius: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
          label: '[[[ return variables.dpad_down_left_label ]]]'
          show_name: '[[[ return variables.dpad_down_left_show_name ]]]'
          show_label: '[[[ return variables.dpad_down_left_show_label]]]'
          show_state: '[[[ return variables.dpad_down_left_show_state ]]]'
      dpad_down_right_button:
        card:
          type: custom:button-card
          entity: '[[[ return variables.dpad_down_right_entity; ]]]'
          template:
            - custom-button-animate-press
            - custom-button-lcars-base
          variables:
            ripple_color: '[[[ return variables.button_ripple_color; ]]]'
            card_width: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
            card_height: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
            card_background: '[[[ return variables.dpad_down_right_card_background ]]]'
            card_active_background_color: >-
              [[[ return variables.dpad_down_right_card_active_background_color
              ]]]
            card_inactive_background_color: >-
              [[[ return
              variables.dpad_down_right_card_inactive_background_color ]]]
            card_border_bottom_right_radius: |
              [[[ return "calc(" + variables.card_size + " / 2)";]]]
          label: '[[[ return variables.dpad_down_right_label ]]]'
          show_name: '[[[ return variables.dpad_down_right_show_name ]]]'
          show_label: '[[[ return variables.dpad_down_right_show_label]]]'
          show_state: '[[[ return variables.dpad_down_right_show_state ]]]'
  custom-button-lcars-header-picard:
    variables:
      card_height: 100px
      card_width: 400px
      card_label: ' '
      card_border_top_left_radius: var(--ha-card-border-radius)
      card_border_top_right_radius: 0px !important
      card_border_bottom_left_radius: 0px !important
      card_border_bottom_right_radius: 0px !important
      card_inner_border_factor: 1
      card_inner_border_width: 35px
      picard_border_gap: 4px
      picard_border_ratio_factor: 4
      picard_border_top: 20px
      picard_border_left: 180px
      picard_border_bottom: 0
      picard_border_right: 0
      picard_lcars_outer_border_left: >-
        [[[ return "calc( ((" + variables.picard_border_left + " - " +
        variables.picard_border_gap + ") / " +
        variables.picard_border_ratio_factor + ") * (" +
        variables.picard_border_ratio_factor + " - 1)" + ")";]]]
      picard_lcars_outer_border_top: >-
        [[[ return "calc((" + variables.picard_border_top + " - " +
        variables.picard_border_gap + ") / 2)";]]]
      picard_lcars_inner_border_left: >-
        [[[ return "calc((" + variables.picard_border_left + " - " +
        variables.picard_border_gap + " ) / " +
        variables.picard_border_ratio_factor + ")" ;]]]
      picard_lcars_inner_border_top: >-
        [[[ return "calc((" + variables.picard_border_top + " - " +
        variables.picard_border_gap + ") / 2)";]]]
      picard_lcars_inner_border_top_left_radius: >-
        [[[ return "calc((" + variables.card_border_top_left_radius + " ) / " +
        variables.card_inner_border_factor +" )";]]]
      picard_lcars_inner_border_factor: 1
      picard_lcars_outer_color: var(--lcars-card-top-color)
      picard_lcars_inner_color: var(--lcars-card-top-color)
    styles:
      card:
        - background-color: transparent
        - height: '[[[ return variables.card_height; ]]]'
        - width: '[[[ return variables.card_width; ]]]'
        - border-top-left-radius: '[[[ return variables.card_border_top_left_radius; ]]]'
        - border-top-right-radius: '[[[ return variables.card_border_top_right_radius; ]]]'
        - border-bottom-left-radius: '[[[ return variables.card_border_bottom_left_radius; ]]]'
        - border-bottom-right-radius: '[[[ return variables.card_border_bottom_right_radius; ]]]'
      custom_fields:
        lcars_outer:
          - position: absolute
          - top: 0
          - left: 0
        lcars_inner:
          - position: absolute
          - top: >-
              [[[ return "calc( (" + variables.picard_lcars_outer_border_top + "
              + " + variables.picard_border_gap + ")  ) "; ]]]
          - left: >-
              [[[ return "calc( (" + variables.picard_lcars_outer_border_left +
              " + " + variables.picard_border_gap + ")  ) "; ]]]
    custom_fields:
      lcars_outer:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-header
          variables:
            lcars_color: '[[[ return variables.picard_lcars_outer_color; ]]]'
            card_width: '[[[ return variables.card_width; ]]]'
            card_height: '[[[ return variables.card_height; ]]]'
            card_border_top_left_radius: '[[[ return variables.card_border_top_left_radius; ]]]'
            border_left: '[[[ return variables.picard_lcars_outer_border_left; ]]]'
            border_top: '[[[ return variables.picard_lcars_outer_border_top; ]]]'
            card_border_top_right_radius: 0px
            card_inner_border_factor: '[[[ return variables.card_inner_border_factor; ]]]'
            card_inner_border_width: '[[[ return variables.card_inner_border_width ]]]'
      lcars_inner:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-header
          label: '[[[ return variables.card_label; ]]]'
          variables:
            lcars_color: '[[[ return variables.picard_lcars_inner_color; ]]]'
            card_width: '[[[ return variables.card_width; ]]]'
            card_height: '[[[ return variables.card_height; ]]]'
            border_left: '[[[ return variables.picard_lcars_inner_border_left; ]]]'
            border_top: '[[[ return variables.picard_lcars_inner_border_top; ]]]'
            card_border_top_left_radius: >-
              [[[ return variables.picard_lcars_inner_border_top_left_radius;
              ]]]
            card_border_top_right_radius: 0px
            card_inner_border_factor: '[[[ return variables.picard_lcars_inner_border_factor; ]]]'
  custom-button-lcars-header-picard-right:
    variables:
      card_height: 100px
      card_width: 400px
      card_label: ' '
      card_border_top_left_radius: 0px !important
      card_border_top_right_radius: var(--ha-card-border-radius)
      card_border_bottom_left_radius: 0px !important
      card_border_bottom_right_radius: 0px !important
      card_inner_border_factor: 1
      card_inner_border_width: 35px
      picard_border_gap: 4px
      picard_border_ratio_factor: 4
      picard_border_top: 20px
      picard_border_left: 0
      picard_border_bottom: 0
      picard_border_right: 180px
      picard_lcars_outer_border_right: >-
        [[[ return "calc( ((" + variables.picard_border_right + " - " +
        variables.picard_border_gap + ") / " +
        variables.picard_border_ratio_factor + ") * (" +
        variables.picard_border_ratio_factor + " - 1)" + ")";]]]
      picard_lcars_outer_border_top: >-
        [[[ return "calc((" + variables.picard_border_top + " - " +
        variables.picard_border_gap + ") / 2)";]]]
      picard_lcars_inner_border_right: >-
        [[[ return "calc((" + variables.picard_border_right + " - " +
        variables.picard_border_gap + " ) / " +
        variables.picard_border_ratio_factor + ")" ;]]]
      picard_lcars_inner_border_top: >-
        [[[ return "calc((" + variables.picard_border_top + " - " +
        variables.picard_border_gap + ") / 2)";]]]
      picard_lcars_inner_border_top_right_radius: >-
        [[[ return "calc((" + variables.card_border_top_right_radius + " ) / " +
        variables.card_inner_border_factor +" )";]]]
      picard_lcars_inner_border_factor: 1
      picard_lcars_outer_color: var(--lcars-card-top-color)
      picard_lcars_inner_color: var(--lcars-card-top-color)
    styles:
      card:
        - background-color: transparent
        - height: '[[[ return variables.card_height; ]]]'
        - width: '[[[ return variables.card_width; ]]]'
        - border-top-left-radius: '[[[ return variables.card_border_top_left_radius; ]]]'
        - border-top-right-radius: '[[[ return variables.card_border_top_right_radius; ]]]'
        - border-bottom-left-radius: '[[[ return variables.card_border_bottom_left_radius; ]]]'
        - border-bottom-right-radius: '[[[ return variables.card_border_bottom_right_radius; ]]]'
      custom_fields:
        lcars_outer:
          - position: absolute
          - top: 0
          - right: 0
        lcars_inner:
          - position: absolute
          - top: >-
              [[[ return "calc( (" + variables.picard_lcars_outer_border_top + "
              + " + variables.picard_border_gap + ")  ) "; ]]]
          - right: >-
              [[[ return "calc( (" + variables.picard_lcars_outer_border_right +
              " + " + variables.picard_border_gap + ")  ) "; ]]]
    custom_fields:
      lcars_outer:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-header-right
          variables:
            lcars_color: '[[[ return variables.picard_lcars_outer_color; ]]]'
            card_width: '[[[ return variables.card_width; ]]]'
            card_height: '[[[ return variables.card_height; ]]]'
            card_border_top_right_radius: '[[[ return variables.card_border_top_right_radius; ]]]'
            border_right: '[[[ return variables.picard_lcars_outer_border_right; ]]]'
            border_top: '[[[ return variables.picard_lcars_outer_border_top; ]]]'
            card_border_top_left_radius: 0px
            card_inner_border_factor: '[[[ return variables.card_inner_border_factor; ]]]'
            card_inner_border_width: '[[[ return variables.card_inner_border_width ]]]'
      lcars_inner:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-header-right
          label: '[[[ return variables.card_label; ]]]'
          variables:
            lcars_color: '[[[ return variables.picard_lcars_inner_color; ]]]'
            card_width: '[[[ return variables.card_width; ]]]'
            card_height: '[[[ return variables.card_height; ]]]'
            border_right: '[[[ return variables.picard_lcars_inner_border_right; ]]]'
            border_top: '[[[ return variables.picard_lcars_inner_border_top; ]]]'
            card_border_top_right_radius: >-
              [[[ return variables.picard_lcars_inner_border_top_right_radius;
              ]]]
            card_border_top_left_radius: 0px
            card_inner_border_factor: '[[[ return variables.picard_lcars_inner_border_factor; ]]]'
  custom-button-lcars-footer-picard:
    variables:
      card_height: 100px
      card_width: 400px
      card_label: ' '
      card_border_top_left_radius: 0px !important
      card_border_top_right_radius: 0px !important
      card_border_bottom_left_radius: var(--ha-card-border-radius)
      card_border_bottom_right_radius: 0px !important
      card_inner_border_factor: 1
      picard_border_gap: 4px
      picard_border_ratio_factor: 4
      picard_border_top: 0
      picard_border_left: 180px
      picard_border_bottom: 20px
      picard_border_right: 0
      picard_lcars_outer_border_left: >-
        [[[ return "calc( ((" + variables.picard_border_left + " - " +
        variables.picard_border_gap + ") / " +
        variables.picard_border_ratio_factor + ") * (" +
        variables.picard_border_ratio_factor + " - 1)" + ")";]]]
      picard_lcars_outer_border_bottom: >-
        [[[ return "calc((" + variables.picard_border_bottom + " - " +
        variables.picard_border_gap + ") / 2)";]]]
      picard_lcars_inner_border_left: >-
        [[[ return "calc((" + variables.picard_border_left + " - " +
        variables.picard_border_gap + " ) / " +
        variables.picard_border_ratio_factor + ")" ;]]]
      picard_lcars_inner_border_bottom: >-
        [[[ return "calc((" + variables.picard_border_bottom + " - " +
        variables.picard_border_gap + ") / 2)";]]]
      picard_lcars_inner_border_bottom_left_radius: >-
        [[[ return "calc((" + variables.card_border_bottom_left_radius + " ) / "
        + variables.card_inner_border_factor +" )";]]]
      picard_lcars_inner_border_factor: 1
      picard_lcars_outer_color: var(--lcars-card-bottom-color)
      picard_lcars_inner_color: var(--lcars-card-bottom-color)
    styles:
      card:
        - background-color: transparent
        - height: '[[[ return variables.card_height; ]]]'
        - width: '[[[ return variables.card_width; ]]]'
        - border-top-left-radius: '[[[ return variables.card_border_top_left_radius; ]]]'
        - border-top-right-radius: '[[[ return variables.card_border_top_right_radius; ]]]'
        - border-bottom-left-radius: '[[[ return variables.card_border_bottom_left_radius; ]]]'
        - border-bottom-right-radius: '[[[ return variables.card_border_bottom_right_radius; ]]]'
      custom_fields:
        lcars_outer:
          - position: absolute
          - bottom: 0
          - left: 0
        lcars_inner:
          - position: absolute
          - bottom: >-
              [[[ return "calc( (" + variables.picard_lcars_outer_border_bottom
              + " + " + variables.picard_border_gap + ")  ) "; ]]]
          - left: >-
              [[[ return "calc( (" + variables.picard_lcars_outer_border_left +
              " + " + variables.picard_border_gap + ")  ) "; ]]]
    custom_fields:
      lcars_outer:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-footer
          variables:
            lcars_color: '[[[ return variables.picard_lcars_outer_color; ]]]'
            card_width: '[[[ return variables.card_width; ]]]'
            card_height: '[[[ return variables.card_height; ]]]'
            card_border_bottom_left_radius: '[[[ return variables.card_border_bottom_left_radius; ]]]'
            border_left: '[[[ return variables.picard_lcars_outer_border_left; ]]]'
            border_bottom: '[[[ return variables.picard_lcars_outer_border_bottom; ]]]'
            card_border_bottom_right_radius: 0px
            card_inner_border_factor: '[[[ return variables.card_inner_border_factor; ]]]'
      lcars_inner:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-footer
          label: '[[[ return variables.card_label; ]]]'
          variables:
            lcars_color: '[[[ return variables.picard_lcars_inner_color; ]]]'
            card_width: '[[[ return variables.card_width; ]]]'
            card_height: '[[[ return variables.card_height; ]]]'
            border_left: '[[[ return variables.picard_lcars_inner_border_left; ]]]'
            border_bottom: '[[[ return variables.picard_lcars_inner_border_bottom; ]]]'
            card_border_bottom_left_radius: >-
              [[[ return variables.picard_lcars_inner_border_bottom_left_radius;
              ]]]
            card_border_bottom_right_radius: 0px
            card_inner_border_factor: '[[[ return variables.picard_lcars_inner_border_factor; ]]]'
  custom-button-lcars-picard-vertical:
    variables:
      card_height: 60px
      card_width: 400px
      card_border_top_left_radius: 0px !important
      card_border_top_right_radius: 0px !important
      card_border_bottom_left_radius: 0px !important
      card_border_bottom_right_radius: 0px !important
      card_inner_border_factor: 1
      picard_border_gap: 10px
      picard_border_ratio_factor: 2
      picard_lcars_1_label: ' '
      picard_lcars_2_label: ' '
      picard_lcars_1_color: var(--lcars-card-top-color)
      picard_lcars_2_color: var(--lcars-card-top-color)
      picard_lcars_1_height: '[[[ return variables.card_height; ]]]'
      picard_lcars_2_height: '[[[ return variables.card_height; ]]]'
      picard_lcars_1_width: null
      picard_lcars_2_width: null
      z_picard_lcars_1_width: >-
        [[[ return variables.picard_lcars_1_width || "calc((" +
        variables.card_width + " - " + variables.picard_border_gap + ") /2)";
        ]]]
      z_picard_lcars_2_width: >-
        [[[ return variables.picard_lcars_2_width || "calc((" +
        variables.card_width + " - " + variables.picard_border_gap + ") /2)";
        ]]]
    styles:
      card:
        - background-color: transparent
        - height: '[[[ return variables.card_height; ]]]'
        - width: '[[[ return variables.card_width; ]]]'
        - border-top-left-radius: '[[[ return variables.card_border_top_left_radius; ]]]'
        - border-top-right-radius: '[[[ return variables.card_border_top_right_radius; ]]]'
        - border-bottom-left-radius: '[[[ return variables.card_border_bottom_left_radius; ]]]'
        - border-bottom-right-radius: '[[[ return variables.card_border_bottom_right_radius; ]]]'
      custom_fields:
        lcars_1:
          - position: absolute
          - top: 0
          - left: 0
        lcars_2:
          - position: absolute
          - top: 0
          - right: 0
    custom_fields:
      lcars_1:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-button-picard-filled
          show_label: true
          label: '[[[ return variables.picard_lcars_1_label; ]]]'
          variables:
            card_inactive_background_color: '[[[ return variables.picard_lcars_1_color; ]]]'
            card_width: '[[[ return variables.z_picard_lcars_1_width; ]]]'
            card_height: '[[[ return variables.picard_lcars_1_height; ]]]'
            card_min_height: '[[[ return variables.picard_lcars_1_height; ]]]'
      lcars_2:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-button-picard-filled
          show_label: true
          label: '[[[ return variables.picard_lcars_2_label; ]]]'
          variables:
            card_inactive_background_color: '[[[ return variables.picard_lcars_2_color; ]]]'
            card_width: '[[[ return variables.z_picard_lcars_2_width; ]]]'
            card_height: '[[[ return variables.picard_lcars_2_height; ]]]'
            card_min_height: '[[[ return variables.picard_lcars_2_height; ]]]'
  custom-button-lcars-picard-horizontal:
    variables:
      card_height: 60px
      card_width: 400px
      card_border_top_left_radius: 0px !important
      card_border_top_right_radius: 0px !important
      card_border_bottom_left_radius: 0px !important
      card_border_bottom_right_radius: 0px !important
      card_inner_border_factor: 1
      picard_border_gap: 5px
      picard_border_ratio_factor: 2
      picard_lcars_1_label: ' '
      picard_lcars_2_label: ' '
      picard_lcars_1_color: var(--lcars-card-top-color)
      picard_lcars_2_color: var(--lcars-card-top-color)
      picard_lcars_1_height: null
      picard_lcars_2_height: null
      picard_lcars_1_width: '[[[ return variables.card_width; ]]]'
      picard_lcars_2_width: '[[[ return variables.card_width; ]]]'
      z_picard_lcars_1_height: >-
        [[[ return variables.picard_lcars_1_height || "calc((" +
        variables.card_height + " - " + variables.picard_border_gap + ") /2)";
        ]]]
      z_picard_lcars_2_height: >-
        [[[ return variables.picard_lcars_2_height || "calc((" +
        variables.card_height + " - " + variables.picard_border_gap + ") /2)";
        ]]]
    styles:
      card:
        - background-color: transparent
        - height: '[[[ return variables.card_height; ]]]'
        - width: '[[[ return variables.card_width; ]]]'
        - border-top-left-radius: '[[[ return variables.card_border_top_left_radius; ]]]'
        - border-top-right-radius: '[[[ return variables.card_border_top_right_radius; ]]]'
        - border-bottom-left-radius: '[[[ return variables.card_border_bottom_left_radius; ]]]'
        - border-bottom-right-radius: '[[[ return variables.card_border_bottom_right_radius; ]]]'
      custom_fields:
        lcars_1:
          - position: absolute
          - top: 0
          - left: 0
        lcars_2:
          - position: absolute
          - bottom: 0
          - left: 0
    custom_fields:
      lcars_1:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-button-picard-filled
          show_label: true
          label: '[[[ return variables.picard_lcars_1_label; ]]]'
          variables:
            card_inactive_background_color: '[[[ return variables.picard_lcars_1_color; ]]]'
            card_width: '[[[ return variables.picard_lcars_1_width; ]]]'
            card_height: '[[[ return variables.z_picard_lcars_1_height; ]]]'
            card_min_height: '[[[ return variables.z_picard_lcars_height; ]]]'
      lcars_2:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-button-picard-filled
          show_label: true
          label: '[[[ return variables.picard_lcars_2_label; ]]]'
          variables:
            card_inactive_background_color: '[[[ return variables.picard_lcars_2_color; ]]]'
            card_width: '[[[ return variables.picard_lcars_2_width; ]]]'
            card_height: '[[[ return variables.z_picard_lcars_height; ]]]'
            card_min_height: '[[[ return variables.z_picard_lcars_2_height; ]]]'
  custom-button-lcars-footer-picard-right:
    variables:
      card_height: 100px
      card_width: 400px
      card_label: ' '
      card_border_top_left_radius: 0px !important
      card_border_top_right_radius: 0px !important
      card_border_bottom_left_radius: 0px !important
      card_border_bottom_right_radius: var(--ha-card-border-radius)
      card_inner_border_factor: 1
      picard_border_gap: 4px
      picard_border_ratio_factor: 4
      picard_border_top: 0
      picard_border_left: 0
      picard_border_bottom: 20px
      picard_border_right: 180px
      picard_lcars_outer_border_right: >-
        [[[ return "calc( ((" + variables.picard_border_right + " - " +
        variables.picard_border_gap + ") / " +
        variables.picard_border_ratio_factor + ") * (" +
        variables.picard_border_ratio_factor + " - 1)" + ")";]]]
      picard_lcars_outer_border_bottom: >-
        [[[ return "calc((" + variables.picard_border_bottom + " - " +
        variables.picard_border_gap + ") / 2)";]]]
      picard_lcars_inner_border_right: >-
        [[[ return "calc((" + variables.picard_border_right + " - " +
        variables.picard_border_gap + " ) / " +
        variables.picard_border_ratio_factor + ")" ;]]]
      picard_lcars_inner_border_bottom: >-
        [[[ return "calc((" + variables.picard_border_bottom + " - " +
        variables.picard_border_gap + ") / 2)";]]]
      picard_lcars_inner_border_bottom_right_radius: >-
        [[[ return "calc((" + variables.card_border_bottom_right_radius + " ) /
        " + variables.card_inner_border_factor +" )";]]]
      picard_lcars_inner_border_factor: 1
      picard_lcars_outer_color: var(--lcars-card-bottom-color)
      picard_lcars_inner_color: var(--lcars-card-bottom-color)
    styles:
      card:
        - background-color: transparent
        - height: '[[[ return variables.card_height; ]]]'
        - width: '[[[ return variables.card_width; ]]]'
        - border-top-left-radius: '[[[ return variables.card_border_top_left_radius; ]]]'
        - border-top-right-radius: '[[[ return variables.card_border_top_right_radius; ]]]'
        - border-bottom-left-radius: '[[[ return variables.card_border_bottom_left_radius; ]]]'
        - border-bottom-right-radius: '[[[ return variables.card_border_bottom_right_radius; ]]]'
      custom_fields:
        lcars_outer:
          - position: absolute
          - bottom: 0
          - right: 0
        lcars_inner:
          - position: absolute
          - bottom: >-
              [[[ return "calc( (" + variables.picard_lcars_outer_border_bottom
              + " + " + variables.picard_border_gap + ")  ) "; ]]]
          - right: >-
              [[[ return "calc( (" + variables.picard_lcars_outer_border_right +
              " + " + variables.picard_border_gap + ")  ) "; ]]]
    custom_fields:
      lcars_outer:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-footer-right
          variables:
            lcars_color: '[[[ return variables.picard_lcars_outer_color; ]]]'
            card_width: '[[[ return variables.card_width; ]]]'
            card_height: '[[[ return variables.card_height; ]]]'
            card_border_bottom_right_radius: '[[[ return variables.card_border_bottom_right_radius; ]]]'
            border_right: '[[[ return variables.picard_lcars_outer_border_right; ]]]'
            border_bottom: '[[[ return variables.picard_lcars_outer_border_bottom; ]]]'
            card_border_bottom_left_radius: 0px
            card_inner_border_factor: '[[[ return variables.card_inner_border_factor; ]]]'
      lcars_inner:
        card:
          type: custom:button-card
          template:
            - custom-button-lcars-footer-right
          label: '[[[ return variables.card_label; ]]]'
          variables:
            lcars_color: '[[[ return variables.picard_lcars_inner_color; ]]]'
            card_width: '[[[ return variables.card_width; ]]]'
            card_height: '[[[ return variables.card_height; ]]]'
            border_right: '[[[ return variables.picard_lcars_inner_border_right; ]]]'
            border_bottom: '[[[ return variables.picard_lcars_inner_border_bottom; ]]]'
            card_border_bottom_right_radius: >-
              [[[ return
              variables.picard_lcars_inner_border_bottom_right_radius; ]]]
            card_border_bottom_left_radius: 0px
            card_inner_border_factor: '[[[ return variables.picard_lcars_inner_border_factor; ]]]'
views:
  - title: home2
    path: home2
    type: custom:grid-layout
    layout:
      margin: '-4px -4px 0px -4px'
      card_margin: 0
      padding: 0
      grid-template-columns: 220px 923px 300px
      grid-template-rows: 130px 90px 502px 110px 70px
      grid-template-areas: |
        "header-left header header-right"
        "header-left content-panel right-sidebar"
        "left-sidebar content-panel right-sidebar"
        "footer-left content-panel footer-right"
        "footer-left footer footer-right"
      grid-gap: 0px
      width: 1443px
      height: 902px
    cards:
      - type: custom:button-card
        styles:
          card:
            - background: transparent
            - height: 210px
            - width: 1135px
            - border-radius: 0 !important
        custom_fields:
          outer_elbow:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-header-picard
              variables:
                card_height: 210px
                card_width: 300px
                card_inner_border_factor: 1.4
                card_inner_border_width: 50px
                picard_lcars_outer_color: var(--lcars-ui-secondary)
                picard_lcars_inner_color: var(--lcars-ui-primary)
                picard_border_ratio_factor: 1.27
                card_border_top_left_radius: 160px
                picard_border_gap: 5px
                picard_lcars_outer_border_top: 45px
                picard_lcars_inner_border_top: 80px
                picard_lcars_outer_border_left: 45px
                picard_lcars_inner_border_left: 145px
                picard_lcars_inner_border_factor: 2
              show_label: false
              label: |
                [[[ 
                  return html`<elt>TBD - some<br><font color=red>messages about stuff</font> or <font color=blue>just nothing</font></elt>`;
                ]]]
          inner_elbow:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-header-picard
              variables:
                card_height: 210px
                card_width: 1135px
                card_inner_border_factor: 2.8
                card_inner_border_width: 50px
                picard_lcars_outer_color: transparent
                picard_lcars_inner_color: var(--lcars-card-bottom-color)
                picard_border_ratio_factor: 1
                card_border_top_left_radius: 160px
                picard_border_gap: 5px
                picard_lcars_outer_border_top: 129px
                picard_lcars_inner_border_top: 10px
                picard_lcars_outer_border_left: 195px
                picard_lcars_inner_border_left: 10px
                picard_lcars_inner_border_factor: 2
                picard_lcars_inner_border_top_left_radius: 53px
              show_label: false
              label: |
                [[[ 
                  return html`<elt>TBD - some<br><font color=red>messages about stuff</font> or <font color=blue>just nothing</font></elt>`;
                ]]]
        view_layout:
          grid-area: header-left
      - type: custom:layout-card
        layout_type: custom:grid-layout
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
            variables:
              text_justify: center
              font_size: 30px
              font_weight: bold
              text_padding_bottom: 5px
            entity: climate.living_room
            show_state: false
            show_name: false
            show_label: true
            label: |
              [[[
                  const state = states['sensor.home_average_temperature_template'].state;
                  const roundedValue = Math.round(parseFloat(state));
                  const formattedValue = roundedValue.toString().padStart(2, '0');
                  return formattedValue;
              ]]]
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            variables:
              card_active_color: var(--picard-cyan)
            state:
              - id: state_on
                value: HOME
            entity: input_select.lcars_ui_page_selector
            label: home
            tap_action:
              action: call-service
              service: input_select.select_option
              data:
                entity_id: input_select.lcars_ui_page_selector
                option: HOME
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
            variables:
              text_justify: center
              font_size: 30px
              font_weight: bold
              text_padding_bottom: 5px
              text_color_zero: var(--picard-dark-blue)
              text_color_non_zero: var(--picard-blue)
            entity: sensor.lights_on
            show_state: true
            show_label: false
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            variables:
              card_active_color: var(--picard-cyan)
            state:
              - id: state_on
                value: LIGHTS
            entity: input_select.lcars_ui_page_selector
            label: lights
            tap_action:
              action: call-service
              service: input_select.select_option
              data:
                entity_id: input_select.lcars_ui_page_selector
                option: LIGHTS
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
            variables:
              text_justify: center
              font_size: 30px
              font_weight: bold
              text_padding_bottom: 5px
            entity: climate.living_room
            show_state: false
            show_name: false
            show_label: true
            label: |
              [[[
                  const state = states['climate.living_room'].attributes.temperature;
                  const roundedValue = Math.round(parseFloat(state));

                  // Check if the roundedValue is NaN
                  if (isNaN(roundedValue)) {
                    return 'FF';
                  }
                  
                  const formattedValue = roundedValue.toString().padStart(2, '0');
                  return formattedValue;
              ]]]
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            variables:
              card_active_color: var(--picard-cyan)
            state:
              - id: state_on
                value: ENVIRONMENTAL
            entity: input_select.lcars_ui_page_selector
            label: environmental
            tap_action:
              action: call-service
              service: input_select.select_option
              data:
                entity_id: input_select.lcars_ui_page_selector
                option: ENVIRONMENTAL
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled
            label: esc
            tap_action:
              action: navigate
              navigation_path: /dashboard-lcars/scratch2
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled
            variables:
              card_inactive_background_color: var(--picard-dark-gray)
            entity: input_boolean.lcars_ui_debug
            show_state: true
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
            variables:
              text_justify: center
              font_size: 30px
              font_weight: bold
              text_padding_bottom: 5px
              text_color_zero: var(--success-color)
              text_color_non_zero: var(--error-color)
            entity: sensor.contact_sensors_open
            show_state: false
            show_name: false
            show_label: true
            label: |
              [[[
                  const state = states['sensor.contact_sensors_open'].state;
                  const roundedValue = Math.round(parseFloat(state));
                  const formattedValue = roundedValue.toString().padStart(2, '0');
                  return formattedValue;
              ]]]
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            state:
              - id: state_on
                value: SECURITY
            icon: none
            size: 24px
            variables:
              card_active_color: var(--picard-cyan)
              icon_active_color: transparent
              icon_inactive_color: transparent
              icon_active_background_color: var(--picard-blue)
              icon_inactive_background_color: transparent
            entity: input_select.lcars_ui_page_selector
            label: security
            tap_action:
              action: call-service
              service: input_select.select_option
              data:
                entity_id: input_select.lcars_ui_page_selector
                option: SECURITY
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            state:
              - id: state_on
                value: COMMS
            icon: none
            size: 24px
            variables:
              card_active_color: var(--picard-cyan)
              icon_active_color: transparent
              icon_inactive_color: transparent
              icon_active_background_color: var(--picard-blue)
              icon_inactive_background_color: transparent
              state:
                - id: state_on
                  value: COMMS
            entity: input_select.lcars_ui_page_selector
            label: comms
            tap_action:
              action: call-service
              service: input_select.select_option
              data:
                entity_id: input_select.lcars_ui_page_selector
                option: COMMS
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
            variables:
              text_justify: center
              font_size: 30px
              font_weight: bold
              text_padding_bottom: 5px
              text_color_zero: var(--error-color)
              text_color_non_zero: var(--picard-starlight)
            entity: sensor.cats_home
            show_state: false
            show_name: false
            show_label: true
            label: |
              [[[
                  const state = states['sensor.cats_home'].state;
                  const roundedValue = Math.round(parseFloat(state));
                  const formattedValue = roundedValue.toString().padStart(2, '0');
                  return formattedValue;
              ]]]
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            variables:
              card_active_color: var(--picard-cyan)
            state:
              - id: state_on
                value: CATS
            entity: input_select.lcars_ui_page_selector
            label: felines
            tap_action:
              action: call-service
              service: input_select.select_option
              data:
                entity_id: input_select.lcars_ui_page_selector
                option: CATS
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:gap-card
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            variables:
              card_active_color: var(--warning-color)
            state:
              - id: state_on
                value: ENGINEERING
            entity: input_select.lcars_ui_page_selector
            label: engineering
            tap_action:
              action: call-service
              service: input_select.select_option
              data:
                entity_id: input_select.lcars_ui_page_selector
                option: ENGINEERING
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
            variables:
              text_justify: center
              font_size: 30px
              font_weight: bold
              text_padding_bottom: 5px
              text_color_zero: var(--picard-dark-blue)
              text_color_non_zero: var(--picard-blue)
            entity: sensor.lights_on
            show_state: true
            show_label: false
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            state:
              - id: state_on
                value: LIGHTS II
            icon: none
            size: 24px
            variables:
              card_active_color: var(--picard-cyan)
              icon_active_color: transparent
              icon_inactive_color: transparent
              icon_active_background_color: var(--picard-blue)
              icon_inactive_background_color: transparent
            entity: input_select.lcars_ui_page_selector
            label: lights ii
            tap_action:
              action: call-service
              service: input_select.select_option
              data:
                entity_id: input_select.lcars_ui_page_selector
                option: LIGHTS II
            hold_action:
              action: none
            double_tap_action:
              action: none
        layout:
          grid-template-columns: 52px 1fr
          grid-template-rows: auto
          grid-auto-rows: auto
          card_margin: 0
          padding: 0
          grid-area: left-sidebar
          margin: '-4px -4px 0px -4px'
          grid-column-gap: 0px
      - type: custom:button-card
        view_layout:
          grid-area: right-sidebar
        styles:
          card:
            - background: |
                [[[
                  if (states['input_boolean.lcars_ui_debug'].state === 'on') {
                    return 'rgba(0,150,0,0.3)';
                  } else {
                    return 'transparent';
                  }
                ]]]
            - width: 300px
            - height: 586px
            - border-radius: 0px 0px 0px 0px !important
          custom_fields:
            header_elbow:
              - position: absolute
              - top: 15px
              - right: 10px
            header_button:
              - position: absolute
              - top: 15px
              - left: 75px
            footer_elbow:
              - position: absolute
              - right: 10px
              - bottom: 0
            footer_button:
              - position: absolute
              - left: 75px
              - bottom: 0
            trim_right:
              - position: absolute
              - right: 0
            slider_mains:
              - position: absolute
              - top: 75px
              - right: 60px
        custom_fields:
          trim_right:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-picard-vertical
              variables:
                card_height: 592px
                card_width: 20px
                picard_lcars_1_height: 0px
                picard_lcars_2_height: 592px
                picard_lcars_2_color: var(--lcars-ui-secondary)
          header_elbow:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-picard-vertical
              variables:
                card_height: 490px
                card_width: 120px
                picard_border_gap: 5px
                picard_lcars_1_height: 50px
                picard_lcars_2_height: 280px
                picard_lcars_1_width: 100px
                picard_lcars_2_width: 40px
                picard_lcars_1_label: ' '
                picard_lcars_2_label: ' '
          header_button:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-button-picard-filled
              variables:
                card_min_height: 50px
                card_width: 85px
          footer_elbow:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-picard-horizontal
              variables:
                card_height: 280px
                card_width: 85px
                picard_border_gap: 5px
                picard_lcars_1_height: 170px
                picard_lcars_2_height: 130px
                picard_lcars_1_width: 40px
                picard_lcars_2_width: 130px
                picard_lcars_1_label: ' '
                picard_lcars_2_label: ' '
              styles:
                card:
                  - transform: scaleX(-1)
          footer_button:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-button-picard-filled
              variables:
                card_min_height: 130px
                card_width: 125px
          slider_mains:
            do_not_eval: true
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-functions
                - custom-button-lcars-slider
              variables:
                entity: light.living_room_ambient
                card_height: 370px
                card_width: 65px
                meter_button_template: custom-button-lcars-button-picard-filled
                meter_end_color: >-
                  [[[ return variables.__get_light_css_color(variables.entity);
                  ]]]
                meter_start_color: var(--picard-blue)
                meter_button_width: 100px
                meter_button_height: 12px
                meter_button_gap: 8px
                meter_total_steps: 18
                slider_color_mask: rgba(0,0,0,0.85)
      - type: custom:button-card
        view_layout:
          grid-area: footer-right
        styles:
          card:
            - background-color: |
                [[[
                  if (states['input_boolean.lcars_ui_debug'].state === 'on') {
                    return 'rgba(150,0,0,0.3)';
                  } else {
                    return 'transparent';
                  }
                ]]]
            - width: 300px
            - height: 175px
            - border-radius: 0 !important
          custom_fields:
            elbow:
              - position: absolute
              - bottom: 0
              - right: 0
            inner_elbow:
              - position: absolute
              - left: 0px
              - top: 0px
        custom_fields:
          inner_elbow:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-footer-picard-right
              variables:
                card_height: 115px
                card_width: 200px
                card_inner_border_factor: 1
                card_inner_border_width: 50px
                picard_lcars_outer_color: var(--lcars-ui-secondary)
                picard_lcars_inner_color: transparent
                picard_border_ratio_factor: 1
                card_border_bottom_right_radius: 60px
                picard_border_gap: 4px
                picard_lcars_outer_border_bottom: 5px
                picard_lcars_inner_border_bottom: 5px
                picard_lcars_outer_border_right: 125px
                picard_lcars_inner_border_right: 5px
                picard_lcars_inner_border_factor: 1
                picard_lcars_inner_border_bottom_right_radius: 60px
          elbow:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-footer-picard-right
              variables:
                card_height: 175px
                card_width: 500px
                card_border_bottom_right_radius: 80px
                picard_border_gap: 4px
                card_inner_border_factor: 1.15
                card_inner_border_width: 0px
                picard_lcars_inner_color: var(--lcars-card-bottom-color)
                picard_lcars_outer_color: var(--lcars-ui-secondary)
                picard_lcars_outer_border_bottom: 6px
                picard_lcars_inner_border_bottom: 47px
                picard_lcars_outer_border_right: 6px
                picard_lcars_inner_border_right: 85px
                picard_lcars_inner_border_factor: 1.1
      - type: custom:button-card
        view_layout:
          grid-area: footer-left
        styles:
          card:
            - background: transparent
            - height: 175px
            - width: 212px
            - border-radius: 0 !important
          custom_fields:
            left_bar:
              - position: absolute
              - left: 0
              - bottom: 0
            right_bar:
              - position: absolute
              - right: 0
              - bottom: 0
        custom_fields:
          left_bar:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-button-picard-filled
              variables:
                card_height: 175px
                card_width: 45px
                card_inactive_background_color: var(--lcars-ui-secondary)
          right_bar:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-button-picard-filled
              variables:
                card_height: 175px
                card_width: 163px
                card_inactive_background_color: var(--lcars-card-bottom-color)
      - type: custom:button-card
        view_layout:
          grid-area: header
        styles:
          card:
            - background: transparent
            - height: 130px
            - width: 923px
            - border-radius: 0 !important
          custom_fields:
            button_grid:
              - position: absolute
              - left: 85px
              - top: 0px
        custom_fields:
          button_grid:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-button-grid
              variables:
                num_cols: 4
                num_rows: 2
                grid_template_columns: 180px 180px 180px 275px
                card_width: 923px
                card_height: 130px
                buttons:
                  - entity: person.dexter
                    label: the dex
                    template:
                      - custom-button-lcars-button-picard-filled
                      - custom-button-animate-press
                    state:
                      - id: state_on
                        value: home
                      - id: state_off
                        value: not_home
                    tap_action:
                      action: more-info
                    hold_action:
                      action: none
                    double_tap_action:
                      action: none
                    variables:
                      font_size: 22px
                      card_inactive_background_color: var(--warning-color)
                      card_active_background_color: var(--picard-blue)
                  - entity: person.luna
                    label: luna
                    template:
                      - custom-button-lcars-button-picard-filled
                      - custom-button-lcars-button-picard-label-se
                      - custom-button-animate-press
                    state:
                      - id: state_on
                        value: home
                      - id: state_off
                        value: not_home
                    tap_action:
                      action: more-info
                    hold_action:
                      action: none
                    double_tap_action:
                      action: none
                    variables:
                      card_inactive_background_color: var(--lcars-ui-secondary)
                      card_active_background_color: var(--warning-color)
                  - show_icon: true
                    icon: none
                    size: 24px
                    variables:
                      icon_active_color: transparent
                      icon_inactive_color: transparent
                      icon_active_background_color: var(--picard-blue)
                      icon_inactive_background_color: transparent
                      card_active_color: var(--picard-green)
                      card_inactive_color: var(--error-color)
                      card_inactive_background_color: var(--lcars-ui-secondary)
                      card_active_background_color: var(--picard-starlight)
                      lcars_color: var(--error-color)
                      card_width: 180px
                      card_min_height: 45px
                    entity: input_boolean.enable_verbal_notifications
                    label: tts alerts
                  - entity: switch.adguard_home_protection
                    label: ad-guard
                    variables:
                      card_width: 275px
                      card_active_background_color: var(--lcars-ui-secondary)
                      card_inactive_background_color: var(--error-color)
                  - entity: person.dexter
                    show_state: true
                    show_label: false
                    tap_action:
                      action: more-info
                    hold_action:
                      action: none
                    double_tap_action:
                      action: none
                    variables:
                      card_height: 80px
                  - variables:
                      card_height: 80px
                  - variables:
                      card_height: 80px
                  - variables:
                      card_width: 275px
                      card_height: 80px
      - type: custom:button-card
        view_layout:
          grid-area: header-right
        styles:
          card:
            - background: transparent
            - width: 300px
            - height: 130px
            - border-radius: 0 !important
          custom_fields:
            clock:
              - position: absolute
              - top: 10px
              - right: 5px
              - width: 315px
              - height: 115px
        custom_fields:
          outer_elbow:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-header-picard-right
              variables:
                card_height: 130px
                card_width: 300px
                card_inner_border_factor: 1.4
                card_inner_border_width: 50px
                picard_lcars_outer_color: var(--lcars-ui-secondary)
                picard_lcars_inner_color: transparent
                picard_border_ratio_factor: 1.27
                card_border_top_right_radius: 50px
                picard_border_gap: 5px
                picard_lcars_outer_border_top: 6px
                picard_lcars_inner_border_top: 80px
                picard_lcars_outer_border_right: 6px
                picard_lcars_inner_border_right: 145px
                picard_lcars_inner_border_factor: 2
          clock:
            card:
              type: custom:clock-weather-card
              entity: weather.home
              sun_entity: true
              weather_icon_type: line
              forecast_rows: 0
              time_format: 24
              hourly_forecast: false
              hide_today_section: false
              hide_forecast_section: true
              time_pattern: HH:mm:ss
              date_pattern: yyyy-MM-dd [cccc]
              temperature_sensor: sensor.patio_sensor_temperature
              humidity_sensor: sensor.patio_sensor_humidity
              show_humidity: false
              card_mod:
                style: |
                  ha-card {
                    background: none !important;
                    color: var(--picard-blue)
                    
                  }
                  .card-content {
                    padding-top: 0;
                    padding-bottom: 0;
                    padding-right: 0;
                  }
      - square: false
        type: grid
        columns: 1
        cards:
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: unavailable
            card:
              type: custom:button-card
              styles:
                card:
                  - background-color: |
                      [[[
                        if (states['input_boolean.lcars_ui_debug'].state === 'on') {
                          return 'rgba(0,0,175,0.3)';
                        } else {
                          return 'transparent';
                        }
                      ]]]
                  - height: 702px
                  - width: 1155px
                  - border-radius: 0 !important
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: HOME
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-functions
              variables:
                entities:
                  - light.living_room_ambient
                  - light.corner_lamp
                  - light.kitchen
                  - light.bathroom_lights
                  - light.bedroom
                  - light.office_lights
              styles:
                card:
                  - background-color: |
                      [[[
                        if (states['input_boolean.lcars_ui_debug'].state === 'on') {
                          return 'rgba(0,0,175,0.3)';
                        } else {
                          return 'transparent';
                        }
                      ]]]
                  - height: 702px
                  - width: 923px
                  - border-radius: 0 !important
                custom_fields:
                  horizon_card:
                    - position: absolute
                    - bottom: 30px
                    - left: 30px
                  slider_grid:
                    - position: absolute
                    - top: 50px
                    - left: 50px
                  slider_buttons:
                    - position: absolute
                    - top: 350px
                    - left: 40px
                  test_slider:
                    - position: absolute
                    - top: 440px
                    - left: 40px
              custom_fields:
                horizon_card:
                  card:
                    type: custom:horizon-card
                    moon: true
                    elevation: 77
                    fields:
                      azimuth: true
                      elevation: true
                      moonrise: true
                      moonset: true
                      moon_phase: true
                    card_mod:
                      style: |
                        ha-card {
                          background: none
                        }
                test_slider:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-functions
                      - custom-button-lcars-slider-horizontal
                    variables:
                      entity: light.living_room_ambient
                      meter_button_template: custom-button-lcars-button-picard-filled
                      meter_end_color: >-
                        [[[ return
                        variables.__get_light_css_color(variables.entity); ]]]
                      meter_start_color: var(--picard-blue)
                      slider_color_mask: rgba(0,0,0,0.85)
                slider_grid:
                  card:
                    type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: repeat(6,100px)
                      grid-auto-rows: auto
                      grid-gap: 50px
                      card_margin: 0
                      padding: 0
                      margin: '-4px -4px 0px -4px'
                    cards:
                      - type: custom:button-card
                        template:
                          - custom-button-lcars-functions
                          - custom-button-lcars-slider
                        variables:
                          entity: '[[[ return variables.entities[0] ]]]'
                          card_height: 300px
                          card_width: 100px
                          meter_end_color: >-
                            [[[ return
                            variables.__get_light_css_color(variables.entities[0]);
                            ]]]
                          meter_start_color: var(--picard-blue)
                          meter_button_width: 100px
                          meter_button_height: 20px
                          meter_button_gap: 5px
                          meter_total_steps: 12
                          slider_color_mask: rgba(0,0,0,0.85)
                      - type: custom:button-card
                        template: custom-button-lcars-slider
                        variables:
                          entity: '[[[ return variables.entities[1] ]]]'
                          card_height: 300px
                          card_width: 100px
                          meter_end_color: >-
                            [[[ return
                            variables.__get_light_css_color(variables.entities[1]);
                            ]]]
                          meter_start_color: var(--picard-blue)
                          meter_button_width: 100px
                          meter_button_height: 20px
                          meter_button_gap: 5px
                          meter_total_steps: 12
                          slider_color_mask: rgba(0,0,0,0.85)
                      - type: custom:button-card
                        template: custom-button-lcars-slider
                        variables:
                          entity: '[[[ return variables.entities[2] ]]]'
                          card_height: 300px
                          card_width: 100px
                          meter_end_color: >-
                            [[[ return
                            variables.__get_light_css_color(variables.entities[2]);
                            ]]]
                          meter_start_color: var(--picard-blue)
                          meter_button_width: 100px
                          meter_button_height: 20px
                          meter_button_gap: 5px
                          meter_total_steps: 12
                          slider_color_mask: rgba(0,0,0,0.85)
                      - type: custom:button-card
                        template: custom-button-lcars-slider
                        variables:
                          entity: '[[[ return variables.entities[3] ]]]'
                          card_height: 300px
                          card_width: 100px
                          meter_end_color: >-
                            [[[ return
                            variables.__get_light_css_color(variables.entities[3]);
                            ]]]
                          meter_start_color: var(--picard-blue)
                          meter_button_width: 100px
                          meter_button_height: 20px
                          meter_button_gap: 5px
                          meter_total_steps: 12
                          slider_color_mask: rgba(0,0,0,0.85)
                      - type: custom:button-card
                        template: custom-button-lcars-slider
                        variables:
                          entity: '[[[ return variables.entities[4] ]]]'
                          card_height: 300px
                          card_width: 100px
                          meter_end_color: >-
                            [[[ return
                            variables.__get_light_css_color(variables.entities[4]);
                            ]]]
                          meter_start_color: var(--picard-blue)
                          meter_button_width: 100px
                          meter_button_height: 20px
                          meter_button_gap: 5px
                          meter_total_steps: 12
                          slider_color_mask: rgba(0,0,0,0.85)
                      - type: custom:button-card
                        template: custom-button-lcars-slider
                        variables:
                          entity: '[[[ return variables.entities[5] ]]]'
                          card_height: 300px
                          card_width: 100px
                          meter_end_color: >-
                            [[[ return
                            variables.__get_light_css_color(variables.entities[5]);
                            ]]]
                          meter_start_color: var(--picard-blue)
                          meter_button_width: 100px
                          meter_button_height: 20px
                          meter_button_gap: 5px
                          meter_total_steps: 12
                          slider_color_mask: rgba(0,0,0,0.85)
                slider_buttons:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-functions
                      - custom-button-lcars-button-grid
                    variables:
                      num_cols: 6
                      num_rows: 1
                      button_template:
                        - custom-button-lcars-lozenge
                      button_width: 120px
                      button_gap: 30px
                      buttons:
                        - entity: '[[[ return variables.entities[0] ]]]'
                          label: LR-AMB
                          variables:
                            card_active_background_color: >-
                              [[[ return
                              variables.__get_light_css_color(variables.entities[0]);
                              ]]]
                        - entity: '[[[ return variables.entities[1] ]]]'
                          label: corner
                          variables:
                            card_active_background_color: >-
                              [[[ return
                              variables.__get_light_css_color(variables.entities[1]);
                              ]]]
                        - entity: '[[[ return variables.entities[2] ]]]'
                          label: kitchen
                          variables:
                            card_active_background_color: >-
                              [[[ return
                              variables.__get_light_css_color(variables.entities[2]);
                              ]]]
                        - entity: '[[[ return variables.entities[3] ]]]'
                          label: bathroom
                          variables:
                            card_active_background_color: >-
                              [[[ return
                              variables.__get_light_css_color(variables.entities[3]);
                              ]]]
                        - entity: '[[[ return variables.entities[4] ]]]'
                          label: bedroom
                          variables:
                            card_active_background_color: >-
                              [[[ return
                              variables.__get_light_css_color(variables.entities[4]);
                              ]]]
                        - entity: '[[[ return variables.entities[5] ]]]'
                          label: office
                          variables:
                            card_active_background_color: >-
                              [[[ return
                              variables.__get_light_css_color(variables.entities[5]);
                              ]]]
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: SECURITY
            card:
              type: custom:button-card
              styles:
                card:
                  - background-color: |
                      [[[
                        if (states['input_boolean.lcars_ui_debug'].state === 'on') {
                          return 'rgba(150,0,0,0.3)';
                        } else {
                          return 'transparent';
                        }
                      ]]]
                  - height: 702px
                  - width: 1155px
                  - border-radius: 0 !important
                custom_fields:
                  frigate:
                    - width: 700px
                    - position: absolute
                    - left: 40px
                    - top: 50px
                    - z-index: -1
                  notification_panel:
                    - position: absolute
                    - left: 790px
                    - top: 95px
                  front_door_panel:
                    - position: absolute
                    - left: 790px
                    - top: 170px
                  living_room_panel:
                    - position: absolute
                    - left: 790px
                    - top: 250px
                  office_panel:
                    - position: absolute
                    - left: 790px
                    - top: 330px
              custom_fields:
                notification_panel:
                  card:
                    type: custom:button-card
                    styles:
                      card:
                        - background: blue
                        - width: 360px
                        - height: 55px
                        - border-radius: 0 !important
                      custom_fields:
                        switch_panel:
                          - position: absolute
                          - right: 0px
                          - top: 10px
                        header:
                          - position: absolute
                          - right: 0px
                          - top: 0px
                    custom_fields:
                      header:
                        card:
                          type: custom:button-card
                          template:
                            - custom-button-lcars-button-picard-filled
                          label: Notifications
                          entity: automation.notifications_android_tv_patio_all_motion
                          variables:
                            card_height: 55px
                            card_min_height: 55px
                            card_width: 360px
                            font_size: 22px
                            font_weight: normal
                            text_justify: right
                            text_padding_right: 210px
                            card_active_background_color: var(--lcars-ui-primary)
                            card_inactive_background_color: var(--error-color)
                            text_color_off: black
                            icon_active_color: transparent
                            icon_inactive_color: transparent
                            icon_active_background_color: var(--picard-blue)
                            icon_inactive_background_color: red
                          tap_action:
                            action: none
                          hold_action:
                            action: none
                          double_tap_action:
                            action: none
                      switch_panel:
                        card:
                          type: custom:button-card
                          styles:
                            card:
                              - border-radius: 0px !important
                              - width: 195px
                              - height: 45px
                              - background: black
                            custom_fields:
                              buttons:
                                - position: absolute
                                - top: 5px
                                - left: 10px
                          custom_fields:
                            buttons:
                              card:
                                type: horizontal-stack
                                cards:
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--error-color)
                                      icon_active_background_color: var(--picard-cyan)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    entity: >-
                                      automation.notifications_android_tv_patio_all_motion
                                    icon: mdi:television
                                    show_icon: true
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--error-color)
                                      icon_active_background_color: var(--picard-cyan)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 50px
                                    entity: automation.test_frigate_notification
                                    icon: mdi:cellphone
                                    show_icon: true
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--warning-color)
                                      icon_active_background_color: var(--picard-blue)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    entity: automation.notifications_patio_gate
                                    icon: mdi:gate-alert
                                    show_icon: true
                                    state:
                                      - id: state_on
                                        value: 'on'
                                      - id: state_off
                                        value: 'off'
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--picard-dark-blue)
                                      icon_active_background_color: var(--picard-blue)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    show_icon: true
                                    entity: null
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                front_door_panel:
                  card:
                    type: custom:button-card
                    styles:
                      card:
                        - background: blue
                        - width: 360px
                        - height: 55px
                        - border-radius: 0 !important
                      custom_fields:
                        switch_panel:
                          - position: absolute
                          - right: 0px
                          - top: 10px
                        header:
                          - position: absolute
                          - right: 0px
                          - top: 0px
                    custom_fields:
                      header:
                        card:
                          type: custom:button-card
                          template:
                            - custom-button-lcars-button-picard-filled
                          label: front door
                          entity: switch.front_door_recordings
                          variables:
                            card_height: 55px
                            card_min_height: 55px
                            card_width: 360px
                            font_size: 22px
                            font_weight: normal
                            text_justify: right
                            text_padding_right: 210px
                            card_active_background_color: var(--picard-starlight)
                            card_inactive_background_color: var(--error-color)
                            text_color_off: black
                            icon_active_color: transparent
                            icon_inactive_color: transparent
                            icon_active_background_color: var(--picard-blue)
                            icon_inactive_background_color: red
                          tap_action:
                            action: none
                          hold_action:
                            action: none
                          double_tap_action:
                            action: none
                      switch_panel:
                        card:
                          type: custom:button-card
                          styles:
                            card:
                              - border-radius: 0px !important
                              - width: 195px
                              - height: 45px
                              - background: black
                            custom_fields:
                              buttons:
                                - position: absolute
                                - top: 5px
                                - left: 10px
                          custom_fields:
                            buttons:
                              card:
                                type: horizontal-stack
                                cards:
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--error-color)
                                      icon_active_background_color: var(--picard-cyan)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    entity: switch.front_door_recordings
                                    show_icon: true
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--error-color)
                                      icon_active_background_color: var(--picard-cyan)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 50px
                                    entity: switch.front_door_detect
                                    show_icon: true
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--warning-color)
                                      icon_active_background_color: var(--picard-blue)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    entity: switch.front_door_snapshots
                                    show_icon: true
                                    state:
                                      - id: state_on
                                        value: 'on'
                                      - id: state_off
                                        value: 'off'
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--picard-dark-blue)
                                      icon_active_background_color: var(--picard-blue)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    show_icon: true
                                    entity: switch.front_door_push_notifications
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                office_panel:
                  card:
                    type: custom:button-card
                    styles:
                      card:
                        - background: blue
                        - width: 360px
                        - height: 55px
                        - border-radius: 0 !important
                      custom_fields:
                        switch_panel:
                          - position: absolute
                          - right: 0px
                          - top: 10px
                        header:
                          - position: absolute
                          - right: 0px
                          - top: 0px
                    custom_fields:
                      header:
                        card:
                          type: custom:button-card
                          template:
                            - custom-button-lcars-button-picard-filled
                          label: office
                          entity: switch.office_recordings
                          variables:
                            card_height: 55px
                            card_min_height: 55px
                            card_width: 360px
                            font_size: 22px
                            font_weight: normal
                            text_justify: right
                            text_padding_right: 210px
                            card_active_background_color: var(--lcars-ui-secondary)
                            card_inactive_background_color: var(--lcars-ui-tertiary)
                            text_color_off: black
                            icon_active_color: transparent
                            icon_inactive_color: transparent
                            icon_active_background_color: var(--picard-blue)
                            icon_inactive_background_color: red
                          tap_action:
                            action: none
                          hold_action:
                            action: none
                          double_tap_action:
                            action: none
                      switch_panel:
                        card:
                          type: custom:button-card
                          styles:
                            card:
                              - border-radius: 0px !important
                              - width: 195px
                              - height: 45px
                              - background: black
                            custom_fields:
                              buttons:
                                - position: absolute
                                - top: 5px
                                - left: 10px
                          custom_fields:
                            buttons:
                              card:
                                type: horizontal-stack
                                cards:
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--error-color)
                                      icon_active_background_color: var(--picard-cyan)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    entity: switch.office_recordings
                                    show_icon: true
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--error-color)
                                      icon_active_background_color: var(--picard-cyan)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 50px
                                    entity: switch.office_detect
                                    show_icon: true
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--warning-color)
                                      icon_active_background_color: var(--picard-blue)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    entity: switch.office_snapshots
                                    show_icon: true
                                    state:
                                      - id: state_on
                                        value: 'on'
                                      - id: state_off
                                        value: 'off'
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                living_room_panel:
                  card:
                    type: custom:button-card
                    styles:
                      card:
                        - background: transparent
                        - width: 360px
                        - height: 55px
                        - border-radius: 0 !important
                      custom_fields:
                        switch_panel:
                          - position: absolute
                          - right: 0px
                          - top: 10px
                        header:
                          - position: absolute
                          - right: 0px
                          - top: 0px
                    custom_fields:
                      header:
                        card:
                          type: custom:button-card
                          template:
                            - custom-button-lcars-button-picard-filled
                          label: living room
                          entity: switch.living_room_recordings
                          variables:
                            card_height: 55px
                            card_min_height: 55px
                            card_width: 360px
                            font_size: 22px
                            font_weight: normal
                            text_justify: right
                            text_padding_right: 210px
                            card_active_background_color: var(--lcars-ui-secondary)
                            card_inactive_background_color: var(--lcars-ui-tertiary)
                            text_color_off: black
                            icon_active_color: transparent
                            icon_inactive_color: transparent
                          tap_action:
                            action: none
                          hold_action:
                            action: none
                          double_tap_action:
                            action: none
                      switch_panel:
                        card:
                          type: custom:button-card
                          styles:
                            card:
                              - border-radius: 0px !important
                              - width: 195px
                              - height: 45px
                              - background: black
                            custom_fields:
                              buttons:
                                - position: absolute
                                - top: 5px
                                - left: 10px
                          custom_fields:
                            buttons:
                              card:
                                type: horizontal-stack
                                cards:
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--error-color)
                                      icon_active_background_color: var(--picard-cyan)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    entity: switch.living_room_recordings
                                    show_icon: true
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--error-color)
                                      icon_active_background_color: var(--picard-cyan)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 50px
                                    entity: switch.living_room_detect
                                    show_icon: true
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--warning-color)
                                      icon_active_background_color: var(--picard-blue)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    entity: switch.living_room_snapshots
                                    show_icon: true
                                    state:
                                      - id: state_on
                                        value: 'on'
                                      - id: state_off
                                        value: 'off'
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                                  - type: custom:button-card
                                    template:
                                      - >-
                                        custom-button-lcars-button-picard-filled-dense
                                    variables:
                                      card_width: 40px
                                      card_min_height: 40px
                                      icon_inactive_background_color: var(--picard-dark-blue)
                                      icon_active_background_color: var(--picard-blue)
                                      card_border_top_left_radius: 10px
                                      card_border_top_right_radius: 10px
                                      card_border_bottom_left_radius: 10px
                                      card_border_bottom_right_radius: 10px
                                    styles:
                                      icon:
                                        - border: none !important
                                    size: 40px
                                    show_icon: true
                                    entity: switch.living_room_push_notifications
                                    tap_action:
                                      action: toggle
                                    hold_action:
                                      action: more-info
                                    double_tap_action:
                                      action: none
                frigate:
                  card:
                    type: custom:frigate-card
                    cameras:
                      - go2rtc:
                          modes:
                            - webrtc
                          stream: front_door_sub
                        camera_entity: camera.front_door
                        title: Front Door
                        live_provider: go2rtc
                        dependencies:
                          cameras:
                            - front_door_hd
                      - hide: true
                        camera_entity: camera.front_door
                        id: front_door_hd
                        title: Front Door HD
                        go2rtc:
                          stream: front_door
                          modes:
                            - webrtc
                        live_provider: go2rtc
                      - go2rtc:
                          modes:
                            - webrtc
                          stream: living_room_sub
                        camera_entity: camera.living_room
                        title: Living Room
                        live_provider: go2rtc
                        dependencies:
                          cameras:
                            - living_room_hd
                      - hide: true
                        camera_entity: camera.living_room
                        id: living_room_hd
                        title: Living Room HD
                        go2rtc:
                          stream: living_room
                          modes:
                            - webrtc
                        live_provider: go2rtc
                      - go2rtc:
                          modes:
                            - webrtc
                          stream: office_sub
                        camera_entity: camera.office
                        title: Office
                        live_provider: go2rtc
                        dependencies:
                          cameras:
                            - office_hd
                      - hide: true
                        camera_entity: camera.office
                        id: office_hd
                        title: Office HD
                        go2rtc:
                          stream: office
                          modes:
                            - webrtc
                        live_provider: go2rtc
                    view:
                      scan:
                        enabled: false
                      default: live
                      dark_mode: 'on'
                    live:
                      preload: false
                      controls:
                        thumbnails:
                          mode: below
                          show_details: false
                        timeline:
                          mode: none
                          style: stack
                        title:
                          duration_seconds: 5
                          mode: popup-bottom-right
                    timeline:
                      controls:
                        thumbnails:
                          mode: below
                      show_recordings: false
                    menu:
                      style: hidden
                      position: top
                      alignment: top
                      buttons:
                        mute:
                          enabled: true
                        substreams:
                          icon: mdi:high-definition-box
                        recordings:
                          enabled: true
                        microphone:
                          enabled: true
                    elements:
                      - type: custom:frigate-card-conditional
                        conditions:
                          camera:
                            - camera.front_door
                        elements:
                          - type: custom:frigate-card-menu-submenu
                            priority: 100
                            icon: mdi:cog
                            items:
                              - title: Detect
                                entity: switch.front_door_detect
                                tap_action:
                                  action: toggle
                              - title: Recordings
                                entity: switch.front_door_recordings
                                tap_action:
                                  action: toggle
                              - title: Snapshots
                                entity: switch.front_door_snapshots
                                tap_action:
                                  action: toggle
                      - type: custom:frigate-card-conditional
                        conditions:
                          camera:
                            - camera.living_room
                        elements:
                          - type: custom:frigate-card-menu-submenu
                            priority: 100
                            icon: mdi:cog
                            items:
                              - title: Detect
                                entity: switch.living_room_detect
                                tap_action:
                                  action: toggle
                              - title: Recordings
                                entity: switch.living_room_recordings
                                tap_action:
                                  action: toggle
                              - title: Snapshots
                                entity: switch.living_room_snapshots
                                tap_action:
                                  action: toggle
                    media_gallery:
                      controls:
                        thumbnails:
                          show_details: false
                          size: 75
                          show_timeline_control: false
                          show_download_control: false
                          show_favorite_control: false
                        filter:
                          mode: none
                    media_viewer:
                      controls:
                        thumbnails:
                          mode: below
                        timeline:
                          mode: below
                          style: stack
                    dimensions:
                      aspect_ratio_mode: dynamic
                    view_layout:
                      position: main
                    card_mod:
                      style: |
                        ha-card {
                          background: none !important;
                        }
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: LIGHTS
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              cards:
                - type: horizontal-stack
                  cards:
                    - square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          cards:
                            - type: custom:gap-card
                            - type: custom:button-card
                              template: custom-button-lcars-slider
                              variables:
                                entity: light.desk
                                card_height: 155px
                                card_width: 60px
                                button_width: 60px
                                button_height: 10px
                                button_gap: 5px
                            - type: custom:my-slider-v2
                              entity: light.corner_lamp
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.kitchen
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.dining
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.hallway
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                          layout:
                            grid-template-columns: 30px repeat(5, 1fr) 30px
                            grid-template-rows: 1fr
                            grid-auto-rows: 1fr
                            margin: '-4px -4px 0px -4px'
                            card_margin: 0
                            padding: 0
                  view_layout:
                    grid-area: child-main-top
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
                - type: horizontal-stack
                  cards:
                    - type: custom:layout-card
                      layout_type: custom:grid-layout
                      layout:
                        grid-template-columns: 30px repeat(5, 2fr) 30px
                        grid-template-rows: auto
                        grid-auto-rows: auto
                        margin: '-4px -4px 0px -4px'
                        card_margin: 0
                        padding: 0
                      margin: '-4px -4px 0px -4px'
                      card_margin: 0
                      padding: 0
                      cards:
                        - type: custom:gap-card
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-button-picard-filled
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.living_room_ambient'];
                                let cssColor = 'var(--lcars-ui-secondary)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.living_room_ambient
                          label: Living Room
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-button-square
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.corner_lamp'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.corner_lamp
                          label: corner lamp
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.kitchen'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.kitchen
                          label: kitchen
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet-right
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.dining'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.dining
                          label: dining
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.hallway'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.hallway
                          label: hallway
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet-right
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.media_lights'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.media_lights
                          label: media lights
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.fan'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.fan
                          label: LR Fan
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.mirror'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.mirror
                          label: mirror
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.canvas'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.canvas
                          label: canvas
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:gap-card
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet-right
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                          entity: light.front_door
                          label: front door
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.patio_twinkles'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.patio_twinkles
                          label: twinkles
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.bathroom'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.bathroom
                          label: bathroom
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.office'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.office
                          label: Office
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.bedroom'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.bedroom
                          label: Bedroom
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet-right
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.entryway'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.entryway
                          label: entryway
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.patio'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.patio
                          label: patio
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                  view_layout:
                    grid-area: child-main-middle
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
                - type: horizontal-stack
                  cards:
                    - square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          cards:
                            - type: custom:gap-card
                            - type: custom:my-slider-v2
                              entity: light.bathroom
                              mode: brightness
                              flipped: true
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - width: 1fr
                                  - height: 155px
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.office
                              mode: brightness
                              flipped: true
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - width: 1fr
                                  - height: 155px
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.bedroom
                              mode: brightness
                              flipped: true
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - width: 1fr
                                  - height: 155px
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.entryway
                              mode: brightness
                              flipped: true
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - width: 1fr
                                  - height: 155px
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.patio
                              mode: brightness
                              flipped: true
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - width: 1fr
                                  - height: 155px
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                          layout:
                            grid-template-columns: 30px repeat(5, 1fr) 30px
                            grid-template-rows: 1fr
                            grid-auto-rows: 1fr
                            margin: '-4px -4px 0px -4px'
                            card_margin: 0
                            padding: 0
                  view_layout:
                    grid-area: child-main-bottom
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
              layout:
                grid-template-columns: 1fr
                grid-template-rows: 170px 1fr 170px
                grid-template-areas: |
                  "child-main-top"
                  "child-main-middle"
                  "child-main-bottom"
                margin: '-4px -4px 0px -4px'
                card_margin: 0
                padding: 0
            view_layout:
              grid-area: content-panel
              margin: 0px
              padding: 0px
              card_margin: 0px
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: ENGINEERING
            card:
              type: custom:button-card
              styles:
                card:
                  - background-color: |
                      [[[
                        if (states['input_boolean.lcars_ui_debug'].state === 'on') {
                          return 'rgba(0,0,175,0.3)';
                        } else {
                          return 'transparent';
                        }
                      ]]]
                  - height: 702px
                  - width: 1155px
                  - border-radius: 0 !important
                custom_fields:
                  cast_button:
                    - position: absolute
                    - top: 10px
                    - left: 10px
              custom_fields:
                cast_button:
                  card:
                    type: button
                    entity: input_button.lcars_cast_panel
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: ENVIRONMENTAL
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              cards:
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-header
                      variables:
                        border_top: 10px
                        border_left: 35px
                        card_height: 40px
                        card_min_height: 40px
                        lcars_color: var(--lcars-blue)
                        font_weight: bold
                        font_size: 20px
                        text_padding_top: 10px
                      label: ENVIRONMENTAL CONTROL
                    - type: thermostat
                      entity: climate.living_room
                      name: HVAC
                      show_current_as_primary: false
                      features:
                        - type: climate-hvac-modes
                          hvac_modes:
                            - heat
                            - cool
                            - heat_cool
                            - 'off'
                      card_mod:
                        class: middle
                        style: |
                          ha-card.middle {
                            background: none !important;
                          }
                    - type: custom:config-template-card
                      entities:
                        - sensor.living_room_sensor_temperature
                        - sensor.living_room_sensor_humidity
                        - climate.living_room
                      variables:
                        - states['climate.living_room'].state
                      card:
                        type: custom:mini-graph-card
                        entities:
                          - entity: sensor.living_room_sensor_temperature
                            name: Temperature
                            color: ${vars[0]==='heat' ? 'orange':'blue'}
                          - entity: sensor.living_room_sensor_humidity
                            name: Humidity
                            color: var(--green-color)
                            y_axis: secondary
                        hours_to_show: 24
                        line_width: 3
                        font_size: 50
                        animate: true
                        show:
                          name: false
                          icon: false
                          state: false
                          legend: false
                          fill: fade
                        card_mod:
                          class: middle
                          style: |
                            ha-card.middle {
                              background: none !important;
                            }
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-footer
                      variables:
                        border_bottom: 10px
                        border_left: 35px
                        card_height: 70px
                        font_weight: bold
                  view_layout:
                    grid-area: child-main-left
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-header-open
                      variables:
                        border_top: 10px
                        card_height: 40px
                        card_min_height: 40px
                        lcars_color: var(--lcars-blue)
                        font_weight: bold
                        font_size: 20px
                        text_padding_top: 10px
                      label: SENSORS
                    - square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          cards:
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              label: |
                                patio
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-orange)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.patio_sensor_temperature
                              label: |
                                [[[
                                  const state = states['sensor.patio_sensor_temperature'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-green)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.patio_sensor_humidity
                              label: |
                                [[[
                                  const state = states['sensor.patio_sensor_humidity'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:gap-card
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              label: |
                                living room
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-orange)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.living_room_sensor_temperature
                              label: |
                                [[[
                                  const state = states['sensor.living_room_sensor_temperature'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-green)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.living_room_sensor_humidity
                              label: |
                                [[[
                                  const state = states['sensor.living_room_sensor_humidity'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:gap-card
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              label: |
                                office
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-orange)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.office_sensor_temperature
                              label: |
                                [[[
                                  const state = states['sensor.office_sensor_temperature'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-green)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.office_sensor_humidity
                              label: |
                                [[[
                                  const state = states['sensor.office_sensor_humidity'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:gap-card
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              label: |
                                bedroom
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-orange)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.bedroom_sensor_temperature
                              label: |
                                [[[
                                  const state = states['sensor.bedroom_sensor_temperature'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-green)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.bedroom_sensor_humidity
                              label: |
                                [[[
                                  const state = states['sensor.bedroom_sensor_humidity'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:gap-card
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              label: |
                                bathroom
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-orange)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.bathroom_sensor_temperature
                              label: |
                                [[[
                                  const state = states['sensor.bathroom_sensor_temperature'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-green)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.bathroom_sensor_humidity
                              label: |
                                [[[
                                  const state = states['sensor.bathroom_sensor_humidity'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:gap-card
                            - type: custom:gap-card
                          layout:
                            grid-template-columns: 2fr 1fr 1fr 35px
                            grid-template-rows: 45px
                            grid-auto-rows: 45px
                            grid-template-areas: |
                              "count button"
                            margin: '-4px -4px 0px -4px'
                            card_margin: 0
                            padding: 0
                            grid-area: left
                      view_layout:
                        grid-area: left
                        card_margin: 0px 0px 0px 0px
                        margin: 0px 0px 0px 0px
                    - square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          cards:
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-bullet-right
                                - custom-button-animate-press
                              variables:
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: fan.400s
                              label: Air scrub
                              tap_action:
                                action: more-info
                              hold_action:
                                action: toggle
                              double_tap_action:
                                action: toggle
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: white
                                card_active_background_color: var(--lcars-blue)
                                font_size: 40px
                              entity: sensor.400s_pm2_5
                              label: |
                                [[[
                                    const state = states['sensor.400s_pm2_5'].state;
                                    const roundedValue = Math.round(parseFloat(state));
                                    const formattedValue = roundedValue.toString().padStart(2, '0');
                                    return formattedValue;
                                ]]]
                            - type: custom:my-slider-v2
                              entity: fan.400s
                              flipped: false
                              step: 25
                              styles:
                                card:
                                  height: 60px
                                  background: none
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                progress:
                                  background: var(--lcars-blue)
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                              card_mod:
                                class: middle-right
                                style: |
                                  ha-card.middle-right {
                                    background: none !important;
                                  }
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-bullet-right
                                - custom-button-animate-press
                              variables:
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: input_boolean.bathroom_humidity_sensor_bypass
                              label: exhaust [auto]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_non_zero: var(--success-color)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 40px
                              entity: sensor.bathroom_sensor_humidity
                              label: |
                                [[[
                                    const state = states['sensor.bathroom_sensor_humidity'].state;
                                    const roundedValue = Math.round(parseFloat(state));
                                    const formattedValue = roundedValue.toString().padStart(2, '0');
                                    return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-button-square
                                - custom-button-animate-press
                              variables:
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: switch.bathroom_fan
                              label: bath exhaust
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-bullet-right
                                - custom-button-animate-press
                              variables:
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: >-
                                automation.fan_auto_fan_temperature_control_living_room
                              label: LR fan [auto]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 40px
                              entity: input_number.target_temp_living_room
                              label: |
                                [[[
                                    const state = states['input_number.target_temp_living_room'].state;
                                    const roundedValue = Math.round(parseFloat(state));
                                    const formattedValue = roundedValue.toString().padStart(2, '0');
                                    return formattedValue;
                                ]]]
                            - type: custom:my-slider-v2
                              entity: fan.living_room_fan
                              flipped: false
                              step: 33
                              styles:
                                card:
                                  height: 60px
                                  background: none
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                progress:
                                  background: var(--lcars-blue)
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                              card_mod:
                                class: middle-right
                                style: |
                                  ha-card.middle-right {
                                    background: none !important;
                                  }
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-bullet-right
                                - custom-button-animate-press
                              variables:
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: automation.fan_auto_bedroom
                              label: bed fan [auto]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 40px
                              entity: input_number.target_temp_bedroom
                              label: |
                                [[[
                                    const state = states['input_number.target_temp_bedroom'].state;
                                    const roundedValue = Math.round(parseFloat(state));
                                    const formattedValue = roundedValue.toString().padStart(2, '0');
                                    return formattedValue;
                                ]]]
                            - type: custom:my-slider-v2
                              entity: fan.bedroom_fan
                              flipped: false
                              step: 33
                              styles:
                                card:
                                  height: 60px
                                  background: none
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                progress:
                                  background: var(--lcars-blue)
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                              card_mod:
                                class: middle-right
                                style: |
                                  ha-card.middle-right {
                                    background: none !important;
                                  }
                          layout:
                            grid-template-columns: 1fr 65px 1fr
                            grid-template-rows: 70px 70px 70px 30px
                            grid-auto-rows: 20px
                            grid-template-areas: |
                              "count button"
                            margin: '-4px -4px 0px -4px'
                            card_margin: 0
                            padding: 0
                            grid-area: left
                      view_layout:
                        grid-area: left
                        card_margin: 0px 0px 0px 0px
                        margin: 0px 0px 0px 0px
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-footer-open
                      variables:
                        border_bottom: 10px
                        card_height: 50px
                        min_card_height: 50px
                  view_layout:
                    grid-area: child-main-right
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
              layout:
                grid-template-columns: 1fr 1fr
                grid-template-rows: 1fr
                grid-template-areas: |
                  "child-main-left child-main-right"
                margin: '-4px -4px 0px -4px'
                card_margin: 0
                padding: 0
              view_layout:
                grid-area: content-panel
                margin: 0px
                padding: 0px
                card_margin: 0px
        view_layout:
          grid-area: content-panel
      - type: custom:button-card
        view_layout:
          grid-area: footer
        styles:
          card:
            - background-color: |
                [[[
                  if (states['input_boolean.lcars_ui_debug'].state === 'on') {
                    return 'rgba(150,0,150,0.8)';
                  } else {
                    return 'transparent';
                  }
                ]]]
            - height: 65px
            - width: 923px
            - border-radius: 0 !important
          custom_fields:
            trim_top:
              - position: absolute
              - left: 0px
              - top: 0px
            trim_bottom:
              - position: absolute
              - left: 0px
              - bottom: 0px
            button_grid:
              - position: absolute
              - left: 10px
              - top: 10px
        custom_fields:
          trim_top:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-button-picard-filled
              variables:
                card_width: 923px
                card_min_height: 5px
                card_inactive_background_color: var(--lcars-ui-secondary)
          trim_bottom:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-button-picard-filled
              variables:
                card_width: 923px
                card_min_height: 5px
                card_inactive_background_color: var(--lcars-ui-secondary)
          button_grid:
            card:
              type: custom:button-card
              template: custom-button-lcars-button-grid
              variables:
                buttons:
                  - entity: binary_sensor.patio_gate_home_security_intrusion
                    label: patio gate
                    variables:
                      card_inactive_background_color: var(--picard-blue)
                  - entity: binary_sensor.front_door_home_security_intrusion
                    label: front door
                  - entity: binary_sensor.front_window_home_security_intrusion
                    label: front window
                  - entity: binary_sensor.office_window_home_security_intrusion
                    label: office window
                  - entity: binary_sensor.front_window_home_security_intrusion
                    label: bedroom window
                num_cols: 5
                num_rows: 1
                button_width: 160px
                button_height: 45px
                button_gap: 25px
                button_active_color: var(--error-color)
                button_active_background_color: var(--warning-color)
                button_inactive_color: var(--lcars-card-button)
                button_inactive_background_color: var(--lcars-card-button)
                button_lcars_color: null
                button_icon_active_color: null
                button_icon_inactive_color: null
                button_icon_active_background_color: null
                button_icon_inactive_background_color: null
                button_template:
                  - custom-button-lcars-lozenge
                button_show_icon: false
                button_show_name: false
                button_show_state: false
                button_show_label: true
                button_label: |
                  [[[ 
                    return ((Math.floor(Math.random() * 256).toString(16).padStart(2, '0')) + "-" + (Math.floor(Math.random() * 4096).toString(16).padStart(3, '0')));
                  ]]]
                grid_template_columns: null
                grid_auto_rows: null
                card_width: null
                card_height: null
  - title: home
    path: home
    type: custom:grid-layout
    layout:
      margin: '-4px -4px 0px -4px'
      card_margin: 0
      padding: 0
      grid-template-columns: 210px 1fr minmax(160px, 300px)
      grid-template-rows: 110px minmax(600px, 630px) 60px
      grid-auto-rows: minmax(auto, 1fr)
      grid-gap: 0px
      max-height: 100vh;
      grid-template-areas: |
        "header-left header-left right"
        "left main right"
        "footer-left footer-left footer-right"
    cards:
      - square: false
        type: grid
        columns: 1
        cards:
          - type: custom:layout-card
            layout_type: custom:grid-layout
            cards:
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                variables:
                  text_justify: center
                  font_size: 30px
                  font_weight: bold
                  text_padding_bottom: 5px
                entity: climate.living_room
                show_state: false
                show_name: false
                show_label: true
                label: |
                  [[[
                      const state = states['sensor.home_average_temperature_template'].state;
                      const roundedValue = Math.round(parseFloat(state));
                      const formattedValue = roundedValue.toString().padStart(2, '0');
                      return formattedValue;
                  ]]]
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard
                  - custom-button-animate-press
                variables:
                  card_active_color: var(--picard-blue)
                state:
                  - id: state_on
                    value: HOME
                entity: input_select.lcars_ui_page_selector
                label: home
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  data:
                    entity_id: input_select.lcars_ui_page_selector
                    option: HOME
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                variables:
                  text_justify: center
                  font_size: 30px
                  font_weight: bold
                  text_padding_bottom: 5px
                  text_color_zero: var(--picard-dark-blue)
                  text_color_non_zero: var(--picard-blue)
                entity: sensor.lights_on
                show_state: true
                show_label: false
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard
                  - custom-button-animate-press
                variables:
                  card_active_color: var(--picard-blue)
                state:
                  - id: state_on
                    value: LIGHTS
                entity: input_select.lcars_ui_page_selector
                label: lights
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  data:
                    entity_id: input_select.lcars_ui_page_selector
                    option: LIGHTS
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                variables:
                  text_justify: center
                  font_size: 30px
                  font_weight: bold
                  text_padding_bottom: 5px
                entity: climate.living_room
                show_state: false
                show_name: false
                show_label: true
                label: |
                  [[[
                      const state = states['climate.living_room'].attributes.temperature;
                      const roundedValue = Math.round(parseFloat(state));

                      // Check if the roundedValue is NaN
                      if (isNaN(roundedValue)) {
                        return 'FF';
                      }
                      
                      const formattedValue = roundedValue.toString().padStart(2, '0');
                      return formattedValue;
                  ]]]
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard
                  - custom-button-animate-press
                variables:
                  card_active_color: var(--picard-blue)
                state:
                  - id: state_on
                    value: ENVIRONMENTAL
                entity: input_select.lcars_ui_page_selector
                label: environmental
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  data:
                    entity_id: input_select.lcars_ui_page_selector
                    option: ENVIRONMENTAL
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                variables:
                  card_inactive_background_color: var(--picard-dark-gray)
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                variables:
                  text_justify: center
                  font_size: 30px
                  font_weight: bold
                  text_padding_bottom: 5px
                  text_color_zero: var(--picard-dark-blue)
                  text_color_non_zero: var(--picard-blue)
                entity: sensor.lights_on
                show_state: true
                show_label: false
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                  - custom-button-animate-press
                state:
                  - id: state_on
                    value: LIGHTS II
                show_icon: true
                icon: none
                size: 24px
                variables:
                  icon_active_color: transparent
                  icon_inactive_color: transparent
                  icon_active_background_color: var(--picard-blue)
                  icon_inactive_background_color: transparent
                entity: input_select.lcars_ui_page_selector
                label: lights ii
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  data:
                    entity_id: input_select.lcars_ui_page_selector
                    option: LIGHTS II
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                variables:
                  text_justify: center
                  font_size: 30px
                  font_weight: bold
                  text_padding_bottom: 5px
                  text_color_zero: var(--success-color)
                  text_color_non_zero: var(--error-color)
                entity: sensor.contact_sensors_open
                show_state: false
                show_name: false
                show_label: true
                label: |
                  [[[
                      const state = states['sensor.contact_sensors_open'].state;
                      const roundedValue = Math.round(parseFloat(state));
                      const formattedValue = roundedValue.toString().padStart(2, '0');
                      return formattedValue;
                  ]]]
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                  - custom-button-animate-press
                state:
                  - id: state_on
                    value: SECURITY
                show_icon: true
                icon: none
                size: 24px
                variables:
                  icon_active_color: transparent
                  icon_inactive_color: transparent
                  icon_active_background_color: var(--picard-blue)
                  icon_inactive_background_color: transparent
                entity: input_select.lcars_ui_page_selector
                label: security
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  data:
                    entity_id: input_select.lcars_ui_page_selector
                    option: SECURITY
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                  - custom-button-animate-press
                state:
                  - id: state_on
                    value: COMMS
                show_icon: true
                icon: none
                size: 24px
                variables:
                  icon_active_color: transparent
                  icon_inactive_color: transparent
                  icon_active_background_color: var(--picard-blue)
                  icon_inactive_background_color: transparent
                  state:
                    - id: state_on
                      value: COMMS
                entity: input_select.lcars_ui_page_selector
                label: comms
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  data:
                    entity_id: input_select.lcars_ui_page_selector
                    option: COMMS
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                variables:
                  text_justify: center
                  font_size: 30px
                  font_weight: bold
                  text_padding_bottom: 5px
                  text_color_zero: var(--error-color)
                  text_color_non_zero: var(--picard-starlight)
                entity: sensor.cats_home
                show_state: false
                show_name: false
                show_label: true
                label: |
                  [[[
                      const state = states['sensor.cats_home'].state;
                      const roundedValue = Math.round(parseFloat(state));
                      const formattedValue = roundedValue.toString().padStart(2, '0');
                      return formattedValue;
                  ]]]
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard-filled
                  - custom-button-animate-press
                state:
                  - id: state_on
                    value: CATS
                entity: input_select.lcars_ui_page_selector
                label: felines
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  data:
                    entity_id: input_select.lcars_ui_page_selector
                    option: CATS
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:gap-card
              - type: custom:button-card
                template:
                  - custom-button-lcars-button-picard
                  - custom-button-animate-press
                variables:
                  card_active_color: var(--warning-color)
                state:
                  - id: state_on
                    value: ENGINEERING
                entity: input_select.lcars_ui_page_selector
                label: engineering
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  data:
                    entity_id: input_select.lcars_ui_page_selector
                    option: ENGINEERING
                hold_action:
                  action: none
                double_tap_action:
                  action: none
            layout:
              grid-template-columns: 50px 1fr
              grid-template-rows: 70px
              grid-auto-rows: 70px
              margin: '-4px -4px 0px -4px'
              card_margin: 0
              padding: 0
              grid-area: left
        view_layout:
          grid-area: left
          card_margin: 0px 0px 0px 0px
          margin: 0px 0px 0px 0px
      - type: vertical-stack
        cards:
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: HOME
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              cards:
                - type: horizontal-stack
                  cards:
                    - square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          cards:
                            - type: custom:gap-card
                            - type: custom:my-slider-v2
                              entity: light.living_room
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 5
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--picard-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.corner_lamp
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 5
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--picard-cyan)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.kitchen
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 5
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.dining
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 5
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.hallway
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 5
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                          layout:
                            grid-template-columns: 30px repeat(5, 1fr) 30px
                            grid-template-rows: 1fr
                            grid-auto-rows: 1fr
                            margin: '-4px -4px 0px -4px'
                            card_margin: 0
                            padding: 0
                  view_layout:
                    grid-area: child-main-top
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
                - type: custom:button-card
                  view_layout:
                    grid-area: child-main-middle
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
                  template: custom-button-lcars-dpad
                  variables:
                    card_size: 300px
                    dpad_center_entity: null
                    dpad_center_entity_active_state: 'on'
                    dpad_up_entity: input_boolean.lcars_ui_fullscreen
                    dpad_up_entity_active_state: 'on'
                    dpad_up_left_entity: input_boolean.enable_verbal_notifications
                    dpad_up_left_entity_active_state: 'on'
                    dpad_up_left_show_label: true
                    dpad_up_left_label: null
                    dpad_up_left_show_name: false
                    dpad_up_left_show_state: false
                    dpad_up_right_entity: null
                    dpad_up_right_entity_active_state: 'on'
                    dpad_up_right_show_label: true
                    dpad_up_right_label: null
                    dpad_up_right_show_name: false
                    dpad_up_right_show_state: false
                    dpad_down_entity: null
                    dpad_down_entity_active_state: 'on'
                    dpad_down_left_entity: null
                    dpad_down_left_entity_active_state: 'on'
                    dpad_down_left_show_label: true
                    dpad_down_left_label: null
                    dpad_down_left_show_name: false
                    dpad_down_left_show_state: false
                    dpad_down_right_entity: null
                    dpad_down_right_entity_active_state: 'on'
                    dpad_down_right_show_label: true
                    dpad_down_right_label: null
                    dpad_down_right_show_name: false
                    dpad_down_right_show_state: false
                    dpad_left_entity: null
                    dpad_left_entity_active_state: 'on'
                    dpad_right_entity: null
                    dpad_right_entity_active_state: 'on'
              layout:
                grid-template-columns: 1fr
                grid-template-rows: 170px 1fr 170px
                grid-template-areas: |
                  "child-main-top"
                  "child-main-middle"
                  "child-main-bottom"
                margin: '-4px -4px 0px -4px'
                card_margin: 0
                padding: 0
              view_layout:
                grid-area: main
                margin: 0px
                padding: 0px
                card_margin: 0px
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: LIGHTS
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              cards:
                - type: horizontal-stack
                  cards:
                    - square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          cards:
                            - type: custom:gap-card
                            - type: custom:my-slider-v2
                              entity: light.living_room_ambient
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.corner_lamp
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.kitchen
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.dining
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.hallway
                              mode: brightness
                              flipped: false
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - height: 155px
                                  - width: 1fr
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                          layout:
                            grid-template-columns: 30px repeat(5, 1fr) 30px
                            grid-template-rows: 1fr
                            grid-auto-rows: 1fr
                            margin: '-4px -4px 0px -4px'
                            card_margin: 0
                            padding: 0
                  view_layout:
                    grid-area: child-main-top
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
                - type: horizontal-stack
                  cards:
                    - type: custom:layout-card
                      layout_type: custom:grid-layout
                      layout:
                        grid-template-columns: 30px repeat(5, 2fr) 30px
                        grid-template-rows: auto
                        grid-auto-rows: auto
                        margin: '-4px -4px 0px -4px'
                        card_margin: 0
                        padding: 0
                      margin: '-4px -4px 0px -4px'
                      card_margin: 0
                      padding: 0
                      cards:
                        - type: custom:gap-card
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-button-picard-filled
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.living_room_ambient'];
                                let cssColor = 'var(--lcars-ui-secondary)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.living_room_ambient
                          label: Living Room
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-button-square
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.corner_lamp'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.corner_lamp
                          label: corner lamp
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.kitchen'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.kitchen
                          label: kitchen
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet-right
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.dining'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.dining
                          label: dining
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.hallway'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.hallway
                          label: hallway
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet-right
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.media_lights'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.media_lights
                          label: media lights
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.fan'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.fan
                          label: LR Fan
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.mirror'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.mirror
                          label: mirror
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.canvas'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.canvas
                          label: canvas
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:gap-card
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet-right
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                          entity: light.front_door
                          label: front door
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.patio_twinkles'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.patio_twinkles
                          label: twinkles
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:gap-card
                        - type: custom:gap-card
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.bathroom'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.bathroom
                          label: bathroom
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.office'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.office
                          label: Office
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-lozenge
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.bedroom'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.bedroom
                          label: Bedroom
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet-right
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.entryway'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.entryway
                          label: entryway
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - custom-button-lcars-bullet
                            - custom-button-animate-press
                          variables:
                            card_inactive_background_color: var(--card-background-color)
                            card_active_background_color: |
                              [[[
                                const lightEntity = states['light.patio'];
                                let cssColor = 'var(--card-background-color)'; // default color
                                if (lightEntity && lightEntity.attributes.rgb_color) {
                                  const lightColor = lightEntity.attributes.rgb_color;
                                  cssColor = `rgb(${lightColor.join(', ')})`;
                                }
                                return cssColor;
                              ]]]
                          entity: light.patio
                          label: patio
                          tap_action:
                            action: toggle
                          hold_action:
                            action: more-info
                          double_tap_action:
                            action: toggle
                  view_layout:
                    grid-area: child-main-middle
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
                - type: horizontal-stack
                  cards:
                    - square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          cards:
                            - type: custom:gap-card
                            - type: custom:my-slider-v2
                              entity: light.bathroom
                              mode: brightness
                              flipped: true
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - width: 1fr
                                  - height: 155px
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.office
                              mode: brightness
                              flipped: true
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - width: 1fr
                                  - height: 155px
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.bedroom
                              mode: brightness
                              flipped: true
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - width: 1fr
                                  - height: 155px
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.entryway
                              mode: brightness
                              flipped: true
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - width: 1fr
                                  - height: 155px
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                            - type: custom:my-slider-v2
                              entity: light.patio
                              mode: brightness
                              flipped: true
                              vertical: true
                              step: 1
                              allowTapping: false
                              allowSliding: true
                              styles:
                                card:
                                  - width: 1fr
                                  - height: 155px
                                  - background: none
                                progress:
                                  background: var(--lcars-blue)
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                          layout:
                            grid-template-columns: 30px repeat(5, 1fr) 30px
                            grid-template-rows: 1fr
                            grid-auto-rows: 1fr
                            margin: '-4px -4px 0px -4px'
                            card_margin: 0
                            padding: 0
                  view_layout:
                    grid-area: child-main-bottom
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
              layout:
                grid-template-columns: 1fr
                grid-template-rows: 170px 1fr 170px
                grid-template-areas: |
                  "child-main-top"
                  "child-main-middle"
                  "child-main-bottom"
                margin: '-4px -4px 0px -4px'
                card_margin: 0
                padding: 0
              view_layout:
                grid-area: main
                margin: 0px
                padding: 0px
                card_margin: 0px
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: LIGHTS II
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              cards:
                - type: grid
                  columns: 2
                  square: false
                  cards:
                    - type: custom:hue-like-light-card
                      allowZero: true
                      title: Living Room
                      icon: hue:room-living
                      offShadow: true
                      offColor: '#11111b'
                      resources:
                        scenes: Scenes
                      entities:
                        - light.living_room_ambient
                        - light.floor_strip
                        - light.corner_lamp
                        - light.floor_lamp
                        - light.tv
                        - light.fan
                        - light.galley
                        - light.ambient
                        - light.nosh
                      hueBorders: true
                      slider: mushroom
                      style: |

                        ha-card > div > h2 {
                          margin-top: 6px;
                        }
                        .brightness-slider {
                          --mush-control-height: 32px !important;
                        }
                      iconSize: 1.5
                    - type: custom:hue-like-light-card
                      allowZero: true
                      title: Kitchen
                      icon: hue:room-kitchen
                      offShadow: true
                      offColor: '#11111b'
                      resources:
                        scenes: Scenes
                      entities:
                        - light.kitchen
                        - light.counter
                        - light.overhead
                      hueBorders: true
                      slider: mushroom
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px !important;
                        }
                        ha-card > div > h2 {
                          margin-top: 6px;
                        }
                        .brightness-slider {
                          --mush-control-height: 32px !important;
                        }
                      iconSize: 1.5
                    - type: custom:hue-like-light-card
                      allowZero: true
                      title: Bathroom
                      icon: hue:room-toilet
                      offShadow: true
                      offColor: '#11111b'
                      resources:
                        scenes: Scenes
                      entities:
                        - light.bathroom
                        - light.vanity
                        - light.bathroom_strip
                        - light.vanity_1
                        - light.vanity_2
                        - light.vanity_3
                        - light.vanity_4
                      hueBorders: true
                      slider: mushroom
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px !important;
                        }
                        ha-card > div > h2 {
                          margin-top: 6px;
                        }
                        .brightness-slider {
                          --mush-control-height: 32px !important;
                        }
                      iconSize: 1.5
                    - type: custom:hue-like-light-card
                      allowZero: true
                      title: Dining Room
                      icon: hue:room-dining
                      offShadow: true
                      offColor: '#11111b'
                      resources:
                        scenes: Scenes
                      entities:
                        - light.table
                      hueBorders: true
                      slider: mushroom
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px !important;
                        }
                        ha-card > div > h2 {
                          margin-top: 6px;
                        }
                        .brightness-slider {
                          --mush-control-height: 32px !important;
                        }
                      iconSize: 1.5
                    - type: custom:hue-like-light-card
                      allowZero: true
                      title: Office
                      icon: hue:room-office
                      offShadow: true
                      offColor: '#11111b'
                      resources:
                        scenes: Scenes
                      entities:
                        - light.office
                        - light.desk
                        - light.office_ceiling
                        - light.canvas
                      hueBorders: true
                      slider: mushroom
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px !important;
                        }
                        ha-card > div > h2 {
                          margin-top: 6px;
                        }
                        .brightness-slider {
                          --mush-control-height: 32px !important;
                        }
                      iconSize: 1.5
                    - type: custom:hue-like-light-card
                      allowZero: true
                      title: Bedroom
                      icon: hue:room-bedroom
                      offShadow: true
                      offColor: '#11111b'
                      resources:
                        scenes: Scenes
                      entities:
                        - light.bedroom
                        - light.pendant
                        - light.ceiling
                        - light.bed
                        - light.wardrobe
                        - light.bedroom_window
                      hueBorders: true
                      slider: mushroom
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px !important;
                        }
                        ha-card > div > h2 {
                          margin-top: 6px;
                        }
                        .brightness-slider {
                          --mush-control-height: 32px !important;
                        }
                      iconSize: 1.5
                    - type: custom:hue-like-light-card
                      allowZero: true
                      title: Patio
                      icon: hue:room-bbq
                      offShadow: true
                      offColor: '#11111b'
                      resources:
                        scenes: Scenes
                      entities:
                        - light.patio_2
                        - light.patio_strip
                        - light.patio_strip_floor
                        - light.patio_twinkles
                        - light.front_door
                      hueBorders: true
                      slider: mushroom
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px !important;
                        }
                        ha-card > div > h2 {
                          margin-top: 6px;
                        }
                        .brightness-slider {
                          --mush-control-height: 32px !important;
                        }
                      iconSize: 1.5
                    - type: custom:hue-like-light-card
                      allowZero: true
                      title: Entryway
                      icon: hue:room-other
                      offShadow: true
                      offColor: '#11111b'
                      resources:
                        scenes: Scenes
                      entities:
                        - light.entryway
                        - light.foyer_1
                        - light.foyer_2
                      hueBorders: true
                      slider: mushroom
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px !important;
                        }
                        ha-card > div > h2 {
                          margin-top: 6px;
                        }
                        .brightness-slider {
                          --mush-control-height: 32px !important;
                        }
                      iconSize: 1.5
                    - type: custom:hue-like-light-card
                      allowZero: true
                      title: Hallway
                      icon: hue:room-laundry
                      offShadow: true
                      offColor: '#11111b'
                      resources:
                        scenes: Scenes
                      entities:
                        - light.laundry
                      hueBorders: true
                      slider: mushroom
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px !important;
                        }
                        ha-card > div > h2 {
                          margin-top: 6px;
                        }
                        .brightness-slider {
                          --mush-control-height: 32px !important;
                        }
                      iconSize: 1.5
                    - type: custom:hue-like-light-card
                      allowZero: true
                      title: Closet
                      icon: hue:room-hallway
                      offShadow: true
                      offColor: '#11111b'
                      resources:
                        scenes: Scenes
                      entities:
                        - light.closet
                      hueBorders: true
                      slider: mushroom
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px !important;
                        }
                        ha-card > div > h2 {
                          margin-top: 6px;
                        }
                        .brightness-slider {
                          --mush-control-height: 32px !important;
                        }
                      iconSize: 1.5
                  view_layout:
                    grid-area: child-main-left
                - square: false
                  type: grid
                  cards:
                    - type: custom:gap-card
                    - type: custom:gap-card
                    - type: custom:button-card
                      template:
                        - custom-button-state-blink
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_seconds: 2s
                        blink_state_mode: 'off'
                        card_inactive_background_color: var(--card-background-color)
                        card_active_background_color: var(--success-color)
                      entity: switch.adguard_home_protection
                      name: adguard
                      show_name: true
                      show_icon: false
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_card_background_color: var(--card-background-color)
                        blink_seconds: 5s
                        state_mode: 'off'
                        card_inactive_background_color: var(--card-background-color)
                        card_active_background_color: var(--lcars-blue)
                      entity: input_boolean.enable_verbal_notifications
                      name: TTS Alerts
                      show_name: true
                      show_icon: false
                    - type: custom:gap-card
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_card_background_color: var(--card-background-color)
                        blink_seconds: 5s
                        state_mode: 'off'
                        card_inactive_background_color: var(--card-background-color)
                      entity: input_boolean.dreamview_switch
                      name: Dreamview
                      show_name: true
                      show_icon: false
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_card_background_color: var(--lcars-blue)
                        blink_seconds: 3s
                        card_inactive_background_color: var(--card-background-color)
                        card_active_background_color: var(--lcars-blue)
                        ripple_color: red
                      entity: automation.controller_mute_tv
                      show_icon: true
                      name: tts mute tv
                    - type: custom:gap-card
                  columns: 1
                  view_layout:
                    grid-area: child-main-right
              layout:
                grid-template-columns: 1fr 200px
                grid-template-rows: 1fr
                grid-template-areas: |
                  "child-main-left child-main-right"
                margin: '-4px -4px 0px -4px'
                card_margin: 0
                padding: 0
              view_layout:
                grid-area: main
                margin: 0px
                padding: 0px
                card_margin: 0px
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: COMMS
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              cards:
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-header
                      variables:
                        border_top: 10px
                        border_left: 35px
                        card_height: 40px
                        font_weight: bold
                        lcars_color: var(--lcars-blue)
                      label: COMMS
                    - type: custom:vertical-stack-in-card
                      cards:
                        - type: custom:uptime-card
                          entity: >-
                            sensor.transwarp_unimatrix01_ca_interface_wan_status_2
                          title_adaptive_color: true
                          color:
                            half: '#FF0000'
                          ok: up
                          ko: down
                          none: unkown
                          bar:
                            spacing: 4
                            height: 10
                            round: 4
                          title_template: Transwarp Conduit
                          status_adaptive_color: true
                          icon_adaptive_color: true
                          tooltip_adaptive_color: false
                          init: {}
                          show:
                            header: true
                            title: true
                            icon: true
                            status: true
                            timeline: true
                            footer: true
                          alias:
                            ok: Online
                            ko: Offline
                          tooltip:
                            hour24: true
                          tap_action: {}
                          alignment:
                            icon_first: false
                            tooltip_first: false
                          blink: {}
                          clip: {}
                          hours_to_show: 24
                          card_mod:
                            style: |
                              ha-card {
                                 background: none;
                              }
                        - type: custom:uptime-card
                          entity: binary_sensor.doorbell_camera
                          title_adaptive_color: true
                          color:
                            half: '#FF0000'
                          ok: 'on'
                          ko: 'off'
                          none: unkown
                          bar:
                            spacing: 4
                            height: 10
                            round: 4
                          title_template: Doorbell Camera
                          status_adaptive_color: true
                          icon_adaptive_color: true
                          tooltip_adaptive_color: false
                          init: {}
                          show:
                            header: true
                            title: true
                            icon: true
                            status: true
                            timeline: true
                            footer: true
                          alias:
                            ok: Online
                            ko: Offline
                          tooltip:
                            hour24: true
                          tap_action: {}
                          alignment:
                            icon_first: false
                            tooltip_first: false
                          blink: {}
                          clip: {}
                          hours_to_show: 1
                          card_mod:
                            style: |
                              ha-card {
                                 background: none;
                              }
                        - type: custom:uptime-card
                          entity: binary_sensor.living_room_camera
                          title_adaptive_color: true
                          color:
                            half: '#FF0000'
                          ok: 'on'
                          ko: 'off'
                          none: unkown
                          bar:
                            spacing: 4
                            height: 10
                            round: 4
                          title_template: Living Room Camera
                          status_adaptive_color: true
                          icon_adaptive_color: true
                          tooltip_adaptive_color: false
                          init: {}
                          show:
                            header: true
                            title: true
                            icon: true
                            status: true
                            timeline: true
                            footer: true
                          alias:
                            ok: Online
                            ko: Offline
                          tooltip:
                            hour24: true
                          tap_action: {}
                          alignment:
                            icon_first: false
                            tooltip_first: false
                          blink: {}
                          clip: {}
                          hours_to_show: 1
                          card_mod:
                            style: |
                              ha-card {
                                 background: none;
                              }
                        - type: custom:uptime-card
                          entity: binary_sensor.office_camera
                          title_adaptive_color: true
                          color:
                            half: '#FF0000'
                          ok: 'on'
                          ko: 'off'
                          none: unkown
                          bar:
                            spacing: 4
                            height: 10
                            round: 4
                          title_template: Office Camera
                          status_adaptive_color: true
                          icon_adaptive_color: true
                          tooltip_adaptive_color: false
                          init: {}
                          show:
                            header: true
                            title: true
                            icon: true
                            status: true
                            timeline: true
                            footer: true
                          alias:
                            ok: Online
                            ko: Offline
                          tooltip:
                            hour24: true
                          tap_action: {}
                          alignment:
                            icon_first: false
                            tooltip_first: false
                          blink: {}
                          clip: {}
                          hours_to_show: 1
                          card_mod:
                            style: |
                              ha-card {
                                 background: none;
                              }
                      card_mod:
                        class: middle
                        style: |
                          ha-card.middle {
                            background: none !important;
                          }
                  view_layout:
                    grid-area: child-main-left
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-header-open
                      variables:
                        border_top: 10px
                        card_height: 40px
                        font_weight: bold
                        lcars_color: var(--lcars-blue)
                      label: ' '
                    - square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          cards:
                            - type: custom:button-card
                              template:
                                - custom-button-state-blink
                                - custom-button-lcars-bullet-right
                                - custom-button-animate-press
                              variables:
                                blink_seconds: 3s
                                state_mode: 'on'
                                card_inactive_background_color: var(--lcars-ui-secondary)
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: switch.locutus_pa_mute
                              name: locutus
                              show_name: true
                              show_icon: true
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--error-color)
                                text_color_non_zero: >
                                  [[[ return
                                  states["switch.locutus_pa_mute"].state ===
                                  "on" ? "var(--error-color)" :

                                  "white" ]]]
                                card_active_background_color: var(--lcars-blue)
                                font_size: 40px
                              entity: sensor.locutus_pa_volume
                              show_state: false
                              show_name: false
                              show_label: true
                              label: |
                                [[[
                                    const state = states['sensor.locutus_pa_volume'].state;
                                    if (state === undefined || state === null || isNaN(Number(state))) {
                                      return 'FF';
                                    }
                                    const roundedValue = Math.round(parseFloat(state));
                                    const formattedValue = roundedValue.toString().padStart(2, '0');
                                    return formattedValue;
                                ]]]
                            - type: custom:my-slider-v2
                              entity: input_number.locutus_volume
                              flipped: false
                              step: 5
                              styles:
                                card:
                                  height: 60px
                                container:
                                  border-radius: 0
                                track:
                                  background: black
                                progress:
                                  background: var(--lcars-blue)
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                              card_mod:
                                class: middle-right
                            - type: custom:button-card
                              template:
                                - custom-button-state-blink
                                - custom-button-lcars-bullet-right
                                - custom-button-animate-press
                              variables:
                                blink_seconds: 3s
                                state_mode: 'on'
                                card_inactive_background_color: var(--lcars-ui-secondary)
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: switch.unicomplex_pa_mute
                              name: unicomplex
                              show_name: true
                              show_icon: true
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--error-color)
                                text_color_non_zero: >
                                  [[[ return
                                  states["switch.unicomplex_pa_mute"].state ===
                                  "on" ? "var(--error-color)" :

                                  "white" ]]]
                                card_active_background_color: var(--lcars-blue)
                                font_size: 40px
                              entity: sensor.unicomplex_pa_volume
                              show_state: false
                              show_name: false
                              show_label: true
                              label: |
                                [[[
                                    const state = states['input_number.unicomplex_volume'].state;
                                    if (state === undefined || state === null || isNaN(Number(state))) {
                                      return 'FF';
                                    }
                                    const roundedValue = Math.round(parseFloat(state));
                                    const formattedValue = roundedValue.toString().padStart(2, '0');
                                    return formattedValue;
                                ]]]
                            - type: custom:my-slider-v2
                              entity: input_number.unicomplex_volume
                              flipped: false
                              step: 5
                              styles:
                                card:
                                  height: 60px
                                container:
                                  border-radius: 0
                                track:
                                  background: black
                                progress:
                                  background: var(--lcars-blue)
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                              card_mod:
                                class: middle-right
                          layout:
                            grid-template-columns: 1fr 65px 1fr
                            grid-template-rows: 70px
                            grid-auto-rows: 70px
                            grid-template-areas: |
                              "count button"
                            margin: '-4px -4px 0px -4px'
                            card_margin: 0
                            padding: 0
                            grid-area: left
                      view_layout:
                        card_margin: 0px 0px 0px 0px
                        margin: 0px 0px 0px 0px
                        grid-area: child-header
                  view_layout:
                    grid-area: child-main-right
              layout:
                grid-template-columns: 1fr 1fr
                grid-template-rows: 1fr
                grid-template-areas: |
                  "child-main-left child-main-right"
                margin: '-4px -4px 0px -4px'
                card_margin: 0
                padding: 0
              view_layout:
                grid-area: main
                margin: 0px
                padding: 0px
                card_margin: 0px
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: SECURITY
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              layout:
                grid-template-areas: |
                  "child-main child-right"
                grid-template-columns: 630px 150px
                grid-template-rows: 1fr
                margin: '-4px -4px 0px -4px'
                card_margin: 0
                padding: 0
              cards:
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-header
                      variables:
                        border_top: 10px
                        border_left: 35px
                        card_height: 40px
                        font_weight: bold
                        lcars_color: var(--lcars-blue)
                      label: VISUAL SENSORS
                    - type: custom:frigate-card
                      cameras:
                        - go2rtc:
                            modes:
                              - webrtc
                            stream: front_door_sub
                          camera_entity: camera.front_door
                          title: Front Door
                          live_provider: go2rtc
                          dependencies:
                            cameras:
                              - front_door_hd
                        - hide: true
                          camera_entity: camera.front_door
                          id: front_door_hd
                          title: Front Door HD
                          go2rtc:
                            stream: front_door
                            modes:
                              - webrtc
                          live_provider: go2rtc
                        - go2rtc:
                            modes:
                              - webrtc
                            stream: living_room_sub
                          camera_entity: camera.living_room
                          title: Living Room
                          live_provider: go2rtc
                          dependencies:
                            cameras:
                              - living_room_hd
                        - hide: true
                          camera_entity: camera.living_room
                          id: living_room_hd
                          title: Living Room HD
                          go2rtc:
                            stream: living_room
                            modes:
                              - webrtc
                          live_provider: go2rtc
                        - go2rtc:
                            modes:
                              - webrtc
                            stream: office_sub
                          camera_entity: camera.office
                          title: Office
                          live_provider: go2rtc
                          dependencies:
                            cameras:
                              - office_hd
                        - hide: true
                          camera_entity: camera.office
                          id: office_hd
                          title: Office HD
                          go2rtc:
                            stream: office
                            modes:
                              - webrtc
                          live_provider: go2rtc
                      view:
                        scan:
                          enabled: false
                        default: live
                        dark_mode: 'on'
                      live:
                        preload: false
                        controls:
                          thumbnails:
                            mode: below
                            show_details: false
                          timeline:
                            mode: none
                            style: stack
                          title:
                            duration_seconds: 5
                            mode: popup-bottom-right
                      timeline:
                        controls:
                          thumbnails:
                            mode: below
                        show_recordings: false
                      menu:
                        style: hidden
                        position: top
                        alignment: top
                        buttons:
                          mute:
                            enabled: true
                          substreams:
                            icon: mdi:high-definition-box
                          recordings:
                            enabled: true
                          microphone:
                            enabled: true
                      elements:
                        - type: custom:frigate-card-conditional
                          conditions:
                            camera:
                              - camera.front_door
                          elements:
                            - type: custom:frigate-card-menu-submenu
                              priority: 100
                              icon: mdi:cog
                              items:
                                - title: Detect
                                  entity: switch.front_door_detect
                                  tap_action:
                                    action: toggle
                                - title: Recordings
                                  entity: switch.front_door_recordings
                                  tap_action:
                                    action: toggle
                                - title: Snapshots
                                  entity: switch.front_door_snapshots
                                  tap_action:
                                    action: toggle
                        - type: custom:frigate-card-conditional
                          conditions:
                            camera:
                              - camera.living_room
                          elements:
                            - type: custom:frigate-card-menu-submenu
                              priority: 100
                              icon: mdi:cog
                              items:
                                - title: Detect
                                  entity: switch.living_room_detect
                                  tap_action:
                                    action: toggle
                                - title: Recordings
                                  entity: switch.living_room_recordings
                                  tap_action:
                                    action: toggle
                                - title: Snapshots
                                  entity: switch.living_room_snapshots
                                  tap_action:
                                    action: toggle
                      media_gallery:
                        controls:
                          thumbnails:
                            show_details: false
                            size: 75
                            show_timeline_control: false
                            show_download_control: false
                            show_favorite_control: false
                          filter:
                            mode: none
                      media_viewer:
                        controls:
                          thumbnails:
                            mode: below
                          timeline:
                            mode: below
                            style: stack
                      dimensions:
                        aspect_ratio_mode: dynamic
                      view_layout:
                        position: main
                      card_mod:
                        class: middle
                        style: |
                          ha-card {
                            background: none !important;
                          }
                  view_layout:
                    grid-area: child-main
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-header-open
                      variables:
                        border_top: 10px
                        card_height: 40px
                        font_weight: bold
                        lcars_color: var(--lcars-blue)
                        text_justify: center
                      label: SENSORS
                    - type: custom:button-card
                      template:
                        - custom-button-state-blink
                        - custom-button-lcars-button-picard
                        - custom-button-animate-press
                      variables:
                        blink_seconds: 2s
                        state_mode: 'on'
                        card_inactive_color: var(--success-color)
                      entity: binary_sensor.patio_gate_home_security_intrusion
                      label: patio gate
                    - type: custom:button-card
                      template:
                        - custom-button-state-blink
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_seconds: 2s
                        state_mode: 'on'
                        card_inactive_background_color: var(--success-color)
                        card_active_background_color: var(--success-color)
                      entity: binary_sensor.front_door_home_security_intrusion
                      label: front door
                    - type: custom:button-card
                      template:
                        - custom-button-state-blink
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_seconds: 2s
                        state_mode: 'on'
                        card_inactive_background_color: var(--success-color)
                        card_active_background_color: var(--success-color)
                      entity: binary_sensor.front_window_home_security_intrusion
                      label: front window
                    - type: custom:button-card
                      template:
                        - custom-button-state-blink
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_seconds: 2s
                        state_mode: 'on'
                        card_inactive_background_color: var(--success-color)
                        card_active_background_color: var(--success-color)
                      entity: binary_sensor.office_window_home_security_intrusion
                      label: office window
                    - type: custom:button-card
                      template:
                        - custom-button-state-blink
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_seconds: 2s
                        state_mode: 'on'
                        card_inactive_background_color: var(--success-color)
                        card_active_background_color: var(--success-color)
                      entity: binary_sensor.bedroom_window_home_security_intrusion
                      label: bedroom
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-label
                      variables:
                        card_inactive_background_color: transparent
                        card_active_background_color: var(--lcars-blue)
                        font_size: 20px
                        card_height: 30px
                      label: |
                        RECORDING
                    - type: custom:button-card
                      template:
                        - custom-button-state-blink
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_seconds: 2s
                        state_mode: 'off'
                        card_inactive_background_color: var(--success-color)
                        card_active_background_color: var(--success-color)
                      entity: switch.front_door_recordings
                      label: front door
                      tap_action:
                        action: toggle
                    - type: custom:button-card
                      template:
                        - custom-button-state-blink
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_seconds: 2s
                        state_mode: 'off'
                        card_inactive_background_color: var(--success-color)
                        card_active_background_color: var(--success-color)
                      entity: switch.living_room_recordings
                      label: living room
                      tap_action:
                        action: toggle
                    - type: custom:button-card
                      template:
                        - custom-button-state-blink
                        - custom-button-lcars-lozenge
                        - custom-button-animate-press
                      variables:
                        blink_seconds: 2s
                        state_mode: 'off'
                        card_inactive_background_color: var(--success-color)
                        card_active_background_color: var(--success-color)
                      entity: switch.office_recordings
                      label: office
                      tap_action:
                        action: toggle
                  view_layout:
                    grid-area: child-right
              view_layout:
                grid-area: main
                margin: 0px
                padding: 0px
                card_margin: 0px
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: CATS
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              cards:
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - custom-button-header
                      variables:
                        border_horizontal: 10px
                        border_vertical: 35px
                        card_height: 40px
                        font_weight: bold
                        lcars_color: var(--lcars-blue)
                      label: FELINES
                    - type: custom:mushroom-person-card
                      entity: person.dexter
                      fill_container: true
                      icon_type: entity-picture
                      layout: horizontal
                      primary_info: state
                      secondary_info: last-changed
                      card_mod:
                        class: middle
                    - type: custom:mushroom-person-card
                      entity: person.luna
                      fill_container: true
                      icon_type: entity-picture
                      layout: horizontal
                      primary_info: state
                      secondary_info: last-changed
                      card_mod:
                        class: middle
                    - type: custom:button-card
                      template:
                        - custom-button-footer
                      variables:
                        border_horizontal: 10px
                        border_vertical: 35px
                        card_height: 40px
                        font_weight: bold
                      label: ' '
                  view_layout:
                    grid-area: child-main-left
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - custom-button-header-open
                      variables:
                        border_horizontal: 10px
                        card_height: 40px
                        font_weight: bold
                        lcars_color: var(--lcars-blue)
                      label: COORDINATES
                    - type: map
                      entities:
                        - entity: device_tracker.dexter_tracker
                          label_mode: name
                          name: Dex
                      dark_mode: true
                      default_zoom: 18
                      hours_to_show: 4
                      view_layout:
                        grid-area: child-main
                      card_mod:
                        class: middle
                    - type: markdown
                      content: |
                        ###### &nbsp;
                      view_layout:
                        grid-area: child-footer
                      card_mod:
                        class: footer
                        style: |
                          ha-card {
                            text-align: right;
                          }
                  view_layout:
                    grid-area: child-main-right
              layout:
                grid-template-columns: minmax(120px, 250px) 1fr
                grid-template-rows: 1fr
                grid-template-areas: |
                  "child-main-left child-main-right"
                margin: '-4px -4px 0px -4px'
                card_margin: 0
                padding: 0
              view_layout:
                grid-area: main
                margin: 0px
                padding: 0px
                card_margin: 0px
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: ENVIRONMENTAL
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              cards:
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-header
                      variables:
                        border_top: 10px
                        border_left: 35px
                        card_height: 40px
                        card_min_height: 40px
                        lcars_color: var(--lcars-blue)
                        font_weight: bold
                        font_size: 20px
                        text_padding_top: 10px
                      label: ENVIRONMENTAL CONTROL
                    - type: thermostat
                      entity: climate.living_room
                      name: HVAC
                      show_current_as_primary: false
                      features:
                        - type: climate-hvac-modes
                          hvac_modes:
                            - heat
                            - cool
                            - heat_cool
                            - 'off'
                      card_mod:
                        class: middle
                        style: |
                          ha-card.middle {
                            background: none !important;
                          }
                    - type: custom:config-template-card
                      entities:
                        - sensor.living_room_sensor_temperature
                        - sensor.living_room_sensor_humidity
                        - climate.living_room
                      variables:
                        - states['climate.living_room'].state
                      card:
                        type: custom:mini-graph-card
                        entities:
                          - entity: sensor.living_room_sensor_temperature
                            name: Temperature
                            color: ${vars[0]==='heat' ? 'orange':'blue'}
                          - entity: sensor.living_room_sensor_humidity
                            name: Humidity
                            color: var(--green-color)
                            y_axis: secondary
                        hours_to_show: 24
                        line_width: 3
                        font_size: 50
                        animate: true
                        show:
                          name: false
                          icon: false
                          state: false
                          legend: false
                          fill: fade
                        card_mod:
                          class: middle
                          style: |
                            ha-card.middle {
                              background: none !important;
                            }
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-footer
                      variables:
                        border_bottom: 10px
                        border_left: 35px
                        card_height: 70px
                        font_weight: bold
                  view_layout:
                    grid-area: child-main-left
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-header-open
                      variables:
                        border_top: 10px
                        card_height: 40px
                        card_min_height: 40px
                        lcars_color: var(--lcars-blue)
                        font_weight: bold
                        font_size: 20px
                        text_padding_top: 10px
                      label: SENSORS
                    - square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          cards:
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              label: |
                                patio
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-orange)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.patio_sensor_temperature
                              label: |
                                [[[
                                  const state = states['sensor.patio_sensor_temperature'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-green)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.patio_sensor_humidity
                              label: |
                                [[[
                                  const state = states['sensor.patio_sensor_humidity'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:gap-card
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              label: |
                                living room
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-orange)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.living_room_sensor_temperature
                              label: |
                                [[[
                                  const state = states['sensor.living_room_sensor_temperature'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-green)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.living_room_sensor_humidity
                              label: |
                                [[[
                                  const state = states['sensor.living_room_sensor_humidity'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:gap-card
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              label: |
                                office
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-orange)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.office_sensor_temperature
                              label: |
                                [[[
                                  const state = states['sensor.office_sensor_temperature'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-green)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.office_sensor_humidity
                              label: |
                                [[[
                                  const state = states['sensor.office_sensor_humidity'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:gap-card
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              label: |
                                bedroom
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-orange)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.bedroom_sensor_temperature
                              label: |
                                [[[
                                  const state = states['sensor.bedroom_sensor_temperature'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-green)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.bedroom_sensor_humidity
                              label: |
                                [[[
                                  const state = states['sensor.bedroom_sensor_humidity'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:gap-card
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              label: |
                                bathroom
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-orange)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.bathroom_sensor_temperature
                              label: |
                                [[[
                                  const state = states['sensor.bathroom_sensor_temperature'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: var(--lcars-green)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 28px
                              entity: sensor.bathroom_sensor_humidity
                              label: |
                                [[[
                                  const state = states['sensor.bathroom_sensor_humidity'].state;
                                  const roundedState = Math.round(state * 10) / 10;
                                  let formattedValue = roundedState.toFixed(1);
                                  if (roundedState < 10) {
                                      formattedValue = formattedValue.padStart(4, '0');
                                  }
                                  return formattedValue;
                                ]]]
                            - type: custom:gap-card
                            - type: custom:gap-card
                          layout:
                            grid-template-columns: 2fr 1fr 1fr 35px
                            grid-template-rows: 45px
                            grid-auto-rows: 45px
                            grid-template-areas: |
                              "count button"
                            margin: '-4px -4px 0px -4px'
                            card_margin: 0
                            padding: 0
                            grid-area: left
                      view_layout:
                        grid-area: left
                        card_margin: 0px 0px 0px 0px
                        margin: 0px 0px 0px 0px
                    - square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:layout-card
                          layout_type: custom:grid-layout
                          cards:
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-bullet-right
                                - custom-button-animate-press
                              variables:
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: fan.400s
                              label: Air scrub
                              tap_action:
                                action: more-info
                              hold_action:
                                action: toggle
                              double_tap_action:
                                action: toggle
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_zero: var(--lcars-blue)
                                text_color_non_zero: white
                                card_active_background_color: var(--lcars-blue)
                                font_size: 40px
                              entity: sensor.400s_pm2_5
                              label: |
                                [[[
                                    const state = states['sensor.400s_pm2_5'].state;
                                    const roundedValue = Math.round(parseFloat(state));
                                    const formattedValue = roundedValue.toString().padStart(2, '0');
                                    return formattedValue;
                                ]]]
                            - type: custom:my-slider-v2
                              entity: fan.400s
                              flipped: false
                              step: 25
                              styles:
                                card:
                                  height: 60px
                                  background: none
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                progress:
                                  background: var(--lcars-blue)
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                              card_mod:
                                class: middle-right
                                style: |
                                  ha-card.middle-right {
                                    background: none !important;
                                  }
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-bullet-right
                                - custom-button-animate-press
                              variables:
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: input_boolean.bathroom_humidity_sensor_bypass
                              label: exhaust [auto]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color_non_zero: var(--success-color)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 40px
                              entity: sensor.bathroom_sensor_humidity
                              label: |
                                [[[
                                    const state = states['sensor.bathroom_sensor_humidity'].state;
                                    const roundedValue = Math.round(parseFloat(state));
                                    const formattedValue = roundedValue.toString().padStart(2, '0');
                                    return formattedValue;
                                ]]]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-button-square
                                - custom-button-animate-press
                              variables:
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: switch.bathroom_fan
                              label: bath exhaust
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-bullet-right
                                - custom-button-animate-press
                              variables:
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: >-
                                automation.fan_auto_fan_temperature_control_living_room
                              label: LR fan [auto]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 40px
                              entity: input_number.target_temp_living_room
                              label: |
                                [[[
                                    const state = states['input_number.target_temp_living_room'].state;
                                    const roundedValue = Math.round(parseFloat(state));
                                    const formattedValue = roundedValue.toString().padStart(2, '0');
                                    return formattedValue;
                                ]]]
                            - type: custom:my-slider-v2
                              entity: fan.living_room_fan
                              flipped: false
                              step: 33
                              styles:
                                card:
                                  height: 60px
                                  background: none
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                progress:
                                  background: var(--lcars-blue)
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                              card_mod:
                                class: middle-right
                                style: |
                                  ha-card.middle-right {
                                    background: none !important;
                                  }
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-bullet-right
                                - custom-button-animate-press
                              variables:
                                card_active_background_color: var(--lcars-ui-secondary)
                              entity: automation.fan_auto_bedroom
                              label: bed fan [auto]
                            - type: custom:button-card
                              template:
                                - custom-button-lcars-label
                              variables:
                                card_inactive_background_color: transparent
                                text_color: var(--lcars-blue)
                                card_active_background_color: var(--lcars-blue)
                                font_size: 40px
                              entity: input_number.target_temp_bedroom
                              label: |
                                [[[
                                    const state = states['input_number.target_temp_bedroom'].state;
                                    const roundedValue = Math.round(parseFloat(state));
                                    const formattedValue = roundedValue.toString().padStart(2, '0');
                                    return formattedValue;
                                ]]]
                            - type: custom:my-slider-v2
                              entity: fan.bedroom_fan
                              flipped: false
                              step: 33
                              styles:
                                card:
                                  height: 60px
                                  background: none
                                container:
                                  border-radius: 0
                                track:
                                  background: none
                                progress:
                                  background: var(--lcars-blue)
                                thumb:
                                  background: var(--lcars-card-bottom-color)
                              card_mod:
                                class: middle-right
                                style: |
                                  ha-card.middle-right {
                                    background: none !important;
                                  }
                          layout:
                            grid-template-columns: 1fr 65px 1fr
                            grid-template-rows: 70px 70px 70px 30px
                            grid-auto-rows: 20px
                            grid-template-areas: |
                              "count button"
                            margin: '-4px -4px 0px -4px'
                            card_margin: 0
                            padding: 0
                            grid-area: left
                      view_layout:
                        grid-area: left
                        card_margin: 0px 0px 0px 0px
                        margin: 0px 0px 0px 0px
                    - type: custom:button-card
                      template:
                        - custom-button-lcars-footer-open
                      variables:
                        border_bottom: 10px
                        card_height: 50px
                        min_card_height: 50px
                  view_layout:
                    grid-area: child-main-right
                    margin: 0px
                    padding: 0px
                    card_margin: 0px
              layout:
                grid-template-columns: 1fr 1fr
                grid-template-rows: 1fr
                grid-template-areas: |
                  "child-main-left child-main-right"
                margin: '-4px -4px 0px -4px'
                card_margin: 0
                padding: 0
              view_layout:
                grid-area: main
                margin: 0px
                padding: 0px
                card_margin: 0px
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: ENGINEERING
            card:
              type: custom:button-card
              styles:
                card:
                  - background-color: transparent
                  - height: 630px
                  - width: 780px
                  - border-top-right-radius: 0px !important
                custom_fields:
                  frigate:
                    - width: 588px
                    - position: absolute
                    - right: 0px
                    - top: 32px
                  contact_sensors:
                    - position: absolute
                    - top: 120px
                    - left: 0px
                    - width: 180px
                  camera_toggles:
                    - position: absolute
                    - bottom: 0px
                    - right: 0px
                    - width: 550px
                  lcars_header:
                    - position: absolute
                    - top: 0
                    - left: 0
                    - width: 755px
                    - height: 110px
                  lcars_header_2:
                    - position: absolute
                    - top: 10px
                    - left: 122px
                    - width: 755px
                    - height: 10px
                  lcars_header_bumper:
                    - position: absolute
                    - top: 0
                    - right: 0
                    - height: 10px
                    - width: 20px
                  lcars_footer:
                    - position: absolute
                    - bottom: 0
                    - left: 0
                    - width: 250px
                    - height: 124px
                  lcars_footer_2:
                    - position: absolute
                    - bottom: 0
                    - left: 428px
                    - width: 150px
                    - height: 16px
                  lcars_footer_3:
                    - position: absolute
                    - bottom: 24px
                    - left: 428px
                    - width: 150px
                    - height: 16px
              custom_fields:
                lcars_header:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-header
                    variables:
                      card_width: 755px
                      card_height: 112px
                      border_left: 118px
                      border_top: 7px
                      card_border_top_right_radius: 0px
                      card_inner_border_factor: 1
                lcars_header_2:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-header
                    variables:
                      card_width: 633px
                      card_height: 102px
                      border_left: 58px
                      border_top: 7px
                      card_border_top_left_radius: 30px
                      card_border_top_right_radius: 0px
                      card_inner_border_factor: 1
                lcars_header_bumper:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-bullet
                    variables:
                      card_width: 20px
                      card_height: 17.5px
                      card_min_height: 10px
                      card_background: var(--picard-orange)
                lcars_footer:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-footer
                    variables:
                      card_width: 420px
                      card_height: 124px
                      border_left: 180px
                      border_bottom: 40px
                      card_border_top_right_radius: 0px
                      card_inner_border_factor: 1
                lcars_footer_2:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-button-picard-filled
                    variables:
                      card_min_height: 17px
                      card_width: 150px
                      card_background: var(--picard-ghost-gray)
                lcars_footer_3:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-button-picard-filled
                    variables:
                      card_min_height: 17px
                      card_width: 150px
                      card_background: var(--picard-ghost-gray)
                frigate:
                  card:
                    type: custom:frigate-card
                    cameras:
                      - go2rtc:
                          modes:
                            - webrtc
                          stream: front_door_sub
                        camera_entity: camera.front_door
                        title: Front Door
                        live_provider: go2rtc
                        dependencies:
                          cameras:
                            - front_door_hd
                      - hide: true
                        camera_entity: camera.front_door
                        id: front_door_hd
                        title: Front Door HD
                        go2rtc:
                          stream: front_door
                          modes:
                            - webrtc
                        live_provider: go2rtc
                      - go2rtc:
                          modes:
                            - webrtc
                          stream: living_room_sub
                        camera_entity: camera.living_room
                        title: Living Room
                        live_provider: go2rtc
                        dependencies:
                          cameras:
                            - living_room_hd
                      - hide: true
                        camera_entity: camera.living_room
                        id: living_room_hd
                        title: Living Room HD
                        go2rtc:
                          stream: living_room
                          modes:
                            - webrtc
                        live_provider: go2rtc
                      - go2rtc:
                          modes:
                            - webrtc
                          stream: office_sub
                        camera_entity: camera.office
                        title: Office
                        live_provider: go2rtc
                        dependencies:
                          cameras:
                            - office_hd
                      - hide: true
                        camera_entity: camera.office
                        id: office_hd
                        title: Office HD
                        go2rtc:
                          stream: office
                          modes:
                            - webrtc
                        live_provider: go2rtc
                    view:
                      scan:
                        enabled: false
                      default: live
                      dark_mode: 'on'
                    live:
                      preload: false
                      controls:
                        thumbnails:
                          mode: below
                          show_details: false
                        timeline:
                          mode: none
                          style: stack
                        title:
                          duration_seconds: 5
                          mode: popup-bottom-right
                    timeline:
                      controls:
                        thumbnails:
                          mode: below
                      show_recordings: false
                    menu:
                      style: hidden
                      position: top
                      alignment: top
                      buttons:
                        mute:
                          enabled: true
                        substreams:
                          icon: mdi:high-definition-box
                        recordings:
                          enabled: true
                        microphone:
                          enabled: true
                    elements:
                      - type: custom:frigate-card-conditional
                        conditions:
                          camera:
                            - camera.front_door
                        elements:
                          - type: custom:frigate-card-menu-submenu
                            priority: 100
                            icon: mdi:cog
                            items:
                              - title: Detect
                                entity: switch.front_door_detect
                                tap_action:
                                  action: toggle
                              - title: Recordings
                                entity: switch.front_door_recordings
                                tap_action:
                                  action: toggle
                              - title: Snapshots
                                entity: switch.front_door_snapshots
                                tap_action:
                                  action: toggle
                      - type: custom:frigate-card-conditional
                        conditions:
                          camera:
                            - camera.living_room
                        elements:
                          - type: custom:frigate-card-menu-submenu
                            priority: 100
                            icon: mdi:cog
                            items:
                              - title: Detect
                                entity: switch.living_room_detect
                                tap_action:
                                  action: toggle
                              - title: Recordings
                                entity: switch.living_room_recordings
                                tap_action:
                                  action: toggle
                              - title: Snapshots
                                entity: switch.living_room_snapshots
                                tap_action:
                                  action: toggle
                    media_gallery:
                      controls:
                        thumbnails:
                          show_details: false
                          size: 75
                          show_timeline_control: false
                          show_download_control: false
                          show_favorite_control: false
                        filter:
                          mode: none
                    media_viewer:
                      controls:
                        thumbnails:
                          mode: below
                        timeline:
                          mode: below
                          style: stack
                    dimensions:
                      aspect_ratio_mode: dynamic
                    view_layout:
                      position: main
                    card_mod:
                      style: |
                        ha-card {
                          background: none !important;
                        }
                contact_sensors:
                  card:
                    type: grid
                    square: false
                    columns: 1
                    cards:
                      - type: custom:button-card
                        template:
                          - custom-button-lcars-button-picard
                          - custom-button-animate-press
                        variables:
                          card_inactive_color: var(--success-color)
                          card_active_color: var(--error-color)
                        entity: binary_sensor.patio_gate_home_security_intrusion
                        label: patio gate
                      - type: custom:button-card
                        template:
                          - custom-button-lcars-button-picard
                          - custom-button-animate-press
                        variables:
                          card_inactive_color: var(--success-color)
                          card_active_color: var(--error-color)
                        entity: binary_sensor.front_door_home_security_intrusion
                        label: front door
                      - type: custom:button-card
                        template:
                          - custom-button-lcars-button-base
                        variables:
                          card_min_height: 38px
                      - type: custom:button-card
                        template:
                          - custom-button-lcars-button-picard
                        variables:
                          card_inactive_color: var(--success-color)
                          card_active_color: var(--error-color)
                        entity: binary_sensor.front_window_home_security_intrusion
                        label: front window
                      - type: custom:button-card
                        template:
                          - custom-button-lcars-button-picard
                          - custom-button-animate-press
                        variables:
                          blink_seconds: 2s
                          state_mode: 'on'
                          card_inactive_color: var(--success-color)
                          card_active_color: var(--error-color)
                        entity: binary_sensor.office_window_home_security_intrusion
                        label: office window
                      - type: custom:button-card
                        template:
                          - custom-button-lcars-button-picard
                          - custom-button-animate-press
                        variables:
                          blink_seconds: 2s
                          state_mode: 'on'
                          card_inactive_color: var(--success-color)
                          card_active_color: var(--error-color)
                        entity: binary_sensor.bedroom_window_home_security_intrusion
                        label: bedroom
      - square: false
        type: grid
        columns: 1
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-footer
            variables:
              border_left: 202px
              border_bottom: 10px
              card_height: 50px
              card_inner_border_factor: 1
            label: >
              [[[ let lastChanged = new
              Date(states['input_text.tts_last_message'].last_changed);

              let formattedDate = lastChanged.getFullYear() + '-' + 
                  (lastChanged.getMonth() < 9 ? '0' : '') + (lastChanged.getMonth()+1) + '-' + 
                  (lastChanged.getDate() < 10 ? '0' : '') + lastChanged.getDate() + ' ' + 
                  (lastChanged.getHours() < 10 ? '0' : '') + lastChanged.getHours() + ':' + 
                  (lastChanged.getMinutes() < 10 ? '0' : '') + lastChanged.getMinutes();

              let message = states['input_text.tts_last_message'].state;

              return "[" + formattedDate + "]   " + message; ]]]
        view_layout:
          grid-area: footer-left
      - square: false
        type: grid
        columns: 1
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-footer-right
            variables:
              border_right: 260px
              border_bottom: 10px
              card_height: 50px
              card_inner_border_factor: 1
        view_layout:
          grid-area: footer-right
      - square: false
        type: grid
        columns: 1
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-header-picard-right
            variables:
              picard_border_right: 250px
              card_height: 90px
              card_width: 290px
              card_inner_border_factor: 1
              picard_border_ratio_factor: 2.65
              card_border_top_right_radius: 50px
              picard_border_gap: 5px
          - type: grid
            columns: 1
            square: false
            cards:
              - type: custom:clock-weather-card
                entity: weather.home
                sun_entity: true
                weather_icon_type: line
                forecast_rows: 0
                time_format: 24
                hourly_forecast: false
                hide_today_section: false
                hide_forecast_section: true
                time_pattern: HH:mm:ss
                date_pattern: yyyy-mm-dd [cccc]
                temperature_sensor: sensor.patio_sensor_temperature
                humidity_sensor: sensor.patio_sensor_humidity
                show_humidity: false
                card_mod:
                  class: middle-open
                  style: |
                    ha-card.middle-open {
                      background: none !important;
                    }
                    .card-content {
                      padding-top: 0;
                      padding-bottom: 0;
                      padding-right: 0;
                    }
                layout:
                  grid_area: right
          - type: conditional
            conditions:
              - condition: state
                entity: input_select.lcars_ui_page_selector
                state: HOME
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              grid-template-columns: 35px 1fr 1fr
              grid-template-rows: 60px
              grid-auto-rows: 60px
              grid-template-areas: |
                "left right"
              margin: '-4px -4px 0px -4px'
              card_margin: 0
              padding: 0
              cards:
                - type: custom:gap-card
                - square: false
                  type: grid
                  cards:
                    - type: custom:clock-weather-card
                      entity: weather.home
                      sun_entity: true
                      weather_icon_type: line
                      forecast_rows: 4
                      time_format: 24
                      hourly_forecast: false
                      hide_today_section: true
                      temperature_sensor: sensor.patio_sensor_temperature
                      card_mod:
                        class: middle-open
                        style: |
                          ha-card.middle-open {
                            background: none !important;
                          }
                    - type: custom:clock-weather-card
                      entity: weather.openweathermap_home_hourly
                      sun_entity: true
                      weather_icon_type: line
                      forecast_rows: 4
                      time_format: 24
                      hourly_forecast: true
                      hide_today_section: true
                      temperature_sensor: sensor.patio_sensor_temperature
                      card_mod:
                        class: middle-open
                        style: |
                          ha-card.middle-open {
                            background: none !important;
                          }
                  columns: 1
              layout:
                grid-template-columns: 20px 1fr
                grid-template-rows: auto
          - type: custom:layout-card
            layout_type: custom:grid-layout
            grid-template-columns: 35px 1fr 1fr
            grid-template-rows: 60px
            grid-auto-rows: 60px
            grid-template-areas: |
              "left right"
            margin: '-4px -4px 0px -4px'
            card_margin: 0
            padding: 0
            cards:
              - type: custom:gap-card
              - type: custom:button-card
                template:
                  - custom-button-lcars-bullet-right
                  - custom-button-animate-press
                variables:
                  blink_card_background_color: var(--card-background-color)
                  state_mode: 'off'
                  card_active_background_color: var(--lcars-blue)
                entity: input_boolean.enable_verbal_notifications
                label: TTS Alerts
                show_icon: false
              - type: custom:button-card
                template:
                  - custom-button-state-blink
                  - custom-button-lcars-bullet
                  - custom-button-animate-press
                variables:
                  blink_seconds: 2s
                  blink_state_mode: 'off'
                  card_active_background_color: var(--lcars-green)
                entity: switch.adguard_home_protection
                label: adguard
              - type: custom:gap-card
              - type: custom:gap-card
              - type: custom:button-card
                template:
                  - custom-button-lcars-bullet
                  - custom-button-animate-press
                entity: input_boolean.dreamview_switch
                label: Dreamview
                show_icon: false
              - type: custom:gap-card
              - type: custom:button-card
                template:
                  - custom-button-lcars-bullet-right
                  - custom-button-animate-press
                variables:
                  ripple_color: red
                show_icon: true
                label: esc
                tap_action:
                  action: navigate
                  navigation_path: /dashboard-lcars/scratch2
              - type: custom:button-card
                template:
                  - custom-button-lcars-bullet
                  - custom-button-animate-press
                variables:
                  ripple_color: red
                show_icon: true
                label: go to bed
                entity: input_button.go_to_bed
                tap_action:
                  action: none
                double_tap_action:
                  action: more-info
                hold_action:
                  action: call-service
                  service: input_button.press
                  data:
                    entity_id: input_button.go_to_bed
                size: 30px
            layout:
              grid-template-columns: 18px 1fr 1fr
              grid-template-rows: auto
              grid-auto-rows: auto
              grid-template-areas: |
                "count button"
        view_layout:
          grid-area: right
      - type: custom:button-card
        template:
          - custom-button-lcars-header-picard
        variables:
          picard_border_left: 202px
          card_height: 105px
          card_width: 980px
          card_inner_border_factor: 1
          picard_border_ratio_factor: 1.35
          card_border_top_left_radius: 50px
          picard_border_gap: 5px
        show_label: true
        label: |
          [[[ 
            return html`<elt>TBD - some<br><font color=red>messages about stuff</font> or <font color=blue>just nothing</font></elt>`;
          ]]]
        view_layout:
          grid-area: header-left
  - title: lcars-template-gallery
    path: lcars-template-gallery
    type: sections
    sections:
      - type: grid
        cards:
          - type: custom:button-card
            template: custom-button-lcars-base
            label: custom-button-lcars-base
          - type: custom:button-card
            template: custom-button-lcars-header-open
            label: lcars-header-open
          - type: custom:button-card
            template: custom-button-lcars-header
            label: lcars-header
          - type: custom:button-card
            template: custom-button-lcars-header-right
            label: lcars-header-right
          - type: custom:button-card
            template: custom-button-lcars-header-contained
            label: lcars-header-contained
        title: LCARS Headers
      - type: grid
        cards:
          - type: custom:button-card
            template: custom-button-lcars-footer-base
            label: custom-button-lcars-footer-base
          - type: custom:button-card
            template: custom-button-lcars-footer-open
            label: lcars-footer-open
          - type: custom:button-card
            template: custom-button-lcars-footer
            label: lcars-footer
          - type: custom:button-card
            template: custom-button-lcars-footer-right
            label: lcars-footer-right
          - type: custom:button-card
            template: custom-button-lcars-footer-contained
            label: lcars-footer-contained
        title: LCARS Footers
      - type: grid
        cards:
          - type: custom:button-card
            template: custom-button-lcars-header-picard
            variables:
              card_label: lcars-header-picard-left
          - type: custom:button-card
            template: custom-button-lcars-header-picard-right
            variables:
              card_label: lcars-header-picard-right
          - type: custom:button-card
            template: custom-button-lcars-footer-picard
            variables:
              card_label: lcars-footer-picard-left
          - type: custom:button-card
            template: custom-button-lcars-footer-picard-right
            variables:
              card_label: lcars-footer-picard-right
          - type: custom:button-card
            template: custom-button-lcars-header-picard
            variables:
              card_label: lcars-header-picard-left
              picard_border_ratio_factor: 1.3
        title: LCARS Headers Picard
      - type: grid
        cards:
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-button-base
            label: lcars-button-base
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-button-square
            label: lcars-button-square
        title: LCARS Button Bases
      - type: grid
        cards:
          - type: custom:button-card
            template: custom-button-lcars-button-picard
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard
          - type: custom:button-card
            template: custom-button-lcars-button-picard
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard
            show_icon: true
          - type: custom:button-card
            template: custom-button-lcars-button-picard-right
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-right
          - type: custom:button-card
            template: custom-button-lcars-button-picard-right
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-right
            show_icon: true
          - type: custom:button-card
            template: custom-button-lcars-button-picard
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard
            variables:
              text_color_on: var(--picard-blue)
              card_active_color: var(--picard-blue)
        title: Picard Button [open)
      - type: grid
        cards:
          - type: custom:button-card
            template: custom-button-lcars-button-picard-filled
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-filled
          - type: custom:button-card
            template: custom-button-lcars-button-picard-filled
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-filled
            show_icon: true
          - type: custom:button-card
            template: custom-button-lcars-button-picard-filled-right
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-filled-right
          - type: custom:button-card
            template: custom-button-lcars-button-picard-filled-right
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-filled-right
            show_icon: true
          - type: custom:button-card
            template: custom-button-lcars-button-picard-filled
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-filled
            show_icon: true
            variables:
              icon_active_color: transparent
              icon_inactive_color: transparent
              icon_active_background_color: var(--picard-blue)
              icon_inactive_background_color: transparent
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled
              - custom-button-lcars-button-picard-label-ne
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-label-ne
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled
              - custom-button-lcars-button-picard-label-sw
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-label-sw
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled
              - custom-button-lcars-button-picard-label-se
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-label-se
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled
              - custom-button-lcars-button-picard-label-se
            entity: input_boolean.enable_verbal_notifications
            label: lcars-button-picard-label-sw
        title: Picard Button [filled]
      - type: grid
        cards:
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-lozenge
            label: lcars-button-lozenge
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-lozenge
            label: lcars-button-lozenge
            show_icon: true
            styles:
              icon:
                - display: flex
                - align-items: center
                - justify-content: center
                - '--mdc-icon-size': 24px
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-lozenge-right
            label: lcars-button-lozenge-right
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-lozenge-right
            label: lcars-button-lozenge-right
            show_icon: true
        title: LCARS Lozenge
      - type: grid
        cards:
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-bullet
            label: lcars-button-bullet
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-bullet
            label: lcars-button-bullet
            show_icon: true
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-bullet-right
            label: lcars-button-bullet-right
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-bullet-right
            label: lcars-button-bullet-right
            show_icon: true
        title: LCARS Bullet
      - type: grid
        cards:
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-capped
            label: lcars-button-capped
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-capped
            label: lcars-button-capped
            show_icon: true
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-capped-right
            label: lcars-button-capped-right
          - type: custom:button-card
            entity: input_boolean.enable_verbal_notifications
            template: custom-button-lcars-capped-right
            label: lcars-button-capped-right
            show_icon: true
        title: LCARS Capped
      - type: grid
        cards:
          - type: custom:button-card
            template: custom-button-lcars-button-picard-icon
            entity: input_boolean.enable_verbal_notifications
          - type: custom:button-card
            template: custom-button-lcars-button-picard-icon
            entity: input_boolean.enable_verbal_notifications
            variables:
              icon_active_color: white
              icon_active_background_color: blue
              icon_inactive_color: black
              icon_inactive_background_color: gray
        title: Picard Button Icon
      - type: grid
        cards: []
      - type: grid
        cards:
          - type: custom:button-card
            template: custom-button-lcars-label
            label: lcars-label
            entity: input_boolean.enable_verbal_notifications
            show_state: true
            show_label: false
          - type: custom:button-card
            template:
              - custom-button-lcars-bar-large
            label: lcars-bar-large
          - type: custom:button-card
            template: custom-button-lcars-bar-large
            label: this is shit
          - type: custom:button-card
            template: custom-button-lcars-label
            label: lcars-label
            entity: input_boolean.enable_verbal_notifications
            show_state: true
            show_label: false
            variables:
              label: ' '
              lcars_color: transparent
              font_size: 40px
              font_weight: bold
              text_padding_top: 0px
              text_padding_bottom: 5px
              text_transform: uppercase
              text_align: center
              text_justify: center
              text_color_on: var(--picard-blue)
              text_color_off: var(--picard-orange)
              text_color_zero: var(--lcars-green)
              text_color_non_zero: var(--lcars-blue)
              text_color_hvac_heat: var(--lcars-orange)
              text_color_hvac_cool: var(--lcars-blue)
              text_color_hvac_other: var(--lcars-purple)
        title: lcars-label
      - type: grid
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-header-picard
            variables:
              card_height: 160px
              card_width: 400px
              card_label: testing...ffd
              card_border_top_left_radius: 90px
              card_inner_border_factor: 2
              picard_border_gap: 4px
              picard_border_ratio_factor: 4
              picard_border_top: 20px
              picard_border_left: 180px
              picard_lcars_outer_border_left: 60px
              picard_lcars_outer_border_top: 60px
              picard_lcars_inner_border_left: px
              picard_lcars_inner_border_top: 45px
              picard_lcars_inner_border_top_left_radius: >-
                [[[ return "calc((" + variables.card_border_top_left_radius + "
                ) / " + variables.card_inner_border_factor +" )";]]]
              picard_lcars_inner_border_factor: 0.7
              picard_lcars_outer_color: var(--lcars-blue)
              picard_lcars_inner_color: var(--lcars-card-top-color)
          - type: custom:button-card
            template:
              - custom-button-lcars-footer-picard
            variables:
              card_height: 160px
              card_width: 400px
              card_border_bottom_left_radius: 90px
              card_inner_border_factor: 2
              picard_border_gap: 4px
              picard_border_ratio_factor: 4
              picard_border_bottom: 20px
              picard_border_left: 180px
              picard_lcars_outer_border_left: 60px
              picard_lcars_outer_border_bottom: 60px
              picard_lcars_inner_border_left: 0
              picard_lcars_inner_border_bottom: 45px
              picard_lcars_inner_border_factor: 0.7
              picard_lcars_outer_color: var(--lcars-blue)
              picard_lcars_inner_color: var(--lcars-card-top-color)
          - type: custom:button-card
            template:
              - custom-button-lcars-header-picard-right
            variables:
              card_height: 160px
              card_width: 400px
              card_border_top_right_radius: 90px
              card_inner_border_factor: 2
              picard_border_gap: 4px
              picard_border_ratio_factor: 4
              picard_border_top: 20px
              picard_border_left: 180px
              picard_lcars_outer_border_right: 60px
              picard_lcars_outer_border_top: 60px
              picard_lcars_inner_border_right: 0px
              picard_lcars_inner_border_top: 45px
              picard_lcars_inner_border_top_right_radius: >-
                [[[ return "calc((" + variables.card_border_top_right_radius + "
                ) / " + variables.card_inner_border_factor +" )";]]]
              picard_lcars_inner_border_factor: 0.7
              picard_lcars_outer_color: var(--lcars-blue)
              picard_lcars_inner_color: var(--lcars-card-top-color)
          - type: custom:button-card
            template:
              - custom-button-lcars-footer-picard-right
            variables:
              card_height: 160px
              card_width: 400px
              card_border_bottom_right_radius: 90px
              card_inner_border_factor: 2
              picard_border_gap: 4px
              picard_border_ratio_factor: 4
              picard_lcars_outer_border_right: 60px
              picard_lcars_outer_border_bottom: 60px
              picard_lcars_inner_border_right: 0px
              picard_lcars_inner_border_bottom: 45px
              picard_lcars_inner_border_factor: 0.7
              picard_lcars_outer_color: var(--lcars-blue)
              picard_lcars_inner_color: var(--lcars-card-top-color)
        title: Picard Elbow Variations
      - type: grid
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-footer-picard
            variables:
              card_height: 176px
              card_width: 350px
              card_border_bottom_left_radius: 160px
              picard_border_gap: 5px
              card_inner_border_factor: 1.27
              card_inner_border_width: 50px
              picard_lcars_inner_color: var(--picard-light-gray)
              picard_lcars_outer_border_bottom: 45px
              picard_lcars_inner_border_bottom: 0px
              picard_lcars_outer_border_left: 45px
              picard_lcars_inner_border_left: 155px
              picard_lcars_inner_border_factor: 1.5
            show_label: false
            label: |
              [[[ 
                return html`<elt>TBD - some<br><font color=red>messages about stuff</font> or <font color=blue>just nothing</font></elt>`;
              ]]]
            view_layout:
              grid-area: footer-left
          - type: custom:button-card
            view_layout:
              grid-area: footer-right
            styles:
              card:
                - background: transparent
                - width: 300px
                - height: 180px
                - border-radius: 0px 0px 0px 0px !important
              custom_fields:
                header_elbow:
                  - position: absolute
                  - top: 0
                  - right: 0
            custom_fields:
              header_elbow:
                card:
                  type: custom:button-card
                  template:
                    - custom-button-lcars-footer-picard-right
                  variables:
                    card_height: 180px
                    card_width: 300px
                    card_inner_border_factor: 1.4
                    card_inner_border_width: 50px
                    picard_lcars_outer_color: var(--lcars-ui-secondary)
                    picard_lcars_inner_color: var(--lcars-ui-primary)
                    picard_border_ratio_factor: 1.27
                    card_border_bottom_right_radius: 160px
                    picard_border_gap: 5px
                    picard_lcars_outer_border_bottom: 45px
                    picard_lcars_inner_border_bottom: 10px
                    picard_lcars_outer_border_right: 45px
                    picard_lcars_inner_border_right: 10px
                    picard_lcars_inner_border_factor: 2
          - type: custom:button-card
            view_layout:
              grid-area: footer-right
            styles:
              card:
                - background: transparent
                - width: 300px
                - height: 175px
                - border-radius: 0px 0px 0px 0px !important
              custom_fields:
                elbow:
                  - position: absolute
                  - top: 5px
                  - right: 0
            custom_fields:
              elbow:
                card:
                  type: custom:button-card
                  template:
                    - custom-button-lcars-footer-picard-right
                  variables:
                    card_height: 170px
                    card_width: 500px
                    card_border_bottom_right_radius: 80px
                    picard_border_gap: 5px
                    card_inner_border_factor: 1.6
                    card_inner_border_width: 50px
                    picard_lcars_inner_color: var(--lcars-card-bottom-color)
                    picard_lcars_outer_color: var(--lcars-ui-secondary)
                    picard_lcars_outer_border_bottom: 45px
                    picard_lcars_inner_border_bottom: 0px
                    picard_lcars_outer_border_right: 130px
                    picard_lcars_inner_border_right: 165px
                    picard_lcars_inner_border_factor: 1
          - type: custom:button-card
            view_layout:
              grid-area: footer-right
            styles:
              card:
                - background-color: |
                    [[[
                      if (states['input_boolean.lcars_ui_debug'].state === 'on') {
                        return 'rgba(150,0,0,0.3)';
                      } else {
                        return 'transparent';
                      }
                    ]]]
                - width: 300px
                - height: 175px
                - border-radius: 0 !important
              custom_fields:
                elbow:
                  - position: absolute
                  - bottom: 0
                  - right: 0
                inner_elbow:
                  - position: absolute
                  - left: 0px
                  - top: 0px
            custom_fields:
              inner_elbow:
                card:
                  type: custom:button-card
                  template:
                    - custom-button-lcars-footer-picard-right
                  variables:
                    card_height: 139px
                    card_width: 100px
                    card_inner_border_factor: 1
                    card_inner_border_width: 50px
                    picard_lcars_outer_color: transparent
                    picard_lcars_inner_color: var(--lcars-ui-secondary)
                    picard_border_ratio_factor: 1
                    card_border_bottom_right_radius: 80px
                    picard_border_gap: 4px
                    picard_lcars_outer_border_bottom: 20px
                    picard_lcars_inner_border_bottom: 5px
                    picard_lcars_outer_border_right: 15px
                    picard_lcars_inner_border_right: 5px
                    picard_lcars_inner_border_factor: 1
                    picard_lcars_inner_border_bottom_right_radius: 60px
              elbow:
                card:
                  type: custom:button-card
                  template:
                    - custom-button-lcars-footer-picard-right
                  variables:
                    card_height: 175px
                    card_width: 500px
                    card_border_bottom_right_radius: 80px
                    picard_border_gap: 4px
                    card_inner_border_factor: 1.2
                    card_inner_border_width: 50px
                    picard_lcars_inner_color: var(--lcars-card-bottom-color)
                    picard_lcars_outer_color: var(--lcars-ui-secondary)
                    picard_lcars_outer_border_bottom: 6px
                    picard_lcars_inner_border_bottom: 45px
                    picard_lcars_outer_border_right: 6px
                    picard_lcars_inner_border_right: 205px
                    picard_lcars_inner_border_factor: 1
        title: More Elbow variations (LCARS2)
      - type: grid
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-picard-horizontal
            variables:
              card_height: 200px
              card_width: 400px
              picard_border_gap: 5px
              picard_lcars_1_width: 400px
              picard_lcars_1_label: custom-button-lcars-picard-horizontal
              picard_lcars_2_label: default-50/50-split
          - type: custom:button-card
            template:
              - custom-button-lcars-picard-horizontal
            variables:
              card_height: 200px
              card_width: 400px
              picard_border_gap: 5px
              picard_lcars_1_color: var(--picard-orange)
              picard_lcars_2_color: var(--picard-blue)
              picard_lcars_1_height: 100px
              picard_lcars_2_height: 60px
              picard_lcars_1_width: 400px
              picard_lcars_1_label: picard-horizontal-1
              picard_lcars_2_label: picard-horizontal-2
          - type: custom:button-card
            template: custom-button-lcars-picard-vertical
            variables:
              card_height: 80px
              card_width: 400px
              picard_border_gap: 5px
              picard_lcars_1_label: picard-vertical
              picard_lcars_2_label: 50/50-split
          - type: custom:button-card
            template: custom-button-lcars-picard-vertical
            variables:
              card_height: 80px
              card_width: 400px
              picard_border_gap: 5px
              picard_lcars_1_color: var(--picard-orange)
              picard_lcars_2_color: var(--picard-blue)
              picard_lcars_1_width: 250px
              picard_lcars_2_width: 140px
              picard_lcars_1_label: picard-vertical-1
              picard_lcars_2_label: picard-vertical-2
        title: Picard Panels (dual-pane vert+horiz)
      - type: grid
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-picard-horizontal
            variables:
              card_height: 200px
              card_width: 400px
              picard_border_gap: 5px
              picard_lcars_1_width: 400px
              picard_lcars_1_label: custom-button-lcars-picard-horizontal
              picard_lcars_2_label: default-50/50-split
            styles:
              card:
                - transform: skew(-15deg);
          - type: custom:button-card
            view_layout:
              grid-area: footer-right
            styles:
              card:
                - background-color: |
                    [[[
                      if (states['input_boolean.lcars_ui_debug'].state === 'on') {
                        return 'rgba(150,0,0,0.3)';
                      } else {
                        return 'transparent';
                      }
                    ]]]
                - width: 300px
                - height: 175px
                - border-radius: 0 !important
                - transform: skew(-20deg);
              custom_fields:
                elbow:
                  - position: absolute
                  - bottom: 0
                  - right: 0
                inner_elbow:
                  - position: absolute
                  - left: 0px
                  - top: 0px
            custom_fields:
              inner_elbow:
                card:
                  type: custom:button-card
                  template:
                    - custom-button-lcars-footer-picard-right
                  variables:
                    card_height: 139px
                    card_width: 100px
                    card_inner_border_factor: 1
                    card_inner_border_width: 50px
                    picard_lcars_outer_color: transparent
                    picard_lcars_inner_color: var(--lcars-ui-secondary)
                    picard_border_ratio_factor: 1
                    card_border_bottom_right_radius: 80px
                    picard_border_gap: 4px
                    picard_lcars_outer_border_bottom: 20px
                    picard_lcars_inner_border_bottom: 5px
                    picard_lcars_outer_border_right: 15px
                    picard_lcars_inner_border_right: 5px
                    picard_lcars_inner_border_factor: 1
                    picard_lcars_inner_border_bottom_right_radius: 60px
                  styles:
                    card:
                      - transform: skew(-20deg);
              elbow:
                card:
                  type: custom:button-card
                  template:
                    - custom-button-lcars-footer-picard-right
                  variables:
                    card_height: 175px
                    card_width: 500px
                    card_border_bottom_right_radius: 80px
                    picard_border_gap: 4px
                    card_inner_border_factor: 1.2
                    card_inner_border_width: 50px
                    picard_lcars_inner_color: var(--lcars-card-bottom-color)
                    picard_lcars_outer_color: var(--lcars-ui-secondary)
                    picard_lcars_outer_border_bottom: 6px
                    picard_lcars_inner_border_bottom: 45px
                    picard_lcars_outer_border_right: 6px
                    picard_lcars_inner_border_right: 205px
                    picard_lcars_inner_border_factor: 1
                  styles:
                    card:
                      - transform: skew(-20deg);
        title: Picard - Skewed Panels
      - type: grid
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-button-grid
          - type: custom:button-card
            template:
              - custom-button-lcars-button-grid
            variables:
              num_cols: 3
              num_rows: 3
              buttons:
                - entity: input_boolean.enable_verbal_notifications
                  label: TTS
                - entity: input_boolean.enable_verbal_notifications
                  label: TTS-color
                  variables:
                    card_active_background_color: blue
                - entity: input_boolean.enable_verbal_notifications
                  label: TTS-icon
                  show_icon: true
                  variables:
                    card_active_background_color: yellow
                - entity: input_boolean.enable_verbal_notifications
                  label: TTS-icon-color
                  show_icon: true
                  variables:
                    card_active_background_color: green
                    icon_active_background_color: white
                    icon_active_color: red
                - entity: input_boolean.enable_verbal_notifications
                  label: TTS-icon
                  show_icon: true
                  variables:
                    card_active_background_color: yellow
                - entity: input_boolean.enable_verbal_notifications
                  label: TTS-lozenge
                  show_icon: false
                  variables:
                    card_active_background_color: cyan
                  template:
                    - custom-button-lcars-lozenge
          - type: custom:button-card
            template:
              - custom-button-lcars-button-grid
            variables:
              button_template:
                - custom-button-lcars-lozenge
              button_height: 65px
              button_gap: 19px
              button_inactive_background_color: var(--lcars-blue)
          - type: custom:button-card
            view_layout:
              grid-area: header
            styles:
              card:
                - background: transparent
                - height: 130px
                - width: 923px
                - border-radius: 0 !important
              custom_fields:
                button_grid:
                  - position: absolute
                  - left: 85px
                  - top: 0px
            custom_fields:
              button_grid:
                card:
                  type: custom:button-card
                  template:
                    - custom-button-lcars-button-grid
                  variables:
                    num_cols: 4
                    num_rows: 2
                    grid_template_columns: 180px 180px 180px 275px
                    card_width: 923px
                    card_height: 130px
                    buttons:
                      - entity: person.dexter
                        label: the dex
                        template:
                          - custom-button-lcars-button-picard-filled
                          - custom-button-animate-press
                        state:
                          - id: state_on
                            value: home
                          - id: state_off
                            value: not_home
                        tap_action:
                          action: more-info
                        hold_action:
                          action: none
                        double_tap_action:
                          action: none
                        variables:
                          font_size: 22px
                          card_inactive_background_color: var(--warning-color)
                          card_active_background_color: var(--picard-blue)
                      - entity: person.luna
                        label: luna
                        template:
                          - custom-button-lcars-button-picard-filled
                          - custom-button-lcars-button-picard-label-se
                          - custom-button-animate-press
                        state:
                          - id: state_on
                            value: home
                          - id: state_off
                            value: not_home
                        tap_action:
                          action: more-info
                        hold_action:
                          action: none
                        double_tap_action:
                          action: none
                        variables:
                          card_inactive_background_color: var(--lcars-ui-secondary)
                          card_active_background_color: var(--warning-color)
                      - show_icon: true
                        icon: none
                        size: 24px
                        variables:
                          icon_active_color: transparent
                          icon_inactive_color: transparent
                          icon_active_background_color: var(--picard-blue)
                          icon_inactive_background_color: transparent
                          card_active_color: var(--picard-green)
                          card_inactive_color: var(--error-color)
                          card_inactive_background_color: var(--lcars-ui-secondary)
                          card_active_background_color: var(--picard-starlight)
                          lcars_color: var(--error-color)
                          card_width: 180px
                          card_min_height: 45px
                        entity: input_boolean.enable_verbal_notifications
                        label: tts alerts
                      - entity: switch.adguard_home_protection
                        label: ad-guard
                        variables:
                          card_width: 275px
                          card_active_background_color: var(--lcars-ui-secondary)
                          card_inactive_background_color: var(--error-color)
                      - entity: person.dexter
                        show_state: true
                        show_label: false
                        tap_action:
                          action: more-info
                        hold_action:
                          action: none
                        double_tap_action:
                          action: none
                        variables:
                          card_height: 80px
                      - variables:
                          card_height: 80px
                      - variables:
                          card_height: 80px
                      - variables:
                          card_width: 275px
                          card_height: 80px
        title: LCARS Button Grids
      - type: grid
        cards: []
      - type: grid
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-meter
        title: Meter (default 10-step)
      - type: grid
        cards:
          - type: custom:button-card
            template: custom-button-lcars-meter
            variables:
              _start_color: var(--picard-cyan)
              _end_color: var(--picard-dark-blue)
          - type: custom:button-card
            template: custom-button-lcars-meter
            variables:
              _start_color: var(--picard-cyan)
              _end_color: var(--picard-dark-blue)
              button_height: 15px
              button_template:
                - custom-button-lcars-button-picard-filled
        title: Meter (custom color/button shape)
      - type: grid
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-meter
            variables:
              _total_steps: 20
              _start_color: var(--error-color)
              _end_color: var(--lcars-blue)
              button_height: 10px
        title: Meter (custom num steps+color)
      - type: grid
        cards:
          - type: custom:button-card
            template: custom-button-lcars-slider
            variables:
              entity: light.desk
          - type: custom:button-card
            template: custom-button-lcars-slider
            variables:
              entity: light.desk
              slider_color_mask: rgba(0,0,0,0.8)
        title: LCARS Slider (entity control)
      - type: grid
        cards:
          - type: custom:button-card
            template: custom-button-lcars-slider-horizontal
            variables:
              entity: light.tv
              meter_button_template: custom-button-lcars-button-picard-filled
              slider_color_mask: rgba(0,0,0,0.7)
          - type: custom:button-card
            template: custom-button-lcars-slider-horizontal
            variables:
              entity: light.tv
              meter_start_color: var(--picard-dark-blue)
              meter_end_color: var(--picard-cyan)
              meter_button_template: custom-button-lcars-lozenge
              slider_color_mask: rgba(0,0,0,0.7)
          - type: custom:button-card
            template: custom-button-lcars-slider-horizontal
            variables:
              entity: light.tv
              meter_start_color: var(--picard-dark-blue)
              meter_end_color: var(--picard-cyan)
              meter_button_template: custom-button-lcars-lozenge
              slider_color_mask: rgba(0,0,0,0.7)
              meter_button_width: 20px
              meter_button_height: 20px
              meter_button_gap: 5px
        title: LCARS Slider Horiz (entity control)
    max_columns: 3
    cards: []
  - title: Screensaver
    path: screensaver
    cards:
      - type: custom:button-card
        styles:
          card:
            - background-color: transparent !important
            - width: 600px
            - height: 430px
            - border-top-left-radius: 0 !important
          custom_fields:
            lcars_header:
              - position: absolute
              - top: 0px
              - right: 0px
            clock:
              - position: absolute
              - width: 300px
              - height: 120px
              - top: 25px
              - left: 25px
            button_panel:
              - position: absolute
              - right: 0px
              - bottom: 5px
              - width: 210px
        custom_fields:
          lcars_header:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-header-picard-right
              variables:
                card_width: 600px
                card_height: 170px
                picard_lcars_outer_color: var(--picard-blue)
                picard_lcars_inner_color: var(--picard-dark-blue)
                card_border_top_right_radius: 120px
                card_inner_border_width: 50px
                picard_border_gap: 5px
                picard_lcars_outer_border_top: 10px
                picard_lcars_inner_border_top: 10px
                picard_lcars_outer_border_right: 155px
                picard_lcars_inner_border_right: 50px
          clock:
            card:
              type: custom:simple-clock-card
              use_military: true
              hide_seconds: false
              bold_clock: false
              lead_zero: true
              font_size: 7rem
              card_mod:
                style: |
                  ha-card {
                    height: 110px;
                    background: transparent !important;
                    color: var(--picard-starlight)
                  } 
          button_panel:
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              cards:
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                  variables:
                    text_justify: center
                    font_size: 26px
                    font_weight: bold
                    text_padding_bottom: 5px
                    text_color_zero: var(--error-color)
                    text_color_non_zero: var(--picard-starlight)
                  entity: sensor.cats_home
                  show_state: false
                  show_name: false
                  show_label: true
                  label: |
                    [[[
                        const state = states['sensor.cats_home'].state;
                        const roundedValue = Math.round(parseFloat(state));
                        const formattedValue = roundedValue.toString().padStart(2, '0');
                        return formattedValue;
                    ]]]
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                    - custom-button-animate-press
                  variables:
                    card_inactive_background_color: var(--error-color)
                    card_inactive_color: var(--error-color)
                    card_active_background_color: var(--picard-blue)
                    card_active_color: var(--picard-blue)
                    border_top: 3px
                    border_left: 3px
                    border_right: 3px
                    border_bottom: 3px
                    font_weight: normal
                  state:
                    - id: state_on
                      value: home
                    - id: state_off
                      value: not_home
                  entity: person.dexter
                  label: the dex
                  tap_action:
                    action: more-info
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                  variables:
                    text_justify: center
                    font_size: 26px
                    font_weight: bold
                    text_padding_bottom: 5px
                    text_color_zero: var(--picard-blue)
                    text_color_non_zero: var(--error-color)
                  entity: sensor.contact_sensors_open
                  show_state: false
                  show_name: false
                  show_label: true
                  label: |
                    [[[
                        const state = states['sensor.contact_sensors_open'].state;
                        const roundedValue = Math.round(parseFloat(state));
                        const formattedValue = roundedValue.toString().padStart(2, '0');
                        return formattedValue;
                    ]]]
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                    - custom-button-animate-press
                  icon: none
                  size: 24px
                  variables:
                    card_inactive_color: var(--picard-blue)
                    card_inactive_background_color: var(--picard-blue)
                    card_active_color: var(--error-color)
                    card_active_background_color: var(--error-color)
                    border_top: 3px
                    border_left: 3px
                    border_right: 3px
                    border_bottom: 3px
                    font_weight: normal
                  entity: binary_sensor.patio_gate_home_security_intrusion
                  label: patio gate
                  tap_action: more-info
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                  variables:
                    text_justify: center
                    font_size: 26px
                    font_weight: bold
                    text_padding_bottom: 5px
                  entity: climate.living_room
                  show_state: false
                  show_name: false
                  show_label: true
                  label: |
                    [[[
                        const state = states['sensor.home_average_temperature_template'].state;
                        const roundedValue = Math.round(parseFloat(state));
                        const formattedValue = roundedValue.toString().padStart(2, '0');
                        return formattedValue;
                    ]]]
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-dense
                    - custom-button-animate-press
                  icon: none
                  size: 24px
                  variables:
                    card_active_color: var(--picard-cyan)
                    icon_active_color: transparent
                    icon_inactive_color: transparent
                    icon_active_background_color: var(--picard-blue)
                    icon_inactive_background_color: transparent
                  entity: climate.living_room
                  show_state: true
                  tap_action:
                    action: call-service
                    service: input_select.select_option
                    data:
                      entity_id: input_select.lcars_ui_page_selector
                      option: LIGHTS II
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                  variables:
                    text_justify: center
                    font_size: 26px
                    font_weight: bold
                    text_padding_bottom: 5px
                    text_color_zero: var(--picard-dark-blue)
                    text_color_non_zero: var(--picard-blue)
                    card_inactive_background_color: var(--lcars-ui-secondary)
                    card_active_background_color: var(--picard-blue)
                  entity: input_boolean.enable_verbal_notifications
                  show_state: true
                  show_label: false
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled
                    - custom-button-animate-press
                  show_icon: false
                  icon: none
                  size: 24px
                  variables:
                    icon_active_color: transparent
                    icon_inactive_color: transparent
                    icon_active_background_color: var(--picard-blue)
                    icon_inactive_background_color: transparent
                    card_active_color: var(--picard-green)
                    card_inactive_color: var(--error-color)
                    card_inactive_background_color: var(--lcars-ui-secondary)
                    card_active_background_color: var(--picard-starlight)
                    lcars_color: var(--error-color)
                    card_min_height: 50px
                  entity: input_boolean.enable_verbal_notifications
                  label: tts alerts
                  tap_action:
                    action: toggle
                  hold_action:
                    action: more-info
                  double_tap_action:
                    action: none
              layout:
                grid-template-columns: 55px 160px
                grid-template-rows: auto
                grid-auto-rows: auto
                card_margin: 0
                padding: 0
                margin: '-4px -4px 0px -4px'
                grid-column-gap: 0px
      - type: custom:layout-card
        layout_type: custom:grid-layout
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-label
            variables:
              card_inactive_background_color: transparent
              font_size: 32px
              card_min_height: 45px
              text_color_zero: var(--error-color)
              text_color_non_zero: white
            entity: sensor.cats_home
            show_state: false
            show_name: false
            show_label: true
            label: |
              [[[
                  const state = states['sensor.cats_home'].state;
                  const roundedValue = Math.round(parseFloat(state));
                  const formattedValue = roundedValue.toString().padStart(2, '0');
                  return formattedValue;
              ]]]
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            variables:
              card_active_color: var(--picard-blue)
              border_top: 3px
              border_left: 3px
              border_right: 3px
              border_bottom: 3px
              font_weight: normal
            state:
              - id: state_on
                value: home
              - id: state_off
                value: not_home
            entity: person.dexter
            label: the dex
            tap_action:
              action: more-info
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-label
            variables:
              card_inactive_background_color: transparent
              font_size: 32px
              card_min_height: 45px
            entity: climate.living_room
            show_state: false
            show_name: false
            show_label: true
            label: |
              [[[
                  const state = states['sensor.home_average_temperature_template'].state;
                  const roundedValue = Math.round(parseFloat(state));
                  const formattedValue = roundedValue.toString().padStart(2, '0');
                  return formattedValue;
              ]]]
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            variables:
              border_top: 3px
              border_left: 3px
              border_right: 3px
              border_bottom: 3px
              font_weight: normal
              card_active_color: var(--picard-starlight)
            entity: climate.living_room
            show_state: true
            tap_action:
              action: more-info
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-label
            variables:
              card_inactive_background_color: transparent
              font_size: 32px
              card_min_height: 45px
              text_color_zero: var(--success-color)
              text_color_non_zero: var(--error-color)
            entity: sensor.contact_sensors_open
            show_state: false
            show_name: false
            show_label: true
            label: |
              [[[
                  const state = states['sensor.contact_sensors_open'].state;
                  const roundedValue = Math.round(parseFloat(state));
                  const formattedValue = roundedValue.toString().padStart(2, '0');
                  return formattedValue;
              ]]]
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            icon: none
            size: 24px
            variables:
              card_inactive_color: var(--picard-blue)
              card_active_color: var(--error-color)
              border_top: 3px
              border_left: 3px
              border_right: 3px
              border_bottom: 3px
              font_weight: normal
            entity: binary_sensor.patio_gate_home_security_intrusion
            label: patio gate
            tap_action: more-info
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
              - custom-button-animate-press
            show_icon: true
            icon: none
            size: 24px
            variables:
              icon_active_color: transparent
              icon_inactive_color: transparent
              icon_active_background_color: var(--picard-blue)
              icon_inactive_background_color: transparent
              card_active_color: var(--picard-green)
              card_inactive_color: var(--error-color)
              card_inactive_background_color: var(--lcars-ui-secondary)
              card_active_background_color: var(--picard-starlight)
              lcars_color: var(--error-color)
              card_width: 180px
              card_min_height: 45px
            entity: input_boolean.enable_verbal_notifications
            label: tts alerts
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            double_tap_action:
              action: none
        layout:
          grid-template-columns: 55px 160px
          grid-template-rows: auto
          grid-auto-rows: auto
          grid-template-areas: |
            "count button"
          margin: '-4px -4px 0px -4px'
          card_margin: 0
          padding: 0
      - type: custom:layout-card
        layout_type: custom:grid-layout
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
            variables:
              text_justify: center
              font_size: 26px
              font_weight: bold
              text_padding_bottom: 5px
              text_color_zero: var(--error-color)
              text_color_non_zero: var(--picard-starlight)
            entity: sensor.cats_home
            show_state: false
            show_name: false
            show_label: true
            label: |
              [[[
                  const state = states['sensor.cats_home'].state;
                  const roundedValue = Math.round(parseFloat(state));
                  const formattedValue = roundedValue.toString().padStart(2, '0');
                  return formattedValue;
              ]]]
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            variables:
              card_active_color: var(--picard-blue)
              border_top: 3px
              border_left: 3px
              border_right: 3px
              border_bottom: 3px
              font_weight: normal
            state:
              - id: state_on
                value: home
              - id: state_off
                value: not_home
            entity: person.dexter
            label: the dex
            tap_action:
              action: more-info
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
            variables:
              text_justify: center
              font_size: 26px
              font_weight: bold
              text_padding_bottom: 5px
              text_color_zero: var(--success-color)
              text_color_non_zero: var(--error-color)
            entity: sensor.contact_sensors_open
            show_state: false
            show_name: false
            show_label: true
            label: |
              [[[
                  const state = states['sensor.contact_sensors_open'].state;
                  const roundedValue = Math.round(parseFloat(state));
                  const formattedValue = roundedValue.toString().padStart(2, '0');
                  return formattedValue;
              ]]]
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            icon: none
            size: 24px
            variables:
              card_inactive_color: var(--picard-blue)
              card_active_color: var(--error-color)
              border_top: 3px
              border_left: 3px
              border_right: 3px
              border_bottom: 3px
              font_weight: normal
            entity: binary_sensor.patio_gate_home_security_intrusion
            label: patio gate
            tap_action: more-info
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
            variables:
              text_justify: center
              font_size: 26px
              font_weight: bold
              text_padding_bottom: 5px
            entity: climate.living_room
            show_state: false
            show_name: false
            show_label: true
            label: |
              [[[
                  const state = states['sensor.home_average_temperature_template'].state;
                  const roundedValue = Math.round(parseFloat(state));
                  const formattedValue = roundedValue.toString().padStart(2, '0');
                  return formattedValue;
              ]]]
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-dense
              - custom-button-animate-press
            icon: none
            size: 24px
            variables:
              card_active_color: var(--picard-cyan)
              icon_active_color: transparent
              icon_inactive_color: transparent
              icon_active_background_color: var(--picard-blue)
              icon_inactive_background_color: transparent
            entity: climate.living_room
            show_state: true
            tap_action:
              action: call-service
              service: input_select.select_option
              data:
                entity_id: input_select.lcars_ui_page_selector
                option: LIGHTS II
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled-dense
            variables:
              text_justify: center
              font_size: 26px
              font_weight: bold
              text_padding_bottom: 5px
              text_color_zero: var(--picard-dark-blue)
              text_color_non_zero: var(--picard-blue)
              card_inactive_background_color: var(--lcars-ui-secondary)
              card_active_background_color: var(--picard-blue)
            entity: input_boolean.enable_verbal_notifications
            show_state: true
            show_label: false
          - type: custom:button-card
            template:
              - custom-button-lcars-button-picard-filled
              - custom-button-animate-press
            show_icon: false
            icon: none
            size: 24px
            variables:
              icon_active_color: transparent
              icon_inactive_color: transparent
              icon_active_background_color: var(--picard-blue)
              icon_inactive_background_color: transparent
              card_active_color: var(--picard-green)
              card_inactive_color: var(--error-color)
              card_inactive_background_color: var(--lcars-ui-secondary)
              card_active_background_color: var(--picard-starlight)
              lcars_color: var(--error-color)
              card_min_height: 50px
            entity: input_boolean.enable_verbal_notifications
            label: tts alerts
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            double_tap_action:
              action: none
        layout:
          grid-template-columns: 55px 160px
          grid-template-rows: auto
          grid-auto-rows: auto
          card_margin: 0
          padding: 0
          margin: '-4px -4px 0px -4px'
          grid-column-gap: 0px
  - title: diagnostics
    path: diagnostics
    type: sections
    max_columns: 3
    sections:
      - type: grid
        cards:
          - type: custom:button-card
            template:
              - custom-button-lcars-label
            label: '[[[ return "width: " + window.innerWidth; ]]]'
          - type: custom:button-card
            template:
              - custom-button-lcars-label
            label: '[[[ return "height: " + window.innerHeight; ]]]'
  - title: Cast Controls
    path: cast-controls
    icon: mdi:cast
    cards: []
    type: sections
    sections:
      - type: grid
        cards:
          - type: entities
            entities:
              - type: cast
                dashboard: dashboard-lcars
                view: diagnostics
                name: LCARS Diagnostics
            view_layout:
              position: sidebar
          - type: entities
            entities:
              - type: cast
                dashboard: dashboard-lcars
                view: cast-panel
                name: LCARS Panel
            view_layout:
              position: sidebar
  - title: cast-panel
    path: cast-panel
    type: panel
    cards:
      - type: custom:button-card
        styles:
          card:
            - border-radius: 0 !important
            - width: 1024px
            - height: 600px
            - background-image: >-
                url('https://centralplexus.unimatrix01.ca:8123/local/vendikar.jpg')
            - background-size: cover
            - font-family: >-
                Antonio, Segoe UI Variable Static Text, Segoe UI, SegoeUI,
                -apple-system,BlinkMacSystemFont, system-ui, sans-serif
          custom_fields:
            commands_offline:
              - position: absolute
            clock:
              - position: absolute
              - bottom: 0px
              - left: 0px
            button_panel:
              - position: absolute
              - left: 0px
              - top: 180px
              - width: 200px
            frigate:
              - position: absolute
              - width: 570px
              - bottom: 0px
              - right: 0px
              - border-radius: 10px !important
            upper_elbow:
              - position: absolute
              - left: 0px
              - top: '-10px'
            header_buttons:
              - position: absolute
              - top: 0px
              - right: 0px
            dpad:
              - position: absolute
              - left: 225px
              - top: 75px
            lower_elbow:
              - position: absolute
              - left: 0px
              - bottom: 0px
        custom_fields:
          lower_elbow:
            card:
              type: custom:button-card
              styles:
                card:
                  - background: transparent
                  - height: 115px
                  - width: 195px
                  - border-radius: 0 !important
                custom_fields:
                  left_bar:
                    - position: absolute
                    - left: 0
                    - bottom: 0
                  right_bar:
                    - position: absolute
                    - right: 0
                    - bottom: 0
              custom_fields:
                left_bar:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-button-picard-filled
                    variables:
                      card_height: 175px
                      card_width: 45px
                      card_inactive_background_color: var(--lcars-ui-tertiary)
                right_bar:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-button-picard-filled
                    variables:
                      card_height: 175px
                      card_width: 143px
                      card_inactive_background_color: var(--lcars-card-bottom-color)
          dpad:
            card:
              type: custom:button-card
              template: custom-button-lcars-dpad
              variables:
                card_size: 210px
                dpad_center_entity: null
                dpad_center_entity_active_state: 'on'
                dpad_up_entity: input_boolean.lcars_ui_fullscreen
                dpad_up_entity_active_state: 'on'
                dpad_up_left_entity: input_boolean.enable_verbal_notifications
                dpad_up_left_entity_active_state: 'on'
                dpad_up_left_show_label: true
                dpad_up_left_label: null
                dpad_up_left_show_name: false
                dpad_up_left_show_state: false
                dpad_up_right_entity: null
                dpad_up_right_entity_active_state: 'on'
                dpad_up_right_show_label: true
                dpad_up_right_label: null
                dpad_up_right_show_name: false
                dpad_up_right_show_state: false
                dpad_down_entity: null
                dpad_down_entity_active_state: 'on'
                dpad_down_left_entity: null
                dpad_down_left_entity_active_state: 'on'
                dpad_down_left_show_label: true
                dpad_down_left_label: null
                dpad_down_left_show_name: false
                dpad_down_left_show_state: false
                dpad_down_right_entity: null
                dpad_down_right_entity_active_state: 'on'
                dpad_down_right_show_label: true
                dpad_down_right_label: null
                dpad_down_right_show_name: false
                dpad_down_right_show_state: false
                dpad_left_entity: null
                dpad_left_entity_active_state: 'on'
                dpad_right_entity: null
                dpad_right_entity_active_state: 'on'
          upper_elbow:
            card:
              type: custom:button-card
              styles:
                card:
                  - background: transparent
                  - height: 180px
                  - width: 275px
                  - border-radius: 0 !important
                custom_fields:
                  inner_elbow:
                    - position: absolute
                    - top: 0
                    - left: 0
              custom_fields:
                outer_elbow:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-header-picard
                    variables:
                      card_height: 200px
                      card_inner_border_factor: 1.4
                      card_inner_border_width: 50px
                      picard_lcars_outer_color: var(--lcars-ui-secondary)
                      picard_lcars_inner_color: var(--lcars-ui-primary)
                      picard_border_ratio_factor: 1.27
                      card_border_top_left_radius: 160px
                      picard_border_gap: 6px
                      picard_lcars_outer_border_top: 45px
                      picard_lcars_inner_border_top: 0px
                      picard_lcars_outer_border_left: 45px
                      picard_lcars_inner_border_left: 145px
                      picard_lcars_inner_border_factor: 1.37
          header_buttons:
            card:
              type: custom:button-card
              styles:
                card:
                  - background: black
                  - height: 45px
                  - width: 740px
                  - border-radius: 0 !important
                  - font-family: >-
                      Antonio, Segoe UI Variable Static Text, Segoe UI, SegoeUI,
                      -apple-system,BlinkMacSystemFont, system-ui,
                      sans-serif        
                custom_fields:
                  header_1_top:
                    - position: absolute
                    - left: 0px
                    - top: 0px
                  header_2_top:
                    - position: absolute
                    - left: 185px
                    - top: 0px
                  header_3_top:
                    - position: absolute
                    - left: 370px
                    - top: 0px
                  header_4_top:
                    - position: absolute
                    - left: 555px
                    - top: 0px
              custom_fields:
                header_1_top:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-button-picard-filled-dense
                      - custom-button-animate-press
                      - custom-button-lcars-button-picard-label-se
                    variables:
                      card_active_color: var(--picard-green)
                      card_inactive_color: var(--error-color)
                      card_inactive_background_color: var(--error-color)
                      card_active_background_color: var(--picard-cyan)
                      lcars_color: var(--error-color)
                      card_width: 180px
                      card_min_height: 45px
                    state:
                      - id: state_on
                        value: home
                      - id: state_off
                        value: not_home
                    entity: person.dexter
                    label: the dex
                    tap_action:
                      action: more-info
                    hold_action:
                      action: none
                    double_tap_action:
                      action: none
                header_2_top:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-button-picard-filled-dense
                      - custom-button-animate-press
                      - custom-button-lcars-button-picard-label-se
                    variables:
                      card_active_color: var(--picard-green)
                      card_inactive_color: var(--error-color)
                      card_inactive_background_color: var(--lcars-ui-secondary)
                      card_active_background_color: var(--warning-color)
                      lcars_color: var(--error-color)
                      card_width: 180px
                      card_min_height: 45px
                    state:
                      - id: state_on
                        value: home
                      - id: state_off
                        value: not_home
                    entity: person.luna
                    label: luna
                    tap_action:
                      action: more-info
                    hold_action:
                      action: none
                    double_tap_action:
                      action: none
                header_3_top:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-button-picard-filled-dense
                      - custom-button-animate-press
                      - custom-button-lcars-button-picard-label-se
                    variables:
                      icon_active_color: transparent
                      icon_inactive_color: transparent
                      icon_active_background_color: var(--picard-blue)
                      icon_inactive_background_color: transparent
                      card_active_color: var(--picard-green)
                      card_inactive_color: var(--error-color)
                      card_inactive_background_color: var(--lcars-ui-secondary)
                      card_active_background_color: var(--picard-starlight)
                      lcars_color: var(--error-color)
                      card_width: 180px
                      card_min_height: 45px
                    entity: input_boolean.enable_verbal_notifications
                    label: tts alerts
                    tap_action:
                      action: toggle
                    hold_action:
                      action: more-info
                    double_tap_action:
                      action: none
                header_4_top:
                  card:
                    type: custom:button-card
                    template:
                      - custom-button-lcars-button-picard-filled
                      - custom-button-animate-press
                      - custom-button-lcars-button-picard-label-se
                    entity: binary_sensor.patio_gate_home_security_intrusion
                    label: patio gate
                    variables:
                      card_min_height: 45px
                      card_width: 180px
                      card_inactive_color: var(--picard-blue)
                      card_inactive_background_color: var(--picard-blue)
                      card_active_color: var(--error-color)
                      card_active_background_color: var(--error-color)
                      lcars_color: var(--error-color)
                    tap_action: more-info
                    hold_action:
                      action: none
                    double_tap_action:
                      action: none
          clock:
            card:
              type: custom:button-card
              template:
                - custom-button-lcars-button-picard-filled
              variables:
                card_width: 200px
                card_height: 120px
                card_active_color: var(--picard-green)
                card_inactive_color: var(--error-color)
                card_inactive_background_color: rgba(0,0,0,0.45)
                card_active_background_color: transparent
                lcars_color: var(--error-color)
                card_min_height: 120px
                font_size: 80px
                font_weight: nomral
                text_color_on: var(--picard-cyan)
                text_color_off: var(--picard-cyan)
                text_justify: center
                text_padding_top: 0px
                text_padding_left: 0px
                text_padding_right: 5px
                text_padding_bottom: 10px
              entity: sensor.time
              show_state: true
          button_panel:
            card:
              type: custom:layout-card
              layout_type: custom:grid-layout
              cards:
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                  variables:
                    text_justify: center
                    font_size: 26px
                    font_weight: bold
                    text_padding_bottom: 5px
                    text_color_zero: var(--picard-dark-blue)
                    text_color_non_zero: var(--picard-blue)
                    card_inactive_background_color: var(--lcars-ui-secondary)
                    card_active_background_color: var(--picard-blue)
                  entity: input_boolean.dreamview_switch
                  show_state: true
                  show_label: false
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled
                    - custom-button-animate-press
                  show_icon: false
                  icon: none
                  size: 24px
                  variables:
                    icon_active_color: transparent
                    icon_inactive_color: transparent
                    icon_active_background_color: var(--picard-blue)
                    icon_inactive_background_color: transparent
                    card_active_color: var(--picard-green)
                    card_inactive_color: var(--error-color)
                    card_inactive_background_color: var(--lcars-ui-secondary)
                    card_active_background_color: var(--picard-starlight)
                    lcars_color: var(--error-color)
                    card_min_height: 50px
                  entity: input_boolean.dreamview_switch
                  label: dreamview
                  tap_action:
                    action: toggle
                  hold_action:
                    action: more-info
                  double_tap_action:
                    action: none
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                  variables:
                    text_justify: center
                    font_size: 26px
                    font_weight: bold
                    text_padding_bottom: 5px
                    text_color_zero: var(--picard-blue)
                    text_color_non_zero: var(--error-color)
                  entity: sensor.contact_sensors_open
                  show_state: false
                  show_name: false
                  show_label: true
                  label: |
                    [[[
                        const state = states['sensor.contact_sensors_open'].state;
                        const roundedValue = Math.round(parseFloat(state));
                        const formattedValue = roundedValue.toString().padStart(2, '0');
                        return formattedValue;
                    ]]]
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                    - custom-button-animate-press
                  icon: none
                  size: 24px
                  variables:
                    card_inactive_color: var(--picard-blue)
                    card_inactive_background_color: var(--picard-blue)
                    card_active_color: var(--error-color)
                    card_active_background_color: var(--error-color)
                    border_top: 3px
                    border_left: 3px
                    border_right: 3px
                    border_bottom: 3px
                    font_weight: normal
                  entity: binary_sensor.patio_gate_home_security_intrusion
                  label: patio gate
                  tap_action: more-info
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                  variables:
                    text_justify: center
                    font_size: 26px
                    font_weight: bold
                    text_padding_bottom: 5px
                  entity: climate.living_room
                  show_state: false
                  show_name: false
                  show_label: true
                  label: |
                    [[[
                        const state = states['sensor.home_average_temperature_template'].state;
                        const roundedValue = Math.round(parseFloat(state));
                        const formattedValue = roundedValue.toString().padStart(2, '0');
                        return formattedValue;
                    ]]]
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-dense
                    - custom-button-animate-press
                  icon: none
                  size: 24px
                  variables:
                    card_active_color: var(--picard-cyan)
                    icon_active_color: transparent
                    icon_inactive_color: transparent
                    icon_active_background_color: var(--picard-blue)
                    icon_inactive_background_color: transparent
                  entity: climate.living_room
                  show_state: true
                  tap_action:
                    action: call-service
                    service: input_select.select_option
                    data:
                      entity_id: input_select.lcars_ui_page_selector
                      option: LIGHTS II
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                  variables:
                    text_justify: center
                    font_size: 26px
                    font_weight: bold
                    text_padding_bottom: 5px
                    text_color_zero: var(--picard-dark-blue)
                    text_color_non_zero: var(--picard-blue)
                    card_inactive_background_color: var(--lcars-ui-secondary)
                    card_active_background_color: var(--picard-blue)
                  entity: input_boolean.enable_verbal_notifications
                  show_state: true
                  show_label: false
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled
                    - custom-button-animate-press
                  show_icon: false
                  icon: none
                  size: 24px
                  variables:
                    icon_active_color: transparent
                    icon_inactive_color: transparent
                    icon_active_background_color: var(--picard-blue)
                    icon_inactive_background_color: transparent
                    card_active_color: var(--picard-green)
                    card_inactive_color: var(--error-color)
                    card_inactive_background_color: var(--lcars-ui-secondary)
                    card_active_background_color: var(--picard-starlight)
                    lcars_color: var(--error-color)
                    card_min_height: 50px
                  entity: input_boolean.enable_verbal_notifications
                  label: tts alerts
                  tap_action:
                    action: toggle
                  hold_action:
                    action: more-info
                  double_tap_action:
                    action: none
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled-dense
                  variables:
                    text_justify: center
                    font_size: 26px
                    font_weight: bold
                    text_padding_bottom: 5px
                    text_color_zero: var(--picard-dark-blue)
                    text_color_non_zero: var(--picard-blue)
                    card_inactive_background_color: var(--lcars-ui-secondary)
                    card_active_background_color: var(--picard-blue)
                  entity: input_boolean.enable_verbal_notifications
                  show_state: true
                  show_label: false
                - type: custom:button-card
                  template:
                    - custom-button-lcars-button-picard-filled
                    - custom-button-animate-press
                  show_icon: false
                  icon: none
                  size: 24px
                  variables:
                    icon_active_color: transparent
                    icon_inactive_color: transparent
                    icon_active_background_color: var(--picard-blue)
                    icon_inactive_background_color: transparent
                    card_active_color: var(--picard-green)
                    card_inactive_color: var(--error-color)
                    card_inactive_background_color: var(--lcars-ui-secondary)
                    card_active_background_color: var(--picard-starlight)
                    lcars_color: var(--error-color)
                    card_min_height: 50px
                  entity: input_boolean.enable_verbal_notifications
                  label: tts alerts
                  tap_action:
                    action: toggle
                  hold_action:
                    action: more-info
                  double_tap_action:
                    action: none
              layout:
                grid-template-columns: 53px 150px
                grid-template-rows: auto
                grid-auto-rows: auto
                card_margin: 0
                padding: 0
                margin: '-4px -4px 0px -4px'
                grid-column-gap: 0px
          frigate:
            card:
              type: custom:frigate-card
              cameras:
                - go2rtc:
                    modes:
                      - webrtc
                    stream: front_door_sub
                  camera_entity: camera.front_door
                  title: Front Door
                  live_provider: go2rtc
                  dependencies:
                    cameras:
                      - front_door_hd
                - hide: true
                  camera_entity: camera.front_door
                  id: front_door_hd
                  title: Front Door HD
                  go2rtc:
                    stream: front_door
                    modes:
                      - webrtc
                  live_provider: go2rtc
                - go2rtc:
                    modes:
                      - webrtc
                    stream: living_room_sub
                  camera_entity: camera.living_room
                  title: Living Room
                  live_provider: go2rtc
                  dependencies:
                    cameras:
                      - living_room_hd
                - hide: true
                  camera_entity: camera.living_room
                  id: living_room_hd
                  title: Living Room HD
                  go2rtc:
                    stream: living_room
                    modes:
                      - webrtc
                  live_provider: go2rtc
                - go2rtc:
                    modes:
                      - webrtc
                    stream: office_sub
                  camera_entity: camera.office
                  title: Office
                  live_provider: go2rtc
                  dependencies:
                    cameras:
                      - office_hd
                - hide: true
                  camera_entity: camera.office
                  id: office_hd
                  title: Office HD
                  go2rtc:
                    stream: office
                    modes:
                      - webrtc
                  live_provider: go2rtc
              view:
                scan:
                  enabled: false
                default: live
                dark_mode: 'on'
              live:
                preload: false
                controls:
                  thumbnails:
                    mode: none
                    show_details: false
                  timeline:
                    mode: none
                    style: stack
                  title:
                    duration_seconds: 5
                    mode: popup-bottom-right
              timeline:
                controls:
                  thumbnails:
                    mode: none
                show_recordings: false
              menu:
                style: hidden
                position: top
                alignment: top
                buttons:
                  mute:
                    enabled: true
                  substreams:
                    icon: mdi:high-definition-box
                  recordings:
                    enabled: true
                  microphone:
                    enabled: true
              elements:
                - type: custom:frigate-card-conditional
                  conditions:
                    camera:
                      - camera.front_door
                  elements:
                    - type: custom:frigate-card-menu-submenu
                      priority: 100
                      icon: mdi:cog
                      items:
                        - title: Detect
                          entity: switch.front_door_detect
                          tap_action:
                            action: toggle
                        - title: Recordings
                          entity: switch.front_door_recordings
                          tap_action:
                            action: toggle
                        - title: Snapshots
                          entity: switch.front_door_snapshots
                          tap_action:
                            action: toggle
                - type: custom:frigate-card-conditional
                  conditions:
                    camera:
                      - camera.living_room
                  elements:
                    - type: custom:frigate-card-menu-submenu
                      priority: 100
                      icon: mdi:cog
                      items:
                        - title: Detect
                          entity: switch.living_room_detect
                          tap_action:
                            action: toggle
                        - title: Recordings
                          entity: switch.living_room_recordings
                          tap_action:
                            action: toggle
                        - title: Snapshots
                          entity: switch.living_room_snapshots
                          tap_action:
                            action: toggle
              media_gallery:
                controls:
                  thumbnails:
                    show_details: false
                    size: 75
                    show_timeline_control: false
                    show_download_control: false
                    show_favorite_control: false
                  filter:
                    mode: none
              media_viewer:
                controls:
                  thumbnails:
                    mode: below
                  timeline:
                    mode: below
                    style: stack
              dimensions:
                aspect_ratio_mode: dynamic
          commands_offline:
            card:
              type: conditional
              conditions:
                - condition: state
                  entity: input_boolean.lcars_ui_commands_online
                  state_not: 'on'
              card:
                type: custom:button-card
                styles:
                  card:
                    - width: 1024px
                    - height: 600px
                    - background: rgba(200,0,0,0.5)
                  custom_fields:
                    text:
                      - position: absolute
                      - top: 50%
                      - left: 50%
                custom_fields:
                  text:
                    card:
                      type: custom:button-card
                      template:
                        - custom-button-lcars-button-picard
                      label: fuck
                      variables:
                        card_height: 80px
                        card_width: 120px
                        lcars_color: red
                        font_size: 40px
                        font_weight: bold
                        text_padding_top: 0px
                        text_padding_bottom: 5px
                        text_transform: uppercase
                        text_align: center
                        text_justify: center
                        text_color_on: var(--lcars-green)
                        text_color_off: var(--lcars-blue)
                        text_color_zero: var(--lcars-green)
                        text_color_non_zero: var(--lcars-blue)
                        text_color_hvac_heat: var(--lcars-orange)
                        text_color_hvac_cool: var(--lcars-blue)
                        text_color_hvac_other: var(--lcars-purple)
    theme: LCARS Picard II
